{
    "openapi": "3.0.0",
    "info": {
        "title": "PassFort API",
        "version": "4.0.0",
        "contact": {
            "name": "PassFort Support",
            "email": "support@passfort.com"
        }
    },
    "servers": [
        {
            "url": "https://api.passfort.com/4.0",
            "description": "Production server"
        }
    ],
    "x-tagGroups": [
        {
            "name": "Basics",
            "tags": [
                "Profiles",
                "Applications",
                "Checks",
                "Tasks",
                "Search",
                "Document Images",
                "Address Search"
            ]
        },
        {
            "name": "Advanced",
            "tags": [
                "Collect",
                "Audit",
                "Events",
                "Tags",
                "Other"
            ]
        }
    ],
    "components": {
        "securitySchemes": {
            "API_Key_Header": {
                "type": "apiKey",
                "name": "apikey",
                "in": "header"
            },
            "API_Key_Query_Parameter": {
                "type": "apiKey",
                "name": "apikey",
                "in": "query"
            }
        },
        "schemas": {
            "Address": {
                "type": "object",
                "description": "A single address, which can either be a free-form string, or structured data",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/FreeformAddress"
                    },
                    {
                        "$ref": "#/components/schemas/StructuredAddress"
                    }
                ],
                "title": "Address",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "FREEFORM": "#/components/schemas/FreeformAddress",
                        "STRUCTURED": "#/components/schemas/StructuredAddress"
                    }
                }
            },
            "AddressHistory": {
                "description": "A list of addresses in which the individual has lived. Each of these can have an approximate start and end date.  Addresses are ordered by `start_date`. If two addresses have the same `start_date`, `end_date` will order them. An address with no `start_date` and `end_date` will be assumed to be current. If multiple addresses have no `start_date` and `end_date` then their order will be random.",
                "type": "array",
                "items": {
                    "description": "An address with optional start/end dates.",
                    "type": "object",
                    "oneOf": [
                        {
                            "title": "Dated",
                            "properties": {
                                "address": {
                                    "$ref": "#/components/schemas/Address"
                                },
                                "start_date": {
                                    "$ref": "#/components/schemas/ApproxDate"
                                },
                                "end_date": {
                                    "$ref": "#/components/schemas/ApproxDate"
                                }
                            },
                            "required": [
                                "start_date"
                            ]
                        },
                        {
                            "title": "Undated",
                            "properties": {
                                "address": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            },
                            "additionalProperties": false
                        }
                    ],
                    "required": [
                        "address"
                    ]
                },
                "title": "AddressHistory"
            },
            "ApiKey": {
                "type": "object",
                "description": "Api key details",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A description of the key"
                    },
                    "expiry": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "title": "ApiKey",
                "nullable": true
            },
            "ApplicationDateField": {
                "type": "string",
                "description": "Application filter date fields",
                "enum": [
                    "APPLIED",
                    "FLAG_CHANGE"
                ],
                "title": "ApplicationDateField"
            },
            "ApplicationFilterType": {
                "type": "string",
                "description": "Application filter type",
                "enum": [
                    "STRING",
                    "STRING_PAIR",
                    "ID",
                    "DATE"
                ],
                "title": "ApplicationFilterType"
            },
            "ApplicationIdField": {
                "type": "string",
                "description": "Application filter id fields",
                "enum": [
                    "PRODUCT",
                    "ASSIGNEE"
                ],
                "title": "ApplicationIdField"
            },
            "ApplicationStringField": {
                "type": "string",
                "description": "Application filter string fields",
                "enum": [
                    "STATUS",
                    "FLAG"
                ],
                "title": "ApplicationStringField"
            },
            "ApprovalBlocker": {
                "type": "object",
                "description": "Blocker preventing the profile application being approved",
                "properties": {
                    "blocker_type": {
                        "$ref": "#/components/schemas/ApprovalBlockerType"
                    }
                },
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/ApprovalBlockerUnresolvedEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ApprovalBlockerSuspendedProfile"
                    },
                    {
                        "$ref": "#/components/schemas/ApprovalBlockerIncompleteTask"
                    },
                    {
                        "$ref": "#/components/schemas/ApprovalBlockerUndeterminedRisk"
                    }
                ],
                "title": "ApprovalBlocker"
            },
            "ApprovalBlockerIncompleteTask": {
                "type": "object",
                "description": "Incomplete Task preventing the profile application being approved",
                "properties": {
                    "blocker_type": {
                        "type": "string",
                        "enum": [
                            "INCOMPLETE_TASK"
                        ],
                        "description": "The nature of the blocker"
                    },
                    "task_type": {
                        "$ref": "#/components/schemas/TaskType"
                    },
                    "task_variant": {
                        "$ref": "#/components/schemas/TaskVariant"
                    }
                },
                "title": "ApprovalBlockerIncompleteTask"
            },
            "ApprovalBlockerSuspendedProfile": {
                "type": "object",
                "description": "Suspended profile preventing the profile application being approved",
                "properties": {
                    "blocker_type": {
                        "type": "string",
                        "enum": [
                            "SUSPENDED_PROFILE"
                        ],
                        "description": "The nature of the blocker"
                    }
                },
                "title": "ApprovalBlockerSuspendedProfile"
            },
            "ApprovalBlockerType": {
                "type": "string",
                "description": "The nature of the blocker",
                "enum": [
                    "INCOMPLETE_TASK",
                    "UNRESOLVED_EVENT",
                    "SUSPENDED_PROFILE",
                    "UNDETERMINED_RISK"
                ],
                "title": "ApprovalBlockerType"
            },
            "ApprovalBlockerUndeterminedRisk": {
                "type": "object",
                "description": "Risk score is undetermined, or stale and pending recalculation",
                "properties": {
                    "blocker_type": {
                        "type": "string",
                        "enum": [
                            "UNDETERMINED_RISK"
                        ],
                        "description": "The nature of the blocker"
                    }
                },
                "title": "ApprovalBlockerUndeterminedRisk"
            },
            "ApprovalBlockerUnresolvedEvent": {
                "type": "object",
                "description": "Unresolved event preventing the profile application being approved",
                "properties": {
                    "blocker_type": {
                        "type": "string",
                        "enum": [
                            "UNRESOLVED_EVENT"
                        ],
                        "description": "The nature of the blocker"
                    },
                    "event_id": {
                        "$ref": "#/components/schemas/UUID"
                    }
                },
                "title": "ApprovalBlockerUnresolvedEvent"
            },
            "ApproxDate": {
                "description": "An approximate date with a year and month, but the exact day is unknown",
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}$",
                "title": "ApproxDate",
                "example": "1999-03"
            },
            "AreaOfActivity": {
                "description": "An area that a business operates in",
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "A location that the business operates within"
                    }
                },
                "title": "AreaOfActivity"
            },
            "Associate": {
                "description": "An associate to a PEP or Sanction",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the associate"
                    },
                    "association": {
                        "type": "string",
                        "description": "Their association"
                    },
                    "is_pep": {
                        "type": "boolean",
                        "description": "Associate of PEP"
                    },
                    "was_pep": {
                        "type": "boolean",
                        "description": "Was the associate of PEP"
                    },
                    "is_sanction": {
                        "type": "boolean",
                        "description": "Associate of Sanction"
                    },
                    "was_sanction": {
                        "type": "boolean",
                        "description": "Was the associate of Sanction"
                    },
                    "deceased_dates": {
                        "type": "array",
                        "description": "Reported death dates",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    },
                    "inactive_as_rca_related_to_pep_dates": {
                        "type": "array",
                        "description": "Dates of relation to PEP cessation",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    },
                    "inactive_as_pep_dates": {
                        "type": "array",
                        "description": "Dates of PEP inactivity",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    }
                },
                "title": "Associate"
            },
            "AssociatedEntity": {
                "description": "An individual or company associated with another company",
                "type": "object",
                "properties": {
                    "resolver_id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "entity_type": {
                        "$ref": "#/components/schemas/EntityType"
                    },
                    "relationship": {
                        "type": "string",
                        "description": "For authorized persons, the relationship they have with the company"
                    },
                    "appointed_on": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "resigned_on": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "original_role": {
                        "type": "string",
                        "description": "For company officers, description of their role within the company"
                    },
                    "total_percentage": {
                        "description": "For shareholders and beneficial owners, the total percentage ownership they have of the company",
                        "type": "number"
                    },
                    "shareholdings": {
                        "type": "array",
                        "description": "For shareholders, a detailed break-down of their ownership by share class",
                        "items": {
                            "$ref": "#/components/schemas/Shareholding"
                        }
                    },
                    "notified_on": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "ceased_on": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "natures_of_control": {
                        "type": "array",
                        "description": "For persons of significant control, the type of control they have on the company",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kind": {
                        "type": "string",
                        "description": "For persons of significant control, the type of person of control (company, person, secure-person etc.)"
                    },
                    "task_variant_ids": {
                        "type": "array",
                        "description": "IDs of the task variants the associated entity relates to",
                        "items": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                },
                "oneOf": [
                    {
                        "type": "object",
                        "properties": {
                            "immediate_data": {
                                "$ref": "#/components/schemas/EntityData"
                            },
                            "provider_name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "immediate_data"
                        ],
                        "title": "Immediate"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "merged_resolver_ids": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UUID"
                                }
                            },
                            "linked_profile": {
                                "type": "object",
                                "description": "ID of the associated profile",
                                "properties": {
                                    "id": {
                                        "$ref": "#/components/schemas/UUID"
                                    }
                                }
                            }
                        },
                        "required": [
                            "linked_profile"
                        ],
                        "title": "Linked"
                    }
                ],
                "required": [
                    "entity_type"
                ],
                "title": "AssociatedEntity"
            },
            "AssociatedRole": {
                "description": "Role this associated entity has with the customer",
                "type": "string",
                "enum": [
                    "AUTHORIZED_PERSON",
                    "UNAUTHORIZED_PERSON",
                    "DIRECTOR",
                    "COMPANY_SECRETARY",
                    "SHAREHOLDER",
                    "PARTNER",
                    "TRUSTEE",
                    "BENEFICIAL_OWNER",
                    "RESIGNED_OFFICER",
                    "OTHER"
                ],
                "title": "AssociatedRole"
            },
            "AuditItem": {
                "type": "object",
                "description": "An audit item",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "profileID": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "action": {
                        "type": "string",
                        "enum": [
                            "added-a-tag",
                            "added-a-task",
                            "added-product",
                            "attach-file",
                            "auto-decision",
                            "risk-auto-reject-application",
                            "comment",
                            "completed-a-task",
                            "completed-stage",
                            "created-profile",
                            "download-audit-file",
                            "download-audit-report",
                            "downloaded-a-document",
                            "event-resolution",
                            "instructed-check",
                            "linked-profile",
                            "manual-decision",
                            "profile-application-status-changed",
                            "removed-a-tag",
                            "replace-collected-data",
                            "requested-data",
                            "revert-decision",
                            "sanctions-false-positive",
                            "submitted-data",
                            "uncompleted-a-task",
                            "unlinked-profile",
                            "updated-check",
                            "uploaded-a-document",
                            "view",
                            "viewed-profile",
                            "event-bulk-resolution",
                            "added-a-task-note",
                            "deleted-a-task-note",
                            "added-a-file",
                            "application-assignment-created",
                            "application-assignment-deleted",
                            "application-assignment-reassigned",
                            "comment-deleted",
                            "added-event",
                            "profile-status-changed",
                            "sanctions-whitelist",
                            "origin-profile-changed",
                            "affiliate-added",
                            "affiliate-removed"
                        ],
                        "description": "Action that took place"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "apikey": {
                        "$ref": "#/components/schemas/ApiKey"
                    },
                    "timestamp": {
                        "type": "number",
                        "description": "A Unix Timestamp of when then action took place"
                    },
                    "message": {
                        "type": "string",
                        "description": "A message giving more details about the action",
                        "nullable": true
                    },
                    "ref_data": {
                        "type": "object",
                        "description": "Miscellaneous data associated with action",
                        "nullable": true
                    },
                    "filename": {
                        "type": "string",
                        "description": "name of associated file",
                        "nullable": true
                    },
                    "filehash": {
                        "type": "string",
                        "description": "Hash of associated file",
                        "nullable": true
                    },
                    "signature": {
                        "type": "string",
                        "description": "Signature of encrypted file",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "profileID",
                    "action",
                    "user",
                    "timestamp",
                    "message",
                    "ref_data",
                    "filename",
                    "signature"
                ],
                "title": "AuditItem"
            },
            "BankAccount": {
                "description": "Details for a bank account",
                "type": "object",
                "properties": {
                    "country": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "type": {
                        "$ref": "#/components/schemas/BankAccountType"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/UKBankAccount"
                    }
                ],
                "required": [
                    "type",
                    "country"
                ],
                "title": "BankAccount"
            },
            "BankAccountComment": {
                "description": "Comment emitted during bank account verification",
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/BankAccountCommentType"
                    },
                    "message": {
                        "type": "string",
                        "description": "A comment about the bank account"
                    },
                    "component": {
                        "$ref": "#/components/schemas/BankAccountComponent"
                    }
                },
                "required": [
                    "message"
                ],
                "title": "BankAccountComment"
            },
            "BankAccountCommentType": {
                "type": "string",
                "description": "Bank account comment type",
                "enum": [
                    "COMMENT",
                    "MATCH",
                    "MISMATCH",
                    "WARNING"
                ],
                "title": "BankAccountCommentType"
            },
            "BankAccountType": {
                "type": "string",
                "description": "Bank account type",
                "enum": [
                    "UK_ACCOUNT"
                ],
                "title": "BankAccountType"
            },
            "BankAccountComponent": {
                "type": "string",
                "description": "Bank account number component",
                "enum": [
                    "UK_SORT_CODE",
                    "UK_ACCOUNT_NUMBER"
                ],
                "title": "BankAccountComponent"
            },
            "BankAccountVerification": {
                "description": "Bank account verification",
                "type": "object",
                "properties": {
                    "performed_on": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "match": {
                        "type": "boolean",
                        "description": "If the bank was verified and is a match"
                    },
                    "bank_account": {
                        "$ref": "#/components/schemas/BankAccount"
                    },
                    "comments": {
                        "description": "Comments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccountComment"
                        }
                    }
                },
                "required": [
                    "bank_account",
                    "match",
                    "performed_on",
                    "comments"
                ],
                "title": "BankAccountVerification"
            },
            "Base64": {
                "description": "Binary data encoded in base64 or as a data URI",
                "type": "string",
                "pattern": "^(([a-zA-Z0-9+/]{4})*([a-zA-Z0-9+/]{3}=|[a-zA-Z0-9+/]{2}==)?|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$",
                "title": "Base64"
            },
            "CapabilityType": {
                "description": "The set of capabilities which can be granted in the permissions system",
                "enum": [
                    "ROOT",
                    "EDIT_PROFILE",
                    "READ_PROFILE",
                    "CREATE_PROFILE",
                    "DELETE_PROFILE",
                    "CREATE_ROLE",
                    "EDIT_ROLE",
                    "DELETE_ROLE",
                    "EDIT_PROFILE_COLLECTED_DATA",
                    "READ_PROFILE_COLLECTED_DATA",
                    "READ_PROFILE_COLLECTION_STEPS",
                    "EDIT_PROFILE_COLLECTION_STEPS",
                    "EDIT_DOCUMENT_IMAGE",
                    "READ_DOCUMENT_IMAGE",
                    "UPLOAD_DOCUMENT_IMAGE",
                    "PURCHASE_FILING_DOCUMENT",
                    "CREATE_TASK_NOTE",
                    "DELETE_TASK_NOTE",
                    "CUSTOM_AUTHOR_NOTE",
                    "ASSIGN_PRODUCT_APPLICATION",
                    "READ_PRODUCT_APPLICATION",
                    "CREATE_PRODUCT_APPLICATION",
                    "EDIT_PRODUCT_APPLICATION_STATUS",
                    "CREATE_PROFILE_TASK",
                    "EDIT_CONVERSATION",
                    "RUN_CHECK",
                    "CREATE_PROFILE_TAG",
                    "DELETE_PROFILE_TAG",
                    "READ_TASK",
                    "EDIT_TASK_COMPLETION_STATUS",
                    "MANAGE_PEP_AND_SANCTIONS_MATCHES",
                    "SEARCH",
                    "CREATE_USER",
                    "VIEW_USERS",
                    "VIEW_USER",
                    "EDIT_USER",
                    "EDIT_USER_ROLE",
                    "EDIT_USER_PASSWORD",
                    "EDIT_USER_FILTER_SETS",
                    "VIEW_APPLICATION",
                    "EDIT_PAYMENT",
                    "VIEW_CONFIG",
                    "EDIT_CONFIG",
                    "VIEW_CONFIG_CREDENTIALS",
                    "VIEW_REPORT",
                    "CREATE_REPORT",
                    "DELETE_REPORT",
                    "EDIT_REPORT"
                ],
                "title": "CapabilityType"
            },
            "CheckedDocumentField": {
                "type": "string",
                "description": "Which field(s) were being checked",
                "enum": [
                    "FIELD_GIVEN_NAMES",
                    "FIELD_FAMILY_NAME",
                    "FIELD_DOB",
                    "FIELD_NATIONALITY",
                    "FIELD_EXPIRY",
                    "FIELD_NUMBER",
                    "FIELD_GENDER",
                    "FIELD_ISSUED",
                    "FIELD_ADDRESS",
                    "FIELD_ISSUING_COUNTRY",
                    "FIELD_MRZ"
                ],
                "title": "CheckedDocumentField"
            },
            "CheckResource": {
                "description": "A single check run against a profile",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceIdentityCheck"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceDocumentVerification"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceDocumentFetch"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourcePepsAndSanctionsScreen"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceCRABankAccountVerification"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceCompanyRegistry"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceCompanyCharitiesRegistry"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceCompanyOwnership"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceCompanyFilings"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceCompanyFilingPurchase"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceCompanyPepsAndSanctionsScreen"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceIndividualManualForm"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceCompanyManualForm"
                    },
                    {
                        "$ref": "#/components/schemas/CheckResourceCompanyDocumentVerification"
                    }
                ],
                "title": "CheckResource",
                "discriminator": {
                    "propertyName": "check_type",
                    "mapping": {
                        "IDENTITY_CHECK": "#/components/schemas/CheckResourceIdentityCheck",
                        "DOCUMENT_VERIFICATION": "#/components/schemas/CheckResourceDocumentVerification",
                        "DOCUMENT_FETCH": "#/components/schemas/CheckResourceDocumentFetch",
                        "PEPS_AND_SANCTIONS_SCREEN": "#/components/schemas/CheckResourcePepsAndSanctionsScreen",
                        "CRA_BANK_ACCOUNT_VERIFICATION": "#/components/schemas/CheckResourceCRABankAccountVerification",
                        "COMPANY_REGISTRY": "#/components/schemas/CheckResourceCompanyRegistry",
                        "COMPANY_CHARITIES_REGISTRY": "#/components/schemas/CheckResourceCompanyCharitiesRegistry",
                        "COMPANY_OWNERSHIP": "#/components/schemas/CheckResourceCompanyOwnership",
                        "COMPANY_FILINGS": "#/components/schemas/CheckResourceCompanyFilings",
                        "COMPANY_FILING_PURCHASE": "#/components/schemas/CheckResourceCompanyFilingPurchase",
                        "COMPANY_PEPS_AND_SANCTIONS_SCREEN": "#/components/schemas/CheckResourceCompanyPepsAndSanctionsScreen",
                        "INDIVIDUAL_MANUAL_FORM": "#/components/schemas/CheckResourceIndividualManualForm",
                        "COMPANY_MANUAL_FORM": "#/components/schemas/CheckResourceCompanyManualForm",
                        "COMPANY_DOCUMENT_VERIFICATION": "#/components/schemas/CheckResourceCompanyDocumentVerification"
                    }
                }
            },
            "CheckResourceBase": {
                "description": "A single check run against a profile",
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "variant": {
                        "$ref": "#/components/schemas/CheckVariant"
                    },
                    "state": {
                        "$ref": "#/components/schemas/CheckState"
                    },
                    "performed_on": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "errors": {
                        "type": "array",
                        "description": "An array of errors that occurred when the check was performed. Hopefully empty!",
                        "items": {
                            "$ref": "#/components/schemas/Error"
                        }
                    },
                    "task_ids": {
                        "type": "array",
                        "description": "The tasks related to this check",
                        "items": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    "instructed_externally": {
                        "type": "boolean",
                        "description": "Whether the check ran externally and contains the formatted result"
                    },
                    "providers": {
                        "type": "array",
                        "description": "An array of records on the providers that were used to run this check",
                        "items": {
                            "type": "object",
                            "properties": {
                                "provider_name": {
                                    "type": "string",
                                    "description": "The name of a provider used to run this check"
                                },
                                "is_monitored": {
                                    "type": "boolean",
                                    "description": "If present, this flag specifies if the result from this provider is monitored."
                                }
                            }
                        }
                    }
                },
                "required": [
                    "check_type"
                ],
                "title": "CheckResourceBase"
            },
            "CheckResourceIndividualManualForm": {
                "description": "Please speak to your account manager for more information.",
                "title": "CheckResourceIndividualManualForm",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "INDIVIDUAL_MANUAL_FORM"
                                ]
                            },
                            "form_id": {
                                "type": "string",
                                "description": "The ID of the form being filled"
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/IndividualData"
                            },
                            "output_data": {
                                "$ref": "#/components/schemas/IndividualData"
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        }
                    }
                ]
            },
            "CheckResourceCompanyManualForm": {
                "description": "Please speak to your account manager for more information.",
                "title": "CheckResourceCompanyManualForm",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "COMPANY_MANUAL_FORM"
                                ]
                            },
                            "form_id": {
                                "type": "string",
                                "description": "The ID of the form being filled"
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "output_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        }
                    }
                ]
            },
            "CheckResourceCompanyFilings": {
                "description": "For details refer to [Check Reference](/reference/checks/companies/company-documentation)",
                "title": "CheckResourceCompanyFilings",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "COMPANY_FILINGS"
                                ]
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "output_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail",
                                    "Error"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        }
                    }
                ]
            },
            "CheckResourceCompanyFilingPurchase": {
                "description": "For details refer to [Check Reference](/reference/checks/companies/purchase-company-documentation)",
                "title": "CheckResourceCompanyFilingPurchase",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "COMPANY_FILING_PURCHASE"
                                ]
                            },
                            "source_id": {
                                "type": "string",
                                "description": "The document that you wish to purchase"
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "output_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail",
                                    "Error"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        }
                    }
                ]
            },
            "CheckResourceCompanyOwnership": {
                "description": "For details refer to [Check Reference](/reference/checks/companies/ownership-check)",
                "title": "CheckResourceCompanyOwnership",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "COMPANY_OWNERSHIP"
                                ]
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "output_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail",
                                    "Error",
                                    "Partial"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        }
                    }
                ]
            },
            "CheckResourceCompanyPepsAndSanctionsScreen": {
                "description": "For details refer to [Check Reference](/reference/checks/companies/peps-and-sanctions)",
                "title": "CheckResourceCompanyPepsAndSanctionsScreen",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "COMPANY_PEPS_AND_SANCTIONS_SCREEN"
                                ]
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "output_data": {
                                "type": "object",
                                "properties": {
                                    "sanctions_results": {
                                        "type": "array",
                                        "description": "The returned PEPs and Sanctions",
                                        "items": {
                                            "$ref": "#/components/schemas/CompanySanctionsResult"
                                        }
                                    },
                                    "entity_type": {
                                        "$ref": "#/components/schemas/EntityType"
                                    }
                                },
                                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time"
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Refer",
                                    "PEP",
                                    "Sanction",
                                    "Media",
                                    "Error"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings."
                            }
                        }
                    }
                ]
            },
            "CheckResourceCompanyRegistry": {
                "description": "For details refer to [Check Reference](/reference/checks/companies/registry-check)",
                "title": "CheckResourceCompanyRegistry",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "COMPANY_REGISTRY"
                                ]
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "output_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail",
                                    "Error",
                                    "Refer"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        }
                    }
                ]
            },
            "CheckResourceCompanyCharitiesRegistry": {
                "description": "Please contact your account manager for more information.",
                "title": "CheckResourceCompanyCharitiesRegistry",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "COMPANY_CHARITIES_REGISTRY"
                                ]
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "output_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail",
                                    "Error"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        }
                    }
                ]
            },
            "CheckResourceCompanyDocumentVerification": {
                "description": "Please contact your account manager for more information.",
                "title": "CheckResourceCompanyDocumentVerification",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "COMPANY_DOCUMENT_VERIFICATION"
                                ]
                            },
                            "document_id": {
                                "$ref": "#/components/schemas/UUID"
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/CompanyData"
                            },
                            "output_data": {
                                "type": "object",
                                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                                "properties": {
                                    "documents": {
                                        "type": "array",
                                        "description": "The documents checked and their results",
                                        "items": {
                                            "$ref": "#/components/schemas/Document"
                                        }
                                    },
                                    "entity_type": {
                                        "description": "Entity type the check was run on",
                                        "type": "string",
                                        "enum": [
                                            "COMPANY"
                                        ]
                                    }
                                }
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail",
                                    "Error"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        },
                        "required": [
                            "document_id"
                        ]
                    }
                ]
            },
            "CheckResourceCRABankAccountVerification": {
                "description": "For details refer to [Check Reference](/reference/checks/individuals/bank-account-verification)",
                "title": "CheckResourceCRABankAccountVerification",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "CRA_BANK_ACCOUNT_VERIFICATION"
                                ]
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/IndividualData"
                            },
                            "output_data": {
                                "type": "object",
                                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                                "properties": {
                                    "entity_type": {
                                        "description": "Entity type the check was run on",
                                        "type": "string",
                                        "enum": [
                                            "INDIVIDUAL"
                                        ]
                                    },
                                    "bank_account_verifications": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/BankAccountVerification"
                                        }
                                    },
                                    "address_history": {
                                        "$ref": "#/components/schemas/AddressHistory"
                                    }
                                }
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail",
                                    "Error"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        }
                    }
                ]
            },
            "CheckResourceDocumentVerification": {
                "description": "For details refer to [Check Reference](/reference/checks/individuals/document-verification)",
                "title": "CheckResourceDocumentVerification",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "DOCUMENT_VERIFICATION"
                                ]
                            },
                            "document_id": {
                                "$ref": "#/components/schemas/UUID"
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/IndividualData"
                            },
                            "output_data": {
                                "type": "object",
                                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                                "properties": {
                                    "documents": {
                                        "type": "array",
                                        "description": "The documents checked and their results",
                                        "items": {
                                            "$ref": "#/components/schemas/Document"
                                        }
                                    },
                                    "entity_type": {
                                        "description": "Entity type the check was run on",
                                        "type": "string",
                                        "enum": [
                                            "INDIVIDUAL"
                                        ]
                                    }
                                }
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail",
                                    "Error"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        },
                        "required": [
                            "document_id"
                        ]
                    }
                ]
            },
            "CheckResourceDocumentFetch": {
                "description": "For details refer to [Check Reference](/reference/checks/individuals/document-fetch)",
                "title": "CheckResourceDocumentFetch",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "DOCUMENT_FETCH"
                                ]
                            },
                            "source": {
                                "description": "The source the document result is being fetched from",
                                "enum": [
                                    "JUMIO",
                                    "ONFIDO"
                                ]
                            },
                            "reference": {
                                "description": "The source's document reference, refer to specific provider documentation",
                                "type": "string"
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/IndividualData"
                            },
                            "output_data": {
                                "type": "object",
                                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                                "properties": {
                                    "documents": {
                                        "type": "array",
                                        "description": "The documents checked and their results",
                                        "items": {
                                            "$ref": "#/components/schemas/Document"
                                        }
                                    },
                                    "entity_type": {
                                        "description": "Entity type the check was run on",
                                        "type": "string",
                                        "enum": [
                                            "INDIVIDUAL"
                                        ]
                                    }
                                }
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Fail",
                                    "Error"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        },
                        "required": [
                            "source",
                            "reference"
                        ]
                    }
                ]
            },
            "CheckResourceIdentityCheck": {
                "description": "For details refer to [Check Reference](/reference/checks/individuals/individual-check)",
                "title": "CheckResourceIdentityCheck",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "IDENTITY_CHECK"
                                ]
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/IndividualData"
                            },
                            "output_data": {
                                "type": "object",
                                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                                "properties": {
                                    "credit_ref": {
                                        "$ref": "#/components/schemas/CreditReference"
                                    },
                                    "db_matches": {
                                        "$ref": "#/components/schemas/DatabaseMatches"
                                    },
                                    "electronic_id_check": {
                                        "type": "object",
                                        "description": "The resulting matches of an EKYC check",
                                        "properties": {
                                            "matches": {
                                                "type": "array",
                                                "description": "List of matches for the EKYC check",
                                                "items": {
                                                    "$ref": "#/components/schemas/EKYCMatch"
                                                }
                                            }
                                        },
                                        "required": [
                                            "matches"
                                        ]
                                    },
                                    "entity_type": {
                                        "description": "Entity type the check was run on",
                                        "type": "string",
                                        "enum": [
                                            "INDIVIDUAL"
                                        ]
                                    }
                                }
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "2+2",
                                    "1+1",
                                    "Fail",
                                    "Error"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings"
                            }
                        }
                    }
                ]
            },
            "CheckResourcePepsAndSanctionsScreen": {
                "description": "For details refer to [Check Reference](/reference/checks/individuals/peps-and-sanctions)",
                "title": "CheckResourcePepsAndSanctionsScreen",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CheckResourceBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "check_type": {
                                "description": "The type of check being ran",
                                "type": "string",
                                "enum": [
                                    "PEPS_AND_SANCTIONS_SCREEN"
                                ]
                            },
                            "disable_initial_screen": {
                                "type": "boolean",
                                "description": "Defaults to `false`.  If `true` do not perform an initial screen and only monitor"
                            },
                            "disable_monitoring": {
                                "type": "boolean",
                                "description": "Defaults to `false`. If `true` ongoing monitoring will be disabled"
                            },
                            "input_data": {
                                "$ref": "#/components/schemas/IndividualData"
                            },
                            "output_data": {
                                "type": "object",
                                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                                "properties": {
                                    "sanctions_results": {
                                        "type": "array",
                                        "description": "The returned PEPs and Sanctions",
                                        "items": {
                                            "$ref": "#/components/schemas/SanctionsResult"
                                        }
                                    },
                                    "entity_type": {
                                        "description": "Entity type the check was run on",
                                        "type": "string",
                                        "enum": [
                                            "INDIVIDUAL"
                                        ]
                                    }
                                }
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Pass",
                                    "Refer",
                                    "PEP",
                                    "Sanction",
                                    "Media",
                                    "Error"
                                ],
                                "description": "The meaning of the result will depend on your provider and settings."
                            }
                        }
                    }
                ]
            },
            "CheckState": {
                "description": "The progress of the execution of a check",
                "type": "string",
                "enum": [
                    "PENDING",
                    "RUNNING",
                    "COMPLETE"
                ],
                "title": "CheckState"
            },
            "CheckType": {
                "description": "The type of a check run against a profile",
                "type": "string",
                "enum": [
                    "IDENTITY_CHECK",
                    "DOCUMENT_VERIFICATION",
                    "DOCUMENT_FETCH",
                    "PEPS_AND_SANCTIONS_SCREEN",
                    "CRA_BANK_ACCOUNT_VERIFICATION",
                    "COMPANY_REGISTRY",
                    "COMPANY_CHARITIES_REGISTRY",
                    "COMPANY_OWNERSHIP",
                    "COMPANY_FILINGS",
                    "COMPANY_FILING_PURCHASE",
                    "COMPANY_PEPS_AND_SANCTIONS_SCREEN",
                    "INDIVIDUAL_MANUAL_FORM",
                    "COMPANY_MANUAL_FORM",
                    "COMPANY_DOCUMENT_VERIFICATION"
                ],
                "title": "CheckType"
            },
            "CheckVariant": {
                "description": "The identifier of a variant of a check.",
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the check variant"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "CheckVariant"
            },
            "CollectionStep": {
                "description": "Collection steps are the data you wish to collect from a profile. In PassFort Collect the fields required to complete the step will be presented to the user. Collection steps are automatically removed from a profile when the data they collect is fulfilled. If a profile has `collection_steps`, all checks instructed on a profile will go into a `PENDING` state until all steps are completed. ",
                "type": "object",
                "properties": {
                    "collection_type": {
                        "$ref": "#/components/schemas/CollectionStepType"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CollectionStepFullName"
                    },
                    {
                        "$ref": "#/components/schemas/CollectionStepDOB"
                    },
                    {
                        "$ref": "#/components/schemas/CollectionStepAddressHistory"
                    },
                    {
                        "$ref": "#/components/schemas/CollectionStepNationality"
                    },
                    {
                        "$ref": "#/components/schemas/CollectionStepDocument"
                    },
                    {
                        "$ref": "#/components/schemas/CollectionStepEmail"
                    },
                    {
                        "$ref": "#/components/schemas/CollectionStepPhoneNumber"
                    }
                ],
                "required": [
                    "collection_type"
                ],
                "title": "CollectionStep",
                "discriminator": {
                    "propertyName": "collection_type",
                    "mapping": {
                        "ADDRESS_HISTORY": "#/components/schemas/CollectionStepAddressHistory",
                        "DOB": "#/components/schemas/CollectionStepDOB",
                        "FULL_NAME": "#/components/schemas/CollectionStepFullName",
                        "NATIONALITY": "#/components/schemas/CollectionStepNationality",
                        "DOCUMENT": "#/components/schemas/CollectionStepDocument",
                        "EMAIL": "#/components/schemas/CollectionStepEmail",
                        "PHONE_NUMBER": "#/components/schemas/CollectionStepPhoneNumber"
                    }
                }
            },
            "CollectionStepAddressHistory": {
                "description": "Collect the profile's current address",
                "title": "CollectionStepAddressHistory",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CollectionStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "collection_type": {
                                "type": "string",
                                "enum": [
                                    "ADDRESS_HISTORY"
                                ],
                                "description": "Specifies the data to be collected"
                            }
                        },
                        "required": [
                            "collection_type"
                        ]
                    }
                ]
            },
            "CollectionStepDOB": {
                "description": "Collect the profile's date of birth",
                "title": "CollectionStepDOB",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CollectionStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "collection_type": {
                                "type": "string",
                                "enum": [
                                    "DOB"
                                ],
                                "description": "Specifies the data to be collected"
                            },
                            "precision": {
                                "type": "string",
                                "enum": [
                                    "YEAR",
                                    "YEAR_MONTH",
                                    "YEAR_MONTH_DAY"
                                ],
                                "description": "Specify the precision required for date of birth. If unspecified will default to `YEAR_MONTH_DAY`"
                            }
                        },
                        "required": [
                            "collection_type"
                        ]
                    }
                ]
            },
            "CollectionStepDocument": {
                "description": "Collect a document from the profile (which can be used for a document verification)",
                "title": "CollectionStepDocument",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CollectionStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "collection_type": {
                                "type": "string",
                                "enum": [
                                    "DOCUMENT"
                                ],
                                "description": "Specifies the data to be collected"
                            },
                            "id": {
                                "$ref": "#/components/schemas/UUID"
                            },
                            "category": {
                                "$ref": "#/components/schemas/DocumentCategory"
                            },
                            "facial_similarity": {
                                "type": "boolean",
                                "description": "Defaults to `false`. If this document is going to be used for a `DOCUMENT_VERIFICATION` that performs a facial similarity check, enabling this will ask the user to upload a photo of themselves in addition to their document"
                            },
                            "allowed_types": {
                                "type": "array",
                                "description": "Specifies the types of document that are accepted. These will be presented as options to the user completing the step",
                                "items": {
                                    "$ref": "#/components/schemas/DocumentType"
                                }
                            }
                        },
                        "required": [
                            "collection_type",
                            "category",
                            "allowed_types"
                        ]
                    }
                ]
            },
            "CollectionStepEmail": {
                "description": "Collect the profile's email",
                "title": "CollectionStepEmail",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CollectionStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "collection_type": {
                                "type": "string",
                                "enum": [
                                    "EMAIL"
                                ],
                                "description": "Specifies the data to be collected"
                            }
                        },
                        "required": [
                            "collection_type"
                        ]
                    }
                ]
            },
            "CollectionStepFullName": {
                "description": "Collect the profile's full name",
                "title": "CollectionStepFullName",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CollectionStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "collection_type": {
                                "type": "string",
                                "enum": [
                                    "FULL_NAME"
                                ],
                                "description": "Specifies the data to be collected"
                            }
                        },
                        "required": [
                            "collection_type"
                        ]
                    }
                ]
            },
            "CollectionStepNationality": {
                "description": "Collect the profile's nationality",
                "title": "CollectionStepNationality",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CollectionStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "collection_type": {
                                "type": "string",
                                "enum": [
                                    "NATIONALITY"
                                ],
                                "description": "Specifies the data to be collected"
                            }
                        },
                        "required": [
                            "collection_type"
                        ]
                    }
                ]
            },
            "CollectionStepPhoneNumber": {
                "description": "Collect the profile's phone number",
                "title": "CollectionStepPhoneNumber",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CollectionStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "collection_type": {
                                "type": "string",
                                "enum": [
                                    "PHONE_NUMBER"
                                ],
                                "description": "Specifies the data to be collected"
                            }
                        },
                        "required": [
                            "collection_type"
                        ]
                    }
                ]
            },
            "CollectionStepType": {
                "description": "Specifies the data to be collected",
                "type": "string",
                "enum": [
                    "FULL_NAME",
                    "DOB",
                    "ADDRESS_HISTORY",
                    "NATIONALITY",
                    "DOCUMENT",
                    "EMAIL",
                    "PHONE_NUMBER"
                ],
                "title": "CollectionStepType"
            },
            "CompanyAddress": {
                "type": "object",
                "description": "Address associated with the company",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/CompanyAddressType"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    }
                },
                "title": "CompanyAddress"
            },
            "CompanyAddressType": {
                "type": "string",
                "description": "Type of address",
                "enum": [
                    "registered_address",
                    "branch_address",
                    "head_office_address",
                    "contact_address"
                ],
                "title": "CompanyAddressType"
            },
            "CompanyCharityData": {
                "description": "Information on the company as a charitable entity",
                "type": "object",
                "properties": {
                    "activities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "How the charity works"
                    },
                    "beneficiaries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Who the charity helps"
                    },
                    "purposes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "What the charity does"
                    },
                    "number_of_volunteers": {
                        "type": "number",
                        "description": "The number of volunteers at the charity"
                    },
                    "registration_date": {
                        "$ref": "#/components/schemas/Date"
                    }
                },
                "title": "CompanyCharityData"
            },
            "CompanyContactDetails": {
                "description": "Phone number and email address",
                "type": "object",
                "properties": {
                    "phone_number": {
                        "type": "string",
                        "description": "A contact phone number for the company"
                    },
                    "url": {
                        "type": "string",
                        "description": "The company's website"
                    },
                    "email": {
                        "type": "string",
                        "description": "A contact email address for the company"
                    }
                },
                "title": "CompanyContactDetails"
            },
            "CompanyData": {
                "description": "Top-level data structure for companies",
                "title": "CompanyData",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EntityDataBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "entity_type": {
                                "type": "string",
                                "enum": [
                                    "COMPANY"
                                ],
                                "description": "You must include set the entity_type as `COMPANY` to distinguish CompanyData from other types of EntityData"
                            },
                            "metadata": {
                                "$ref": "#/components/schemas/CompanyMetadata"
                            },
                            "authorized_persons": {
                                "description": "List of people authorized to submit information regarding the company",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AssociatedEntity"
                                }
                            },
                            "unauthorized_persons": {
                                "description": "List of people no longer authorized to submit information regarding the company",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AssociatedEntity"
                                }
                            },
                            "ownership_structure": {
                                "$ref": "#/components/schemas/OwnershipStructure"
                            },
                            "officers": {
                                "$ref": "#/components/schemas/Officers"
                            },
                            "filings": {
                                "description": "List of documents filed by the company with the registry",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CompanyFiling"
                                }
                            },
                            "charity_data": {
                                "$ref": "#/components/schemas/CompanyCharityData"
                            }
                        }
                    }
                ]
            },
            "CompanyDocument": {
                "description": "Details of a company document",
                "type": "object",
                "properties": {
                    "document": {
                        "$ref": "#/components/schemas/Document"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DocumentType"
                    }
                },
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CompanyFiling"
                    }
                ],
                "title": "CompanyDocument"
            },
            "CompanyFiling": {
                "description": "Details of a company filing",
                "anyOf": [
                    {
                        "required": [
                            "price"
                        ]
                    },
                    {
                        "required": [
                            "document"
                        ]
                    }
                ],
                "title": "CompanyFiling",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CompanyDocument"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "source_id": {
                                "type": "string",
                                "description": "Document identifier provided by `source`"
                            },
                            "date_of_filing": {
                                "$ref": "#/components/schemas/Date"
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of company filing"
                            },
                            "resolution_descriptions": {
                                "type": "array",
                                "description": "Descriptions for company resolutions, this will only be available if the document filing type is `RESOLUTION`",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "source": {
                                "type": "string",
                                "description": "Source of company filing, for example `Companies House (UK)`"
                            },
                            "error": {
                                "$ref": "#/components/schemas/Error"
                            },
                            "price": {
                                "type": "integer",
                                "description": "If the document is not free it can be purchased for this price using a `COMPANY_FILING_PURCHASE` check"
                            }
                        },
                        "required": [
                            "source_id"
                        ]
                    }
                ]
            },
            "TaxIdType": {
                "description": "Types of companies tax identifiers",
                "type": "string",
                "enum": [
                    "EUROVAT",
                    "VAT",
                    "EIN"
                ],
                "title": "TaxIdType"
            },
            "TaxId": {
                "description": "Companies tax identifiers",
                "type": "object",
                "properties": {
                    "tax_id_type": {
                        "$ref": "#/components/schemas/TaxIdType"
                    },
                    "value": {
                        "type": "string",
                        "description": "Tax identifier value"
                    }
                },
                "required": [
                    "tax_id_type",
                    "value"
                ],
                "title": "TaxId"
            },
            "CompanyMetadata": {
                "type": "object",
                "description": "Collected data for a company",
                "properties": {
                    "number": {
                        "type": "string",
                        "description": "The identifier given to the company by the company register on which it is registered.\n\nFor example PassFort's company number is [09565115](https://beta.companieshouse.gov.uk/company/09565115).\n\nData providers expect this number to be in a certain format, which depends on the jurisdiction and provider.\n\nTo ensure that you have the correct number for your provider the [company search](/developer/v4/api-reference/Search/search-companies) feature can be used."
                    },
                    "bvd_id": {
                        "type": "string",
                        "description": "Bureau van Dijk identifier"
                    },
                    "bvd9": {
                        "type": "string",
                        "description": "Bureau van Dijk 9 identifier"
                    },
                    "isin": {
                        "type": "string",
                        "description": "International Securities Identification Number"
                    },
                    "lei": {
                        "type": "string",
                        "description": "Global Legal Entity Identifier"
                    },
                    "uk_charity_commission_number": {
                        "type": "string",
                        "description": "UK Charities Commission Number"
                    },
                    "tax_ids": {
                        "type": "array",
                        "description": "Tax identifiers",
                        "items": {
                            "$ref": "#/components/schemas/TaxId"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The legal name of the company.\n\nThese are not guaranteed to be unique in some jurisdictions, and so PassFort uses the company jurisdction + number as the canonical company identifier.\n\nRather than fetching this from the company, it's often better parctise to get this from a basic or advanced registry check"
                    },
                    "previous_names": {
                        "description": "Previous names of the company",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PreviousName"
                        }
                    },
                    "addresses": {
                        "description": "List of addresses associated with the company",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompanyAddress"
                        }
                    },
                    "country_of_incorporation": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "state_of_incorporation": {
                        "type": "string",
                        "description": "This is required for companies in the USA and Canada",
                        "nullable": true
                    },
                    "jurisdiction": {
                        "type": "string",
                        "description": "The jurisdiction in which the company was incorporated, in the event that there are multiple possible jurisdictions"
                    },
                    "areas_of_activity": {
                        "type": "array",
                        "description": "The areas in which the business operates",
                        "items": {
                            "$ref": "#/components/schemas/AreaOfActivity"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "A free text description of the businesses activities"
                    },
                    "number_of_employees": {
                        "type": "number",
                        "description": "The number of employees in the business"
                    },
                    "registry": {
                        "type": "string",
                        "description": "The name of the registry in which the company information was found"
                    },
                    "sic_codes": {
                        "type": "array",
                        "description": "A list of SIC codes describing the industries with which the company is concerned",
                        "items": {
                            "$ref": "#/components/schemas/SicCode"
                        }
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "Whether the company is still active"
                    },
                    "contact_details": {
                        "$ref": "#/components/schemas/CompanyContactDetails"
                    },
                    "incorporation_date": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "company_type": {
                        "type": "string",
                        "description": "Company type identifier, as given by the provider, indicating the kind of liability its members are exposed to and whether it is publically traded"
                    },
                    "structured_company_type": {
                        "type": "object",
                        "description": "Structured fields indicating the kind of liability its members are exposed to, the ownership structure, and whether it is publically traded",
                        "properties": {
                            "is_public": {
                                "type": "boolean",
                                "description": "Whether the company is publically or privately traded"
                            },
                            "is_limited": {
                                "type": "boolean",
                                "description": "What kind of liability the company's members are exposed to"
                            },
                            "ownership_type": {
                                "description": "Which ownership structure is employed by the company",
                                "type": "string",
                                "enum": [
                                    "PARTNERSHIP",
                                    "COMPANY",
                                    "SOLE_PROPRIETORSHIP",
                                    "ASSOCIATION",
                                    "TRUST",
                                    "OTHER"
                                ]
                            }
                        }
                    },
                    "company_type_description": {
                        "type": "string",
                        "description": "Long name for the company type, indicating the kind of liability its members are exposed to, and whether it is publically traded"
                    }
                },
                "title": "CompanyMetadata"
            },
            "CompanySanctionsResult": {
                "description": "Result of a PEPs and Sanctions Check",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/SanctionsResult"
                    }
                ],
                "title": "CompanySanctionsResult",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DefaultSanctionsResult"
                    },
                    {
                        "type": "object",
                        "properties": {}
                    }
                ]
            },
            "ComponentRisk": {
                "type": "object",
                "description": "A component making up part of the total risk score",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Risk component name"
                    },
                    "input_value": {
                        "type": "string",
                        "description": "The calculated value from the users profile used for this risk component"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "If this risk component is required a risk score will not be calculated until the data to calculate this component is available"
                    },
                    "risk_level": {
                        "$ref": "#/components/schemas/RiskLevel"
                    },
                    "raw_value": {
                        "type": "string",
                        "description": "The calculated value from the users profile used for this risk component"
                    },
                    "min_overall_score": {
                        "type": "number",
                        "description": "Unused field"
                    },
                    "errors": {
                        "type": "array",
                        "description": "An array of errors that occurred when attempting to calculate risk.",
                        "items": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                },
                "required": [
                    "name",
                    "risk_level"
                ],
                "title": "ComponentRisk"
            },
            "CountryCode": {
                "description": "[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) (3 letter country code)",
                "type": "string",
                "enum": [
                    "AFG",
                    "ALA",
                    "ALB",
                    "DZA",
                    "ASM",
                    "AND",
                    "AGO",
                    "AIA",
                    "ATA",
                    "ATG",
                    "ARG",
                    "ARM",
                    "ABW",
                    "AUS",
                    "AUT",
                    "AZE",
                    "BHS",
                    "BHR",
                    "BGD",
                    "BRB",
                    "BLR",
                    "BEL",
                    "BLZ",
                    "BEN",
                    "BMU",
                    "BTN",
                    "BOL",
                    "BES",
                    "BIH",
                    "BWA",
                    "BVT",
                    "BRA",
                    "IOT",
                    "BRN",
                    "BGR",
                    "BFA",
                    "BDI",
                    "KHM",
                    "CMR",
                    "CAN",
                    "CPV",
                    "CYM",
                    "CAF",
                    "TCD",
                    "CHL",
                    "CHN",
                    "CXR",
                    "CCK",
                    "COL",
                    "COM",
                    "COG",
                    "COD",
                    "COK",
                    "CRI",
                    "CIV",
                    "HRV",
                    "CUB",
                    "CUW",
                    "CYP",
                    "CZE",
                    "DNK",
                    "DJI",
                    "DMA",
                    "DOM",
                    "ECU",
                    "EGY",
                    "SLV",
                    "GNQ",
                    "ERI",
                    "EST",
                    "ETH",
                    "FLK",
                    "FRO",
                    "FJI",
                    "FIN",
                    "FRA",
                    "GUF",
                    "PYF",
                    "ATF",
                    "GAB",
                    "GMB",
                    "GEO",
                    "DEU",
                    "GHA",
                    "GIB",
                    "GRC",
                    "GRL",
                    "GRD",
                    "GLP",
                    "GUM",
                    "GTM",
                    "GGY",
                    "GIN",
                    "GNB",
                    "GUY",
                    "HTI",
                    "HMD",
                    "VAT",
                    "HND",
                    "HKG",
                    "HUN",
                    "ISL",
                    "IND",
                    "IDN",
                    "IRN",
                    "IRQ",
                    "IRL",
                    "IMN",
                    "ISR",
                    "ITA",
                    "JAM",
                    "JPN",
                    "JEY",
                    "JOR",
                    "KAZ",
                    "KEN",
                    "KIR",
                    "PRK",
                    "KOR",
                    "KWT",
                    "KGZ",
                    "LAO",
                    "LVA",
                    "LBN",
                    "LSO",
                    "LBR",
                    "LBY",
                    "LIE",
                    "LTU",
                    "LUX",
                    "MAC",
                    "MKD",
                    "MDG",
                    "MWI",
                    "MYS",
                    "MDV",
                    "MLI",
                    "MLT",
                    "MHL",
                    "MTQ",
                    "MRT",
                    "MUS",
                    "MYT",
                    "MEX",
                    "FSM",
                    "MDA",
                    "MCO",
                    "MNG",
                    "MNE",
                    "MSR",
                    "MAR",
                    "MOZ",
                    "MMR",
                    "NAM",
                    "NRU",
                    "NPL",
                    "NLD",
                    "NCL",
                    "NZL",
                    "NIC",
                    "NER",
                    "NGA",
                    "NIU",
                    "NFK",
                    "MNP",
                    "NOR",
                    "OMN",
                    "PAK",
                    "PLW",
                    "PSE",
                    "PAN",
                    "PNG",
                    "PRY",
                    "PER",
                    "PHL",
                    "PCN",
                    "POL",
                    "PRT",
                    "PRI",
                    "QAT",
                    "REU",
                    "RKS",
                    "ROU",
                    "RUS",
                    "RWA",
                    "BLM",
                    "SHN",
                    "KNA",
                    "LCA",
                    "MAF",
                    "SPM",
                    "VCT",
                    "WSM",
                    "SMR",
                    "STP",
                    "SAU",
                    "SEN",
                    "SRB",
                    "SYC",
                    "SLE",
                    "SGP",
                    "SXM",
                    "SVK",
                    "SVN",
                    "SLB",
                    "SOM",
                    "ZAF",
                    "SGS",
                    "ESP",
                    "LKA",
                    "SDN",
                    "SUR",
                    "SSD",
                    "SJM",
                    "SWZ",
                    "SWE",
                    "CHE",
                    "SYR",
                    "TWN",
                    "TJK",
                    "TZA",
                    "THA",
                    "TLS",
                    "TGO",
                    "TKL",
                    "TON",
                    "TTO",
                    "TUN",
                    "TUR",
                    "TKM",
                    "TCA",
                    "TUV",
                    "UGA",
                    "UKR",
                    "ARE",
                    "GBR",
                    "USA",
                    "UMI",
                    "URY",
                    "UZB",
                    "VUT",
                    "VEN",
                    "VNM",
                    "VGB",
                    "VIR",
                    "WLF",
                    "ESH",
                    "YEM",
                    "ZMB",
                    "ZWE"
                ],
                "title": "CountryCode",
                "example": "GBR"
            },
            "CreateFileResource": {
                "description": "The base unit data type of documents. This just represents a file. For more context on the file you probably want to wrap it with a DocumentImageResource",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Base64"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "CreateFileResource"
            },
            "CreateNoteResource": {
                "type": "object",
                "description": "Definition used to create a new note (with optional associated files)",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Note text"
                    },
                    "attachments": {
                        "description": "Associated files (if present)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileResource"
                        }
                    }
                },
                "title": "CreateNoteResource"
            },
            "CreditReference": {
                "type": "object",
                "description": "Matches from Credit Database",
                "properties": {
                    "cais_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "cais_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "cais_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "caps_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "caps_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "caps_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ccj_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ccj_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    }
                },
                "title": "CreditReference"
            },
            "CurrencyCode": {
                "description": "[ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) (3 letter curreny code)",
                "type": "string",
                "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BOV",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHE",
                    "CHF",
                    "CHW",
                    "CLF",
                    "CLP",
                    "CNY",
                    "COP",
                    "COU",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRU",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MXV",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SRD",
                    "SSP",
                    "STN",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "USN",
                    "UYI",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XAG",
                    "XAU",
                    "XBA",
                    "XBB",
                    "XBC",
                    "XBD",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPD",
                    "XPF",
                    "XPT",
                    "XSU",
                    "XTS",
                    "XUA",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWL"
                ],
                "title": "CurrencyCode",
                "example": "GBP"
            },
            "DatabaseMatches": {
                "type": "object",
                "description": "Matches from other Databases",
                "properties": {
                    "electoral_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "electoral_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "electoral_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "national_id_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "national_id_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "national_id_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ssn_name": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ssn_name_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ssn_name_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "telephone_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "telephone_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_consumer_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_consumer_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_postal_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_postal_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_landline_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_landline_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_mobile_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_mobile_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_financial_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_financial_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_financial_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "irl_voter_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "irl_voter_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "irl_address_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "aut_financial_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "aut_financial_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "aut_financial_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "aut_financial_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "che_financial_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "che_financial_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "che_financial_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "arg_financial_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "arg_financial_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "arg_financial_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "lux_consent_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "lux_consent_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "lux_consent_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "lux_landline_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "lux_landline_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nld_consent_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nld_consent_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nld_consent_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_consent_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_consent_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_property_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_property_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_landline_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_landline_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_consent_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_consent_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_consent_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_population_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_population_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_population_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_landline_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_landline_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_landline_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bra_population_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bra_population_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bra_population_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bel_population_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bel_population_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bel_population_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bel_landline_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bel_landline_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bel_landline_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "fra_population_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "fra_population_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "fra_population_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "fra_landline_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "fra_landline_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "fra_landline_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "swe_population_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "swe_population_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "swe_population_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "swe_personal_id_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "swe_personal_id_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "swe_personal_id_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "onfido_proprietary_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "onfido_proprietary_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "onfido_proprietary_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "government_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "government_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "government_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "business_registration_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "business_registration_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "business_registration_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "consumer_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "consumer_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "consumer_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "utility_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "utility_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "utility_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "postal_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "postal_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "postal_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "commercial_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "commercial_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "commercial_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "mortality_list": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ssn_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ssn_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "electoral_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "national_id_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "national_id_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "telephone_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "telephone_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "telephone_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_consumer_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_consumer_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_consumer_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_postal_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_postal_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_postal_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_landline_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_landline_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_landline_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_mobile_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_mobile_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_mobile_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_financial_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "deu_financial_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "irl_voter_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "irl_voter_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "irl_voter_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "irl_address_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "irl_address_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "irl_address_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "irl_address_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "aut_financial_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ita_population_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ita_population_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ita_population_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ita_population_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "ita_population_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "dnk_landline_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "dnk_landline_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "dnk_landline_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "dnk_landline_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "dnk_landline_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "dnk_personal_id_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "dnk_personal_id_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "dnk_personal_id_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "dnk_personal_id_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "dnk_personal_id_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "che_financial_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "che_financial_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "arg_financial_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "arg_financial_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "lux_consent_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "lux_consent_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "lux_landline_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "lux_landline_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "lux_landline_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nld_consent_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nld_consent_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_consent_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_consent_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_consent_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_property_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_property_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_property_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_landline_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_landline_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nzl_landline_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_consent_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_consent_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_population_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_population_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_landline_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "esp_landline_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bra_population_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bra_population_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bel_population_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bel_population_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bel_landline_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "bel_landline_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "fra_population_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "fra_population_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "fra_landline_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "fra_landline_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_population_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_population_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_population_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_population_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_population_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_marketing_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_marketing_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_marketing_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_marketing_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_marketing_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_landline_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_landline_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_landline_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_landline_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_landline_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_mobile_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_mobile_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_mobile_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_mobile_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "nor_mobile_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "swe_population_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "swe_population_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "swe_personal_id_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "swe_personal_id_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "usa_population_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "usa_population_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "usa_population_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "usa_population_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "usa_population_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "chn_population_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "chn_population_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "chn_population_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "chn_population_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "chn_population_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "hkg_population_exact_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "hkg_population_exact": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "hkg_population_partial": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "hkg_population_address": {
                        "$ref": "#/components/schemas/MatchResult"
                    },
                    "hkg_population_dob": {
                        "$ref": "#/components/schemas/MatchResult"
                    }
                },
                "title": "DatabaseMatches"
            },
            "EKYCDatabaseType": {
                "description": "Types of databases used for an EKYC check",
                "type": "string",
                "enum": [
                    "CIVIL",
                    "CREDIT",
                    "MORTALITY"
                ],
                "title": "EKYCDatabaseType"
            },
            "EKYCMatchField": {
                "description": "Fields that can matched on for an EKYC check",
                "type": "string",
                "enum": [
                    "FORENAME",
                    "SURNAME",
                    "ADDRESS",
                    "DOB"
                ],
                "title": "EKYCMatchField"
            },
            "EKYCMatch": {
                "description": "Describes a match against a database for an EKYC check",
                "type": "object",
                "properties": {
                    "database_name": {
                        "type": "string",
                        "description": "Name of the database containing a match"
                    },
                    "database_type": {
                        "$ref": "#/components/schemas/EKYCDatabaseType"
                    },
                    "matched_fields": {
                        "type": "array",
                        "description": "List of matched fields for this database",
                        "items": {
                            "$ref": "#/components/schemas/EKYCMatchField"
                        }
                    },
                    "count": {
                        "type": "integer",
                        "description": "How many times this set of fields was matched in this database"
                    }
                },
                "required": [
                    "database_name",
                    "database_type",
                    "matched_fields"
                ],
                "title": "EKYCMatch"
            },
            "DataURI": {
                "description": "Data URI format, typically used for decrypted images",
                "type": "string",
                "pattern": "^\\s*data:([a-z]+\\/[a-z]+(;[a-z\\-]+\\=[a-z\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$/",
                "title": "DataURI",
                "example": "data:text/plain;base64,SGVsbG8sIFdvcmxkIQ%3D%3D"
            },
            "Date": {
                "description": "Exact date in `YYYY-MM-DD` format",
                "type": "string",
                "pattern": "(^\\d{4}-\\d{2}-\\d{2}$)",
                "title": "Date",
                "example": "1992-11-24"
            },
            "DateTime": {
                "description": "Exact date and time in `YYYY-MM-DD hh:mm:ss` format",
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
                "title": "DateTime",
                "example": "2017-02-08 15:16:01"
            },
            "DefaultSanctionsResult": {
                "description": "Result of a PEPs and Sanctions Check",
                "type": "object",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/SanctionsResult"
                    },
                    {
                        "$ref": "#/components/schemas/CompanySanctionsResult"
                    }
                ],
                "properties": {
                    "match_id": {
                        "type": "string",
                        "description": "ID of the Sanction Match"
                    },
                    "modified_date": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "false_positive": {
                        "$ref": "#/components/schemas/FalsePositive"
                    },
                    "match_name": {
                        "type": "string",
                        "description": "The name that was matched against"
                    },
                    "match_dates": {
                        "type": "array",
                        "description": "Dates of the matched sanctions",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    },
                    "match_countries": {
                        "type": "array",
                        "description": "The countries of the matched sanctions",
                        "items": {
                            "type": "string"
                        }
                    },
                    "score": {
                        "type": "number",
                        "description": "The score of the match"
                    },
                    "sanctions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sanction"
                        },
                        "description": "The sanctions returned from check"
                    },
                    "pep": {
                        "$ref": "#/components/schemas/PEP"
                    },
                    "media": {
                        "type": "array",
                        "description": "Adverse Media results",
                        "items": {
                            "$ref": "#/components/schemas/MediaArticle"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "description": "Documents returned by the check",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "aliases": {
                        "type": "array",
                        "description": "Aliases used by the matched",
                        "items": {
                            "type": "string"
                        }
                    },
                    "previous_names": {
                        "type": "array",
                        "description": "Previous names used by the matched",
                        "items": {
                            "type": "string"
                        }
                    },
                    "associates": {
                        "type": "array",
                        "description": "Associated to the returned PEPs and Sanctions",
                        "items": {
                            "$ref": "#/components/schemas/Associate"
                        }
                    },
                    "profile_notes": {
                        "type": "string",
                        "description": "Profile notes returned by check"
                    },
                    "details": {
                        "type": "array",
                        "description": "More information about the match",
                        "items": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "sources": {
                        "type": "array",
                        "description": "Sources listed by data provider",
                        "items": {
                            "$ref": "#/components/schemas/Source"
                        }
                    }
                },
                "title": "DefaultSanctionsResult"
            },
            "DecisionClass": {
                "description": "Classification used for unifying various check results",
                "type": "string",
                "enum": [
                    "PASS",
                    "FAIL",
                    "PARTIAL",
                    "WARN",
                    "ERROR"
                ],
                "title": "DecisionClass"
            },
            "Document": {
                "description": "A single document with one or more images",
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "category": {
                        "$ref": "#/components/schemas/DocumentCategory"
                    },
                    "document_type": {
                        "$ref": "#/components/schemas/DocumentType"
                    },
                    "images": {
                        "type": "array",
                        "description": "Images that make up the document. For example a `DRIVING_LICENCE` will have a `FRONT` and a `BACK`",
                        "items": {
                            "$ref": "#/components/schemas/DocumentImageResource"
                        }
                    },
                    "extracted_data": {
                        "$ref": "#/components/schemas/DocumentData"
                    },
                    "verification_result": {
                        "$ref": "#/components/schemas/DocumentResult"
                    }
                },
                "required": [
                    "category",
                    "document_type",
                    "images"
                ],
                "additionalProperties": false,
                "title": "Document"
            },
            "DocumentCategory": {
                "description": "Describes how this document should be used by the system",
                "type": "string",
                "enum": [
                    "PROOF_OF_IDENTITY",
                    "PROOF_OF_SOURCE_OF_WEALTH",
                    "PROOF_OF_SOURCE_OF_FUNDS",
                    "PROOF_OF_ADDRESS",
                    "SUPPORTING",
                    "COMPANY_FILING",
                    "DATA_SUMMARY",
                    "PROOF_OF_BANK_ACCOUNT",
                    "PROOF_OF_TAX_STATUS"
                ],
                "title": "DocumentCategory"
            },
            "DocumentCheck": {
                "type": "object",
                "description": "Details of a document check",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Category of forgery check"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of forgery check"
                    },
                    "result": {
                        "$ref": "#/components/schemas/DecisionClass"
                    }
                },
                "title": "DocumentCheck"
            },
            "DocumentData": {
                "description": "All data extracted from a document",
                "type": "object",
                "properties": {
                    "issuer": {
                        "type": "string",
                        "description": "Name of the issuing authority"
                    },
                    "issuing_country": {
                        "$ref": "#/components/schemas/ICAOCode"
                    },
                    "number": {
                        "type": "string",
                        "description": "Document number"
                    },
                    "issued": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "expiry": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "personal_details": {
                        "$ref": "#/components/schemas/PersonalDetails"
                    },
                    "address_history": {
                        "$ref": "#/components/schemas/AddressHistory"
                    },
                    "mrz1": {
                        "type": "string",
                        "description": "Line one of the [Machine-Readable Zone](https://en.wikipedia.org/wiki/Machine-readable_passport)"
                    },
                    "mrz2": {
                        "type": "string",
                        "description": "Line two of the MRZ"
                    },
                    "mrz3": {
                        "type": "string",
                        "description": "Line three of the MRZ"
                    },
                    "result": {
                        "$ref": "#/components/schemas/DocumentResult"
                    },
                    "external_service": {
                        "type": "string",
                        "description": "External service"
                    },
                    "external_ref": {
                        "type": "string",
                        "description": "External service reference"
                    }
                },
                "title": "DocumentData"
            },
            "DocumentImageResource": {
                "description": "A single image of a document",
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "image_type": {
                        "$ref": "#/components/schemas/DocumentImageType"
                    },
                    "upload_date": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "document_type": {
                        "$ref": "#/components/schemas/DocumentType"
                    },
                    "document_category": {
                        "$ref": "#/components/schemas/DocumentCategory"
                    }
                },
                "anyOf": [
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/Base64"
                            }
                        },
                        "required": [
                            "data"
                        ]
                    },
                    {
                        "properties": {
                            "encrypted_data": {
                                "$ref": "#/components/schemas/EncryptedData"
                            }
                        },
                        "required": [
                            "encrypted_data"
                        ]
                    },
                    {
                        "properties": {},
                        "required": [
                            "decrypted_data"
                        ]
                    },
                    {
                        "properties": {}
                    }
                ],
                "additionalProperties": true,
                "title": "DocumentImageResource"
            },
            "DocumentImageType": {
                "description": "How this image relates to the document",
                "type": "string",
                "enum": [
                    "FRONT",
                    "BACK",
                    "FACE"
                ],
                "title": "DocumentImageType"
            },
            "DocumentResult": {
                "description": "Results of a check on a document",
                "properties": {
                    "provider_name": {
                        "type": "string",
                        "description": "Name of the verification provider"
                    },
                    "image_checks_passed": {
                        "type": "boolean",
                        "description": "Whether all of the image checks passed. These cover aspects such as the resolution and clarity of the image(s)"
                    },
                    "image_checks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentCheck"
                        },
                        "description": "Detailed result for each of the image checks performed"
                    },
                    "document_type_passed": {
                        "type": "boolean",
                        "description": "If the document is of the correct type"
                    },
                    "forgery_checks_passed": {
                        "type": "boolean",
                        "description": "Whether all of the forgery checks passed. These vary by provider, but may include details such as whether the correct fonts were used on the document"
                    },
                    "forgery_checks": {
                        "type": "array",
                        "description": "Detailed result for each of the forgery checks performed",
                        "items": {
                            "$ref": "#/components/schemas/DocumentCheck"
                        }
                    },
                    "field_checks": {
                        "type": "array",
                        "description": "These checks ascertain whether the details extracted from the document are valid, and match those submitted on the profile",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "$ref": "#/components/schemas/CheckedDocumentField"
                                },
                                "result": {
                                    "$ref": "#/components/schemas/FieldCheckResult"
                                }
                            }
                        }
                    },
                    "all_passed": {
                        "type": "boolean",
                        "description": "Whether all of the image, forgery and field checks passed"
                    },
                    "error_reason": {
                        "type": "string",
                        "description": "Message indicating why the document could not be checked"
                    }
                },
                "title": "DocumentResult"
            },
            "DocumentType": {
                "description": "Type of document being submitted",
                "type": "string",
                "enum": [
                    "PASSPORT",
                    "DRIVING_LICENCE",
                    "STATE_ID",
                    "VOTER_ID",
                    "BIRTH_CERTIFICATE",
                    "BANK_STATEMENT",
                    "FACE_IMAGE",
                    "UNKNOWN",
                    "COMPANY_ACCOUNTS",
                    "COMPANY_CHANGE_OF_ADDRESS",
                    "ANNUAL_RETURN",
                    "CONFIRMATION_STATEMENT",
                    "STATEMENT_OF_CAPITAL",
                    "CHANGE_OF_NAME",
                    "INCORPORATION",
                    "LIQUIDATION",
                    "MISCELLANEOUS",
                    "MORTGAGE",
                    "CHANGE_OF_OFFICERS",
                    "RESOLUTION",
                    "CREDIT_REPORT",
                    "CREDIT_CHECK",
                    "REGISTER_REPORT",
                    "REGISTER_CHECK",
                    "DATA_SUMMARY",
                    "CHANGE_OF_PSC",
                    "ADVERSE_MEDIA",
                    "TAX"
                ],
                "title": "DocumentType"
            },
            "EncryptedData": {
                "type": "object",
                "description": "When a document is uploaded to PassFort, it is immediately encrypted. For security reasons, our web-facing servers are not able to access this data.\n\nThis means that PassFort does not currently support downloading previously uploading documents",
                "properties": {},
                "title": "EncryptedData"
            },
            "EntityData": {
                "description": "Base class for profile data. An entity is either an individual or a company",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/IndividualData"
                    },
                    {
                        "$ref": "#/components/schemas/CompanyData"
                    }
                ],
                "title": "EntityData",
                "discriminator": {
                    "propertyName": "entity_type",
                    "mapping": {
                        "INDIVIDUAL": "#/components/schemas/IndividualData",
                        "COMPANY": "#/components/schemas/CompanyData"
                    }
                }
            },
            "EntityDataBase": {
                "description": "Base class for profile data. An entity is either an individual or a company",
                "type": "object",
                "properties": {
                    "customer_ref": {
                        "type": "string",
                        "description": "You can supply your own reference to an entity. This might correspond to your database models.\n\nThis reference is included in webhooks"
                    },
                    "documents": {
                        "description": "Set of documents to submit",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "external_refs": {
                        "description": "References used to pull data directly from external providers",
                        "properties": {
                            "jumio_netverify": {
                                "type": "array",
                                "description": "The reference provided from [Jumio Netverify](https://www.jumio.com/netverify/). Multiple references can be provided",
                                "items": {
                                    "$ref": "#/components/schemas/UUID"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "entity_type"
                ],
                "title": "EntityDataBase"
            },
            "EntityType": {
                "description": "Either an individual or a company",
                "type": "string",
                "enum": [
                    "INDIVIDUAL",
                    "COMPANY"
                ],
                "title": "EntityType"
            },
            "Error": {
                "type": "object",
                "description": "Details of an error",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCodes"
                    },
                    "message": {
                        "type": "string",
                        "description": "A human readable description of the error message"
                    },
                    "source": {
                        "$ref": "#/components/schemas/ErrorSource"
                    },
                    "info": {
                        "description": "Additional metadata about the error"
                    }
                },
                "title": "Error"
            },
            "ErrorCodes": {
                "type": "integer",
                "description": "1xx: Normal errors\n| Code | Meaning |\n|---|---|\n| 101 | MISSING_REQUIRED_FIELDS |\n| 102 | ENTITY_ALREADY_APPROVED |\n| 103 | ENTITY_ALREADY_REJECTED |\n| 104 | CHARGEABLE_LIMIT_REACHED |\n| 105 | CONSTRAINTS_NOT_SATISFIED |\n| 106 | COUNTRY_NOT_SUPPORTED |\n| 107 | CHECK_LIMIT_REACHED |\n\n2xx: Caller errors, caused by incorrect use of the system\n| Code | Meaning |\n|---|---|\n| 201 | INVALID_INPUT_DATA |\n| 202 | DATA_PRESENT |\n| 203 | MISSING_API_KEY |\n| 204 | INVALID_API_KEY |\n\n3xx: Transient errors, caused by temporary problems with the system\n| Code | Meaning |\n|---|---|\n| 301 | USER_MIGRATION_ERROR |\n| 302 | PROVIDER_CONNECTION_ERROR |\n| 303 | PROVIDER_UNKNOWN_ERROR |\n\n4xx: Internal errors\n| Code | Meaning |\n|---|---|\n| 401 | UNKNOWN_INTERNAL_ERROR |\n| 402 | TRANSITION_ERROR |\n\n5xx: Miscellaneous errors\n| Code | Meaning |\n|---|---|\n| 501 | LEGACY_ERROR |\n| 502 | PROCESS_NOT_SETUP |",
                "title": "ErrorCodes"
            },
            "ErrorSource": {
                "description": "The source of an error which occurred while running a check. Provider errors may indicate that the upstream provider for a given check is experiencing downtime",
                "type": "string",
                "enum": [
                    "ENGINE",
                    "API",
                    "PROVIDER"
                ],
                "title": "ErrorSource"
            },
            "EventData": {
                "description": "Additional information specific to the event type",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/EventDataPepFlag"
                    },
                    {
                        "$ref": "#/components/schemas/EventDataSanctionFlag"
                    },
                    {
                        "$ref": "#/components/schemas/EventDataAdverseMediaFlag"
                    },
                    {
                        "$ref": "#/components/schemas/EventDataReferFlag"
                    }
                ],
                "title": "EventData",
                "discriminator": {
                    "propertyName": "event_type",
                    "mapping": {
                        "PEP_FLAG": "#/components/schemas/EventDataPepFlag",
                        "SANCTION_FLAG": "#/components/schemas/EventDataSanctionFlag",
                        "ADVERSE_MEDIA_FLAG": "#/components/schemas/EventDataAdverseMediaFlag",
                        "REFER_FLAG": "#/components/schemas/EventDataReferFlag"
                    }
                }
            },
            "EventDataAdverseMediaFlag": {
                "description": "Information related to an adverse media flag event",
                "type": "object",
                "required": [
                    "event_type"
                ],
                "properties": {
                    "event_type": {
                        "type": "string",
                        "enum": [
                            "ADVERSE_MEDIA_FLAG"
                        ],
                        "description": "Profile event type"
                    },
                    "match_id": {
                        "type": "string",
                        "description": "The related match identifier"
                    },
                    "gender": {
                        "type": "string",
                        "description": "gender of match"
                    },
                    "deceased_dates": {
                        "type": "array",
                        "description": "Reported death dates",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    },
                    "modified_date": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "provider_name": {
                        "type": "string",
                        "description": "Name of the verification provider"
                    },
                    "match_name": {
                        "type": "string",
                        "description": "The name that was matched against"
                    },
                    "match_dates": {
                        "type": "array",
                        "description": "Dates of the matched results",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    },
                    "match_countries": {
                        "type": "array",
                        "description": "Dates of the matched sanctions",
                        "items": {
                            "$ref": "#/components/schemas/CountryCode"
                        }
                    },
                    "score": {
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 1.0,
                        "description": "The score of the match"
                    },
                    "aliases": {
                        "type": "array",
                        "description": "Aliases used by the matched",
                        "items": {
                            "type": "string"
                        }
                    },
                    "previous_names": {
                        "type": "array",
                        "description": "Previous names used by the matched",
                        "items": {
                            "type": "string"
                        }
                    },
                    "associates": {
                        "type": "array",
                        "description": "Associated to the returned PEPs and Sanctions",
                        "items": {
                            "$ref": "#/components/schemas/Associate"
                        }
                    },
                    "profile_notes": {
                        "type": "string",
                        "description": "Profile notes returned by check"
                    },
                    "details": {
                        "type": "array",
                        "description": "More information about the match",
                        "items": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "media": {
                        "type": "array",
                        "description": "Related media",
                        "items": {
                            "$ref": "#/components/schemas/MediaArticle"
                        }
                    },
                    "documents": {
                        "description": "Documents related to the PEP match",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "riskography": {
                        "type": "string",
                        "description": "Description of PEP or sanctioned persons background"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Source"
                        },
                        "description": "Sources used to derive sanctions and PEP information"
                    },
                    "remarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Remarks about a sanctioned person"
                    },
                    "identifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identification"
                        },
                        "description": "Identifications such as a passport"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        },
                        "description": "Locations related to a PEP or sanctioned entity, such as birth place"
                    }
                },
                "title": "EventDataAdverseMediaFlag"
            },
            "EventDataReferFlag": {
                "description": "Information related to a refer flag event",
                "type": "object",
                "required": [
                    "event_type"
                ],
                "properties": {
                    "event_type": {
                        "type": "string",
                        "enum": [
                            "REFER_FLAG"
                        ],
                        "description": "Profile event type"
                    },
                    "match_id": {
                        "type": "string",
                        "description": "The related match identifier"
                    },
                    "gender": {
                        "type": "string",
                        "description": "gender of match"
                    },
                    "deceased_dates": {
                        "type": "array",
                        "description": "Reported death dates",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    },
                    "modified_date": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "provider_name": {
                        "type": "string",
                        "description": "Name of the verification provider"
                    },
                    "match_name": {
                        "type": "string",
                        "description": "The name that was matched against"
                    },
                    "match_dates": {
                        "type": "array",
                        "description": "Dates of the matched results",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    },
                    "match_countries": {
                        "type": "array",
                        "description": "Dates of the matched sanctions",
                        "items": {
                            "$ref": "#/components/schemas/CountryCode"
                        }
                    },
                    "score": {
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 1.0,
                        "description": "The score of the match"
                    },
                    "aliases": {
                        "type": "array",
                        "description": "Aliases used by the matched",
                        "items": {
                            "type": "string"
                        }
                    },
                    "previous_names": {
                        "type": "array",
                        "description": "Previous names used by the matched",
                        "items": {
                            "type": "string"
                        }
                    },
                    "associates": {
                        "type": "array",
                        "description": "Associated to the returned PEPs and Sanctions",
                        "items": {
                            "$ref": "#/components/schemas/Associate"
                        }
                    },
                    "profile_notes": {
                        "type": "string",
                        "description": "Profile notes returned by check"
                    },
                    "details": {
                        "type": "array",
                        "description": "More information about the match",
                        "items": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "documents": {
                        "description": "Documents related to the PEP match",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "riskography": {
                        "type": "string",
                        "description": "Description of PEP or sanctioned persons background"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Source"
                        },
                        "description": "Sources used to derive sanctions and PEP information"
                    },
                    "remarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Remarks about a sanctioned person"
                    },
                    "identifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identification"
                        },
                        "description": "Identifications such as a passport"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        },
                        "description": "Locations related to a PEP or sanctioned entity, such as birth place"
                    }
                },
                "title": "EventDataReferFlag"
            },
            "EventDataPepFlag": {
                "description": "Information related to a PEP flag event",
                "type": "object",
                "required": [
                    "event_type"
                ],
                "properties": {
                    "event_type": {
                        "type": "string",
                        "enum": [
                            "PEP_FLAG"
                        ],
                        "description": "Profile event type"
                    },
                    "match_id": {
                        "type": "string",
                        "description": "The related match identifier"
                    },
                    "modified_date": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "provider_name": {
                        "type": "string",
                        "description": "Data provider source"
                    },
                    "match_name": {
                        "type": "string",
                        "description": "The name that was matched against"
                    },
                    "match_dates": {
                        "type": "array",
                        "description": "Dates of the matched result",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    },
                    "match_countries": {
                        "type": "array",
                        "description": "The countries of the matched result",
                        "items": {
                            "$ref": "#/components/schemas/CountryCode"
                        }
                    },
                    "score": {
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 1.0,
                        "description": "The score of the match"
                    },
                    "aliases": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Aliases used by the matched"
                    },
                    "previous_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Previous names used by the matched"
                    },
                    "associates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Associate"
                        },
                        "description": "Associated to the returned PEPs and Sanctions"
                    },
                    "profile_notes": {
                        "type": "string",
                        "description": "Profile notes returned by check"
                    },
                    "details": {
                        "type": "array",
                        "description": "More information about the match",
                        "items": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "pep": {
                        "$ref": "#/components/schemas/PEP"
                    },
                    "riskography": {
                        "type": "string",
                        "description": "Description of PEP or sanctioned persons background"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        },
                        "description": "Locations related to a PEP, such as a place of birth"
                    },
                    "identifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identification"
                        },
                        "description": "Identifications such as a passport"
                    },
                    "remarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Remarks about a PEP"
                    },
                    "pep_rating": {
                        "type": "string",
                        "description": "PEP Rating"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Source"
                        },
                        "description": "Sources used to derive sanctions and PEP information"
                    },
                    "gender": {
                        "type": "string",
                        "description": "Gender of person"
                    },
                    "deceased_dates": {
                        "type": "array",
                        "description": "Reported death dates",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    },
                    "documents": {
                        "description": "Documents related to the PEP match",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    }
                },
                "title": "EventDataPepFlag"
            },
            "EventDataSanctionFlag": {
                "description": "Information related to a sanction flag event",
                "type": "object",
                "required": [
                    "event_type"
                ],
                "properties": {
                    "event_type": {
                        "type": "string",
                        "enum": [
                            "SANCTION_FLAG"
                        ],
                        "description": "Profile event type"
                    },
                    "match_id": {
                        "type": "string",
                        "description": "The related match identifier"
                    },
                    "modified_date": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "provider_name": {
                        "type": "string",
                        "description": "Data provider source"
                    },
                    "match_name": {
                        "type": "string",
                        "description": "The name that was matched against"
                    },
                    "match_dates": {
                        "type": "array",
                        "description": "Dates of the matched result",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    },
                    "match_countries": {
                        "type": "array",
                        "description": "The countries of the matched result",
                        "items": {
                            "$ref": "#/components/schemas/CountryCode"
                        }
                    },
                    "score": {
                        "type": "number",
                        "minimum": 0.0,
                        "maximum": 1.0,
                        "description": "The score of the match"
                    },
                    "aliases": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Aliases used by the matched"
                    },
                    "previous_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Previous names used by the matched"
                    },
                    "associates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Associate"
                        },
                        "description": "Associated to the returned PEPs and Sanctions"
                    },
                    "profile_notes": {
                        "type": "string",
                        "description": "Profile notes returned by check"
                    },
                    "details": {
                        "type": "array",
                        "description": "More information about the match",
                        "items": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "sanctions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sanction"
                        },
                        "description": "The sanctions returned from check"
                    },
                    "documents": {
                        "description": "Documents related to the sanctions match",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "riskography": {
                        "type": "string",
                        "description": "Description of sanctioned persons background"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        },
                        "description": "Locations related to a sanctioned person, such as a place of birth"
                    },
                    "identifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identification"
                        },
                        "description": "Identifications such as a passport"
                    },
                    "remarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Remarks about a sanctioned person"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Source"
                        },
                        "description": "Sources used to derive sanctions and PEP information"
                    },
                    "gender": {
                        "type": "string",
                        "description": "Gender of person"
                    },
                    "deceased_dates": {
                        "type": "array",
                        "description": "Reported death dates",
                        "items": {
                            "$ref": "#/components/schemas/PartialDate"
                        }
                    }
                },
                "title": "EventDataSanctionFlag"
            },
            "EventResolution": {
                "description": "A single profile resolution",
                "type": "string",
                "enum": [
                    "UNRESOLVED",
                    "MISMATCH",
                    "MATCH",
                    "IGNORE",
                    "CREATED_TASK"
                ],
                "title": "EventResolution"
            },
            "EventResource": {
                "description": "A single profile event (such as a PEP or Sanction match)",
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "creation_date": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTime"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "resolution": {
                        "$ref": "#/components/schemas/EventResolution"
                    },
                    "resolution_reason": {
                        "type": "string",
                        "description": "Users provided reason for resolution"
                    },
                    "resolution_date": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTime"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "resolution_task_ids": {
                        "type": "array",
                        "description": "Related Task Ids",
                        "items": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    "data": {
                        "$ref": "#/components/schemas/EventData"
                    }
                },
                "title": "EventResource"
            },
            "EventType": {
                "type": "string",
                "description": "Profile event type",
                "enum": [
                    "PEP_FLAG",
                    "SANCTION_FLAG",
                    "DOCUMENT_EXPIRY",
                    "TRANSACTION_ALERT",
                    "REVIEW_NEEDED",
                    "ADVERSE_MEDIA_FLAG",
                    "REFER_FLAG"
                ],
                "title": "EventType"
            },
            "FalsePositive": {
                "description": "Details of a false positive",
                "type": "object",
                "properties": {
                    "match_id": {
                        "type": "string",
                        "description": "ID of the Sanction Match"
                    },
                    "match_modified_date": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "reasons": {
                        "type": "array",
                        "description": "Reasons for false positive",
                        "items": {
                            "type": "string",
                            "description": "Reason"
                        }
                    },
                    "issuer": {
                        "type": "string",
                        "description": "Name of issuing authority"
                    }
                },
                "title": "FalsePositive"
            },
            "FieldCheckResult": {
                "type": "string",
                "description": "Whether the field(s) were valid",
                "enum": [
                    "CHECK_UNCERTAIN",
                    "CHECK_INVALID",
                    "CHECK_VALID"
                ],
                "title": "FieldCheckResult"
            },
            "FileResource": {
                "description": "The base unit data type of documents. This just represents a file. For more context on the file you probably want to wrap it with a DocumentImageResource",
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The file name"
                    }
                },
                "anyOf": [
                    {
                        "properties": {
                            "encrypted_data": {
                                "$ref": "#/components/schemas/EncryptedData"
                            }
                        },
                        "required": [
                            "encrypted_data"
                        ]
                    },
                    {
                        "properties": {},
                        "required": [
                            "decrypted_data"
                        ]
                    },
                    {
                        "properties": {}
                    }
                ],
                "required": [
                    "id"
                ],
                "title": "FileResource"
            },
            "FreeformAddress": {
                "description": "Free-form address. Address lines are preferably comma separated, although this is not required",
                "type": "object",
                "properties": {
                    "type": {
                        "description": "The type of a freeform address is always `FREEFORM`",
                        "type": "string",
                        "enum": [
                            "FREEFORM"
                        ]
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "text": {
                        "description": "A free text description of the address",
                        "type": "string"
                    }
                },
                "required": [
                    "country",
                    "text",
                    "type"
                ],
                "additionalProperties": false,
                "title": "FreeformAddress"
            },
            "FullName": {
                "type": "object",
                "description": "The individual's name. This is broken down into different parts",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The individual's title"
                    },
                    "given_names": {
                        "type": "array",
                        "description": "An array of the individual's given (first & middle) names",
                        "items": {
                            "type": "string"
                        }
                    },
                    "family_name": {
                        "type": "string",
                        "description": "The individual's family name (surname)"
                    },
                    "alt_family_names": {
                        "type": "array",
                        "description": "An array of the individual's other family names (surnames). This typically might include a maiden name",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": "FullName"
            },
            "Gender": {
                "description": "Gender. Leave unset for non-binary genders",
                "type": "string",
                "enum": [
                    "M",
                    "F"
                ],
                "title": "Gender"
            },
            "ICAOCode": {
                "description": "[ICAO Code](https://www.icao.int/publications/Documents/9303_p3_cons_en.pdf) used on Passports",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    {
                        "type": "string",
                        "enum": [
                            "GBN",
                            "GBO",
                            "GBP",
                            "GBS",
                            "EUE",
                            "UNO",
                            "UNA",
                            "UNK",
                            "XBA",
                            "XIM",
                            "XCC",
                            "XCO",
                            "XEC",
                            "XPO",
                            "XOM",
                            "XXA",
                            "XXB",
                            "XXC",
                            "XXX"
                        ]
                    }
                ],
                "title": "ICAOCode"
            },
            "Identification": {
                "description": "Identification information for a PEP, such as Passport",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of identification, such as Passport"
                    },
                    "values": {
                        "type": "array",
                        "description": "Identification values",
                        "items": {
                            "properties": {
                                "notes": {
                                    "type": "string",
                                    "description": "Notes on identification value"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Identification value"
                                }
                            }
                        }
                    }
                },
                "title": "Identification"
            },
            "IndividualData": {
                "description": "Top-level data field for individuals",
                "title": "IndividualData",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EntityDataBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "entity_type": {
                                "type": "string",
                                "enum": [
                                    "INDIVIDUAL"
                                ],
                                "description": "You must include set the entity_type as `INDIVIDUAL` to distinguish IndividualData from other types of EntityData"
                            },
                            "personal_details": {
                                "$ref": "#/components/schemas/PersonalDetails"
                            },
                            "address_history": {
                                "$ref": "#/components/schemas/AddressHistory"
                            },
                            "contact_details": {
                                "description": "Phone number and email address",
                                "type": "object",
                                "properties": {
                                    "phone_number": {
                                        "type": "string",
                                        "description": "The phone number of the individual"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "The email of the individual"
                                    }
                                },
                                "additionalProperties": false
                            },
                            "ip_location": {
                                "$ref": "#/components/schemas/IPLocation"
                            }
                        }
                    }
                ]
            },
            "IPLocation": {
                "description": "Stores the given IP address and the automatically detected country and continent",
                "type": "object",
                "properties": {
                    "ip_address": {
                        "description": "The IP address of the individual",
                        "type": "string"
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "continent": {
                        "description": "The continent where the IP address is located. Automatically detected on a best effort basis",
                        "type": "string",
                        "enum": [
                            "AF",
                            "AN",
                            "AS",
                            "EU",
                            "NA",
                            "OC",
                            "SA"
                        ]
                    }
                },
                "required": [
                    "ip_address"
                ],
                "title": "IPLocation"
            },
            "Location": {
                "description": "Locations related to a PEP or sanctioned entity, such as birth place",
                "properties": {
                    "city": {
                        "description": "City",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address",
                        "type": "string"
                    },
                    "type": {
                        "description": "Location type, e.g. birth place",
                        "type": "string"
                    }
                },
                "title": "Location"
            },
            "MatchResult": {
                "description": "Match result against a database",
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "Number of matches"
                    },
                    "match": {
                        "type": "boolean",
                        "description": "If there was at least one match"
                    }
                },
                "title": "MatchResult"
            },
            "MediaArticle": {
                "type": "object",
                "description": "PEPs and Sanctions Media Article",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "URL to article"
                    },
                    "pdf_url": {
                        "type": "string",
                        "description": "URL to PDF"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of article"
                    },
                    "snippet": {
                        "type": "string",
                        "description": "Article snippet displayed in portal"
                    },
                    "date": {
                        "$ref": "#/components/schemas/Date"
                    }
                },
                "title": "MediaArticle"
            },
            "MonetaryValue": {
                "type": "object",
                "description": "A monetary amount, including the currency it is measured in",
                "properties": {
                    "currency_code": {
                        "$ref": "#/components/schemas/CurrencyCode"
                    },
                    "value": {
                        "type": "number",
                        "description": "The amount of the currency"
                    }
                },
                "title": "MonetaryValue"
            },
            "NoteResource": {
                "type": "object",
                "description": "Base note resource definition",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "created_on": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "author_name": {
                        "description": "If `author_name_customised` is `false` this will be equal to `author.name` or the name of the API key. If `author_name_customised` is `true` this field was manually specified.",
                        "type": "string"
                    },
                    "author_name_customised": {
                        "description": "Is `true` if the author_name was set to a custom value.",
                        "type": "boolean"
                    },
                    "author": {
                        "description": "Note author",
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/UUID"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of user that created note"
                            }
                        },
                        "required": [
                            "id",
                            "name"
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CreateNoteResource"
                    }
                ],
                "required": [
                    "id",
                    "created_on"
                ],
                "title": "NoteResource"
            },
            "Officers": {
                "description": "List of officers in the company, including directors, company secretaries, partners, etc",
                "type": "object",
                "properties": {
                    "directors": {
                        "type": "array",
                        "description": "List of company directors",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedEntity"
                        }
                    },
                    "secretaries": {
                        "type": "array",
                        "description": "List of company secretaries",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedEntity"
                        }
                    },
                    "partners": {
                        "type": "array",
                        "description": "List of company partners",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedEntity"
                        }
                    },
                    "resigned": {
                        "type": "array",
                        "description": "List of previous officers who have now resigned",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedEntity"
                        }
                    },
                    "trustees": {
                        "type": "array",
                        "description": "List of company trustees",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedEntity"
                        }
                    },
                    "other": {
                        "type": "array",
                        "description": "List of company officers who do not fit into any of the above categories",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedEntity"
                        }
                    }
                },
                "title": "Officers"
            },
            "OwnershipStructure": {
                "description": "List of shareholders, share classes and beneficial owners of the company",
                "type": "object",
                "properties": {
                    "shareholders": {
                        "type": "array",
                        "description": "Owners of shares in the company",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedEntity"
                        }
                    },
                    "share_classes": {
                        "type": "array",
                        "description": "Details of the share classes owned by the shareholders",
                        "items": {
                            "$ref": "#/components/schemas/ShareClassDescription"
                        }
                    },
                    "beneficial_owners": {
                        "type": "array",
                        "description": "Entities who own or control more than 25% of a company\u2019s shares or voting rights, or who otherwise exercise control over the company or its management",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedEntity"
                        }
                    }
                },
                "title": "OwnershipStructure"
            },
            "PartialDate": {
                "description": "Partial date, recording a year and possibly month and day. The date will be in one of three formats `YYYY`, `YYYY-MM`, `YYYY-MM-DD`",
                "type": "string",
                "pattern": "^\\d{4}(-\\d{2}(-\\d{2})?)?$",
                "title": "PartialDate",
                "example": "1992"
            },
            "PEPRole": {
                "description": "Details of a PEPRole",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the role e.g. Head of State"
                    },
                    "tier": {
                        "type": "integer",
                        "description": "The PEP Tier"
                    },
                    "from_date": {
                        "$ref": "#/components/schemas/PartialDate"
                    },
                    "to_date": {
                        "$ref": "#/components/schemas/PartialDate"
                    },
                    "is_current": {
                        "type": "boolean",
                        "description": "If this is a currently held role"
                    }
                },
                "title": "PEPRole"
            },
            "PEP": {
                "description": "Details of a PEP",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of PEP"
                    },
                    "from_date": {
                        "$ref": "#/components/schemas/PartialDate"
                    },
                    "to_date": {
                        "$ref": "#/components/schemas/PartialDate"
                    },
                    "is_current": {
                        "type": "boolean",
                        "description": "Is the PEP in force"
                    },
                    "match": {
                        "type": "boolean",
                        "description": "If a PEP was matched"
                    },
                    "tier": {
                        "type": "integer",
                        "description": "The highest tier of the matched PEPs"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PEPRole"
                        },
                        "description": "The roles causing the PEP result"
                    }
                },
                "title": "PEP"
            },
            "PersonalDetails": {
                "description": "Personal information about an individual",
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/FullName"
                    },
                    "dob": {
                        "$ref": "#/components/schemas/PartialDate"
                    },
                    "nationality": {
                        "$ref": "#/components/schemas/ICAOCode"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/Gender"
                    },
                    "national_identity_number": {
                        "type": "object",
                        "description": "Some countries issue national identity numbers (or unique taxpayer reference numbers) to individuals. Examples include the [Italian Codice Fiscale](https://en.wikipedia.org/wiki/Italian_fiscal_code_card) or the [American Social Security Number](https://en.wikipedia.org/wiki/Social_Security_number)",
                        "properties": {},
                        "additionalProperties": false,
                        "x-patternProperties": {
                            "^[A-Z]{3}$": {
                                "type": "string",
                                "description": "Other countries national identity numbers can also be submitted; although their format is not yet validated",
                                "keyName": "countrycode"
                            }
                        }
                    }
                },
                "additionalProperties": false,
                "title": "PersonalDetails"
            },
            "PreviousName": {
                "type": "object",
                "description": "Previous names of the company",
                "properties": {
                    "start": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "end": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "name": {
                        "type": "string",
                        "description": "The previous company name"
                    }
                },
                "title": "PreviousName"
            },
            "ProductApplicationRevertDecision": {
                "type": "object",
                "description": "Represent a change in a product application status",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "A comment about the change"
                    }
                },
                "title": "ProductApplicationRevertDecision"
            },
            "ProductApplicationStatusChange": {
                "type": "object",
                "description": "Represent a change in a product application status",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/ProductApplicationStatus"
                    },
                    "date": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "decisioner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A comment about the change"
                    }
                },
                "title": "ProductApplicationStatusChange"
            },
            "ProductApplication": {
                "type": "object",
                "description": "A product application on a profile",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "product": {
                        "$ref": "#/components/schemas/ProductResource"
                    },
                    "associated_role": {
                        "$ref": "#/components/schemas/AssociatedRole"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ProductApplicationStatus"
                    },
                    "flag": {
                        "$ref": "#/components/schemas/ProductApplicationFlag"
                    },
                    "required_tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskVariant"
                        },
                        "description": "The tasks that are required to be completed for this product application to be approved"
                    },
                    "history": {
                        "description": "A history of the previous application statuses that the profile has been through for this product",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductApplicationStatusChange"
                        }
                    },
                    "flag_history": {
                        "description": "A history of the previous application statuses and flags that the profile has been through for this product",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "$ref": "#/components/schemas/ProductApplicationStatus"
                                },
                                "flag": {
                                    "$ref": "#/components/schemas/ProductApplicationFlag"
                                },
                                "date": {
                                    "$ref": "#/components/schemas/DateTime"
                                }
                            }
                        }
                    },
                    "approval_blockers": {
                        "type": "array",
                        "description": "Actions that need to be completed before the profile can be approved",
                        "items": {
                            "$ref": "#/components/schemas/ApprovalBlocker"
                        }
                    },
                    "hidden": {
                        "description": "If this product application is hidden",
                        "type": "boolean"
                    }
                },
                "title": "ProductApplication"
            },
            "ProductApplicationFlag": {
                "type": "string",
                "description": "This flag provides information on outstanding actions to complete an application.\n\n* `DECIDED`: the current status of the application is `APPROVED`, `REJECTED` or `CANCELLED` nothing further needs to be performed on the application.\n*`REQUIRES_RISK_SCORE`: the risk score of the profile cannot currently be determined, usually more information is required to change from this flag.\n* `WAITING_ON_COLLECTION_STEPS`: there are outstanding CollectionSteps on the profile.\n* `WAITING_ON_CHECKS`: there are checks in progress.\n* `REQUIRES_MANUAL_TASK_COMPLETION`: there is an incomplete task on the application.\n* `READY_FOR_DECISION`: awaiting a final decision on application.\n\nOnly one flag will be returned, if multiple are applicable the first according to the order here will be returned.",
                "enum": [
                    "AUTOMATING",
                    "DECIDED",
                    "WAITING_ON_COLLECTION_STEPS",
                    "WAITING_ON_CHECKS",
                    "REQUIRES_MANUAL_TASK_COMPLETION",
                    "READY_FOR_DECISION",
                    "REQUIRES_RISK_SCORE",
                    "RECALCULATING_RISK"
                ],
                "title": "ProductApplicationFlag"
            },
            "ProductApplicationStatus": {
                "type": "string",
                "description": "The current status of the application.\n* `APPLIED`: Can go to `APPROVED` or `REJECTED`.\n* `APPROVED`: Can go to `IN_REVIEW` or `CANCELLED`.\n* `IN_REVIEW`: Can go to `APPROVED` or `CANCELLED`.\n* `REJECTED`: Final state. If a user \"unrejects\" in the UI, it will hide this product application and create a new one with the same history (minus the last rejection).\n* `CANCELLED`: Final state.",
                "enum": [
                    "APPLIED",
                    "APPROVED",
                    "IN_REVIEW",
                    "REJECTED",
                    "CANCELLED"
                ],
                "title": "ProductApplicationStatus"
            },
            "ProductResource": {
                "type": "object",
                "description": "A product definition",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the product"
                    },
                    "automatically_apply": {
                        "type": "boolean",
                        "description": "Whether new profiles should automatically apply for this product"
                    },
                    "automatically_approve": {
                        "type": "boolean",
                        "description": "Whether applications for this product are automatically approved when all tasks are completed"
                    },
                    "is_deleted": {
                        "type": "boolean",
                        "description": "Whether this product application has been deleted"
                    }
                },
                "title": "ProductResource"
            },
            "ProfileCategory": {
                "description": "State of the customer for whom this profile exists",
                "type": "string",
                "enum": [
                    "CUSTOMER",
                    "PREVIOUS_CUSTOMER",
                    "APPLICANT",
                    "INACTIVE_APPLICANT"
                ],
                "title": "ProfileCategory"
            },
            "ProfileCapabilities": {
                "type": "object",
                "description": "A mapping of profiles to the capabilties a user has over them",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/CapabilityType"
                    }
                },
                "title": "ProfileCapabilities"
            },
            "ProfileFilterType": {
                "type": "string",
                "description": "Profile filter type",
                "enum": [
                    "ENTITY_TYPE",
                    "PROFILE_ROOT_ID",
                    "ADDRESS",
                    "EVENTS",
                    "RISK_LABELS",
                    "PROFILE_ORIGIN_ID",
                    "TAGS"
                ],
                "title": "ProfileFilterType"
            },
            "ProfileResource": {
                "description": "A customer profile",
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "creation_date": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTime"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "collected_data": {
                        "$ref": "#/components/schemas/EntityData"
                    },
                    "verified_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EntityData"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "checks": {
                        "allOf": [
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CheckResource"
                                },
                                "description": "A list of checks performed on this profile"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "collection_steps": {
                        "allOf": [
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CollectionStep"
                                },
                                "description": "CollectionSteps describe data which is required, but missing on the profile.\n\nThey are typically generated when a check is instructed (but not enough data is avaialble to perform it), or when a compliance officer explictly requests further information"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "display_name": {
                        "allOf": [
                            {
                                "type": "string",
                                "description": "The name (given and family name of an individual; legal name of a company) of the entity"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "applications": {
                        "type": "array",
                        "description": "Product applications on profile",
                        "items": {
                            "$ref": "#/components/schemas/ProductApplication"
                        }
                    },
                    "task_types": {
                        "allOf": [
                            {
                                "type": "array",
                                "description": "Task types active on profile",
                                "items": {
                                    "$ref": "#/components/schemas/TaskType"
                                }
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "tasks": {
                        "allOf": [
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TaskResource"
                                },
                                "description": "A list of tasks which need to (or have been) performed on a profile. This set is typically configured as part of your smart policy. You will need to complete all tasks to approve a profile"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "events": {
                        "allOf": [
                            {
                                "type": "array",
                                "description": "Events on a profile",
                                "items": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProfileCategory"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProfileStatus"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "document_images": {
                        "allOf": [
                            {
                                "type": "array",
                                "description": "List of document images attached to the profile",
                                "items": {
                                    "$ref": "#/components/schemas/DocumentImageResource"
                                }
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "tags": {
                        "allOf": [
                            {
                                "type": "array",
                                "description": "A list of tags attached to the profile",
                                "items": {
                                    "$ref": "#/components/schemas/TagResource"
                                }
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "risk": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RiskOverviewResource"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "unresolved_event_types": {
                        "allOf": [
                            {
                                "type": "array",
                                "description": "The types of remaining unresolved events",
                                "items": {
                                    "$ref": "#/components/schemas/EventType"
                                }
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "task_progress": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TaskProgress"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "has_associates": {
                        "allOf": [
                            {
                                "type": "boolean",
                                "description": "Whether the profile has any associated profiles"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "has_collection_steps": {
                        "allOf": [
                            {
                                "type": "boolean",
                                "description": "Whether the profile has any outstanding CollectionSteps"
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    },
                    "linked_to": {
                        "allOf": [
                            {
                                "type": "array",
                                "description": "Contains a list of \"linked\" profiles, with a description of the relationship between this and the parent profile",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "profile": {
                                            "$ref": "#/components/schemas/ProfileResource"
                                        },
                                        "roles": {
                                            "description": "The role this profile takes in relation to the linked profile. For example, it might be a shareholder in a company",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AssociatedRole"
                                            }
                                        }
                                    },
                                    "required": [
                                        "profile",
                                        "roles"
                                    ]
                                }
                            },
                            {
                                "readOnly": true
                            }
                        ]
                    }
                },
                "title": "ProfileResource"
            },
            "ProfileSearchResults": {
                "description": "Search results for a profile search",
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total number of matching profiles"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "The maximum number of profiles returned in the response"
                    },
                    "offset": {
                        "type": "integer",
                        "description": "The number of profiles skipped in the response"
                    },
                    "hidden": {
                        "type": "integer",
                        "description": "The number of profiles hidden due to a lack of permissions."
                    },
                    "capabilities": {
                        "$ref": "#/components/schemas/ProfileCapabilities"
                    },
                    "results": {
                        "description": "The returned profiles",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProfileResource"
                        }
                    }
                },
                "required": [
                    "count",
                    "limit",
                    "offset",
                    "results",
                    "associated_results"
                ],
                "title": "ProfileSearchResults"
            },
            "ProfileStatus": {
                "description": "Whether a profile has been suspended or banned",
                "type": "string",
                "enum": [
                    "NORMAL",
                    "SUSPENDED",
                    "BANNED"
                ],
                "title": "ProfileStatus"
            },
            "RiskLevel": {
                "type": "object",
                "description": "Calculated risk level",
                "properties": {
                    "score": {
                        "type": "number",
                        "description": "Calculated risk score"
                    },
                    "category": {
                        "$ref": "#/components/schemas/RiskLevelCategory"
                    }
                },
                "title": "RiskLevel"
            },
            "InheritedRisk": {
                "type": "object",
                "description": "Provides root profile name and id",
                "properties": {
                    "top_parent_name": {
                        "type": "string",
                        "description": "Name of root parent providing the risk"
                    },
                    "top_parent_id": {
                        "$ref": "#/components/schemas/UUID"
                    }
                },
                "required": [
                    "top_parent_id"
                ],
                "title": "InheritedRisk"
            },
            "RiskLevelCategory": {
                "type": "string",
                "description": "Risk level category",
                "enum": [
                    "LOW",
                    "MEDIUM",
                    "HIGH",
                    "UNDETERMINED"
                ],
                "title": "RiskLevelCategory"
            },
            "RiskOverviewResource": {
                "type": "object",
                "description": "Overview of a profile's risk",
                "properties": {
                    "components": {
                        "description": "Components making up the profile's risk",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComponentRisk"
                        }
                    },
                    "is_pending": {
                        "description": "Is the risk currently being calculated. If it is, the risk score is not up to date so may not be accurate.",
                        "type": "boolean"
                    },
                    "missing_required_components": {
                        "description": "Components required in order to calculate a risk score",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "inherited": {
                        "$ref": "#/components/schemas/InheritedRisk"
                    },
                    "overall_risk": {
                        "$ref": "#/components/schemas/RiskLevel"
                    }
                },
                "required": [
                    "components",
                    "overall_risk",
                    "missing_required_components"
                ],
                "title": "RiskOverviewResource"
            },
            "Role": {
                "description": "Relation between the individual/company and your institution. For now, this will always be `INDIVIDUAL_CUSTOMER`",
                "type": "string",
                "enum": [
                    "INDIVIDUAL_CUSTOMER",
                    "INDIVIDUAL_ASSOCIATED",
                    "COMPANY_CUSTOMER",
                    "COMPANY_ASSOCIATED"
                ],
                "title": "Role"
            },
            "Sanction": {
                "description": "Details of a sanction",
                "type": "object",
                "properties": {
                    "issuer": {
                        "type": "string",
                        "description": "Name of issuing authority"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Sanction"
                    },
                    "kind": {
                        "type": "string",
                        "description": "Kind of Sanction"
                    },
                    "list": {
                        "type": "string",
                        "description": "Sanction list containing this sanction"
                    },
                    "is_current": {
                        "type": "boolean",
                        "description": "Is the Sanction in force"
                    },
                    "is_past": {
                        "type": "boolean",
                        "description": "Is the Sanction no longer in force"
                    },
                    "type": {
                        "type": "string",
                        "description": "Sanction type"
                    },
                    "time_periods": {
                        "type": "array",
                        "description": "Date range of Sanction",
                        "items": {
                            "type": "object",
                            "properties": {
                                "from_date": {
                                    "$ref": "#/components/schemas/PartialDate"
                                },
                                "to_date": {
                                    "$ref": "#/components/schemas/PartialDate"
                                }
                            }
                        }
                    }
                },
                "title": "Sanction"
            },
            "SanctionsResult": {
                "description": "Result of a PEPs and Sanctions Check",
                "title": "SanctionsResult",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DefaultSanctionsResult"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "is_enhanced": {
                                "description": "If this is an enchanced Sanctions result",
                                "type": "boolean"
                            },
                            "gender": {
                                "type": "string",
                                "description": "Gender of match"
                            },
                            "pep_rating": {
                                "type": "string",
                                "description": "PEP Rating"
                            },
                            "remarks": {
                                "type": "array",
                                "description": "Sanction remarks from data provider",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "deceased": {
                                "description": "If the result is deceased",
                                "type": "boolean"
                            },
                            "disqualified_director": {
                                "description": "If the result is a disqualified director",
                                "type": "boolean"
                            },
                            "insolvent": {
                                "description": "If the result is a insolvent",
                                "type": "boolean"
                            },
                            "law_enforcement": {
                                "description": "If the result is a member of law enforcement",
                                "type": "boolean"
                            },
                            "riskography": {
                                "type": "string",
                                "description": "Description of PEP or sanctioned persons background"
                            },
                            "deceased_dates": {
                                "type": "array",
                                "description": "Reported death dates",
                                "items": {
                                    "$ref": "#/components/schemas/PartialDate"
                                }
                            },
                            "inactive_as_rca_related_to_pep_dates": {
                                "type": "array",
                                "description": "Dates of relation to PEP cessation",
                                "items": {
                                    "$ref": "#/components/schemas/PartialDate"
                                }
                            },
                            "inactive_as_pep_dates": {
                                "type": "array",
                                "description": "Dates of PEP inactivity",
                                "items": {
                                    "$ref": "#/components/schemas/PartialDate"
                                }
                            },
                            "identifications": {
                                "type": "array",
                                "description": "Identifications such as a passport",
                                "items": {
                                    "$ref": "#/components/schemas/Identification"
                                }
                            },
                            "locations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Location"
                                },
                                "description": "Locations related to a PEP or sanctioned entity, such as birth place"
                            }
                        }
                    }
                ]
            },
            "ShareClassDescription": {
                "type": "object",
                "description": "Details of the share classes that can be owned by company shareholders",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Share class name, for example `Ordinary`"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency for share value"
                    },
                    "value": {
                        "type": "number",
                        "description": "Value of a single share of this class in `currency`"
                    },
                    "votes": {
                        "type": "number",
                        "description": "When the share class has a vote weighting a share may have more than one vote. A share class may also provide no vote"
                    }
                },
                "required": [
                    "name"
                ],
                "title": "ShareClassDescription"
            },
            "Shareholding": {
                "description": "For shareholders, a detailed break-down of their ownership by share class",
                "type": "object",
                "properties": {
                    "provider_name": {
                        "type": "string",
                        "description": "The name of the provider of the shareholding information"
                    },
                    "share_class": {
                        "type": "string",
                        "description": "Name of the share class. Should match one of the entries in the company's share class list"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Number of shares owned by this entity"
                    },
                    "percentage": {
                        "type": "number",
                        "description": "Percentage ownership of the company corresponding to this number of shares"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency in which the shares are valued"
                    }
                },
                "title": "Shareholding"
            },
            "SicCode": {
                "description": "Standard industrial classification of economic activities, [SIC](https://www.gov.uk/government/publications/standard-industrial-classification-of-economic-activities-sic)",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "The [SIC](https://www.gov.uk/government/publications/standard-industrial-classification-of-economic-activities-sic) code for example `62012`"
                    },
                    "description": {
                        "type": "string",
                        "description": "Detail of SIC code, for example `Business and domestic software development`"
                    }
                },
                "title": "SicCode"
            },
            "Source": {
                "description": "A source of information for a PEP or sanction",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Category of the source"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL of source"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of source"
                    }
                },
                "required": [
                    "name"
                ],
                "title": "Source"
            },
            "StructuredAddress": {
                "description": "Structured address format",
                "type": "object",
                "properties": {
                    "type": {
                        "description": "The type of a structured address is always `STRUCTURED`",
                        "type": "string",
                        "enum": [
                            "STRUCTURED"
                        ]
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "state_province": {
                        "description": "The state/province in which the address is located. This is required for addresses in the USA and Canada.\n\nNote that a UK _county_ should not go here",
                        "type": "string"
                    },
                    "county": {
                        "description": "The county in which the address is located.\n\nNote that a USA/Canadian _state_ or _province_ should not go here",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "The postal code or zip code for the address",
                        "type": "string"
                    },
                    "locality": {
                        "description": "The city or town in which the address is located",
                        "type": "string"
                    },
                    "route": {
                        "description": "The route or street name on which address is located",
                        "type": "string"
                    },
                    "street_number": {
                        "description": "The street number of the address",
                        "type": "string"
                    },
                    "premise": {
                        "description": "The name of the building",
                        "type": "string"
                    },
                    "subpremise": {
                        "description": "A subaddress within the building. This is typically a flat number",
                        "type": "string"
                    },
                    "original_freeform_address": {
                        "description": "Original freeform address prior to structuring attempts",
                        "type": "string"
                    },
                    "original_structured_address": {
                        "description": "Original structured address prior to normalisation",
                        "type": "object"
                    }
                },
                "required": [
                    "type"
                ],
                "title": "StructuredAddress"
            },
            "TagResource": {
                "description": "A tag attached to a customer's profile",
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Tag name"
                    },
                    "is_automatic": {
                        "type": "boolean",
                        "description": "If the tag was automatically applied"
                    }
                },
                "title": "TagResource"
            },
            "TaskProgress": {
                "description": "Progress on tasks of a profile",
                "type": "object",
                "properties": {
                    "completed_count": {
                        "type": "integer",
                        "description": "Tasks completed"
                    },
                    "total_count": {
                        "type": "integer",
                        "description": "Total tasks on profile"
                    }
                },
                "title": "TaskProgress"
            },
            "TaskResource": {
                "type": "object",
                "description": "A task variant that can be used in a task set",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "variant": {
                        "$ref": "#/components/schemas/TaskVariant"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TaskType"
                    },
                    "is_complete": {
                        "type": "boolean",
                        "description": "Whether a task is currently complete"
                    },
                    "is_deleted": {
                        "type": "boolean",
                        "description": "Whether this task set has been deleted"
                    },
                    "is_expired": {
                        "type": "boolean",
                        "description": "Whether a task is expired"
                    },
                    "creation_date": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "check_ids": {
                        "type": "array",
                        "description": "A list of the checks which have been associated with this task",
                        "items": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    "expiry_date": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "title": "TaskResource"
            },
            "TaskType": {
                "type": "string",
                "description": "PassFort's supported task types",
                "enum": [
                    "INDIVIDUAL_VERIFY_IDENTITY",
                    "INDIVIDUAL_VERIFY_ADDRESS",
                    "INDIVIDUAL_VERIFY_SOURCE_OF_FUNDS",
                    "INDIVIDUAL_ASSESS_MEDIA_AND_POLITICAL_AND_SANCTIONS_EXPOSURE",
                    "INDIVIDUAL_ASSESS_POLITICAL_AND_SANCTIONS_EXPOSURE",
                    "INDIVIDUAL_ASSESS_POLITICAL_EXPOSURE",
                    "INDIVIDUAL_ASSESS_SANCTIONS_EXPOSURE",
                    "INDIVIDUAL_VERIFY_BANK_ACCOUNT",
                    "INDIVIDUAL_MANUAL_TASK",
                    "COMPANY_VERIFY_IDENTITY",
                    "COMPANY_VERIFY_CHARITY",
                    "COMPANY_IDENTIFY_AUTHORIZED_PERSONS",
                    "COMPANY_IDENTIFY_OFFICERS",
                    "COMPANY_IDENTIFY_TRUSTEES",
                    "COMPANY_IDENTIFY_BENEFICIAL_OWNERS",
                    "COMPANY_REVIEW_FILINGS",
                    "COMPANY_ASSESS_SANCTIONS_EXPOSURE",
                    "COMPANY_ASSESS_MEDIA_EXPOSURE",
                    "COMPANY_ASSESS_MEDIA_AND_SANCTIONS_EXPOSURE",
                    "COMPANY_MANUAL_TASK",
                    "COMPANY_VERIFY_BANK_ACCOUNT",
                    "COMPANY_VERIFY_TAX_STATUS"
                ],
                "title": "TaskType"
            },
            "TaskVariant": {
                "description": "The identifier of a variant of a task.",
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the task variant"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the task variant"
                    },
                    "task_type": {
                        "$ref": "#/components/schemas/TaskType"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "TaskVariant"
            },
            "TimePeriod": {
                "description": "A period of time",
                "type": "object",
                "properties": {
                    "from_date": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "to_date": {
                        "$ref": "#/components/schemas/Date"
                    }
                },
                "title": "TimePeriod"
            },
            "UKBankAccount": {
                "description": "UK bank account with sort code and account number",
                "type": "object",
                "properties": {
                    "country": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "type": {
                        "description": "Bank account type",
                        "type": "string",
                        "enum": [
                            "UK_ACCOUNT"
                        ]
                    },
                    "sort_code": {
                        "$ref": "#/components/schemas/UKBankSortCode"
                    },
                    "account_number": {
                        "$ref": "#/components/schemas/UKBankAccountNumber"
                    }
                },
                "required": [
                    "type",
                    "country",
                    "sort_code",
                    "account_number"
                ],
                "title": "UKBankAccount"
            },
            "UKBankAccountNumber": {
                "description": "UK bank account number",
                "type": "string",
                "pattern": "^\\d{8,8}$",
                "title": "UKBankAccountNumber"
            },
            "UKBankSortCode": {
                "description": "UK bank account sort code",
                "type": "string",
                "pattern": "^\\d{6,6}$|^\\d{2,2}\\-\\d{2,2}\\-\\d{2,2}$",
                "title": "UKBankSortCode"
            },
            "User": {
                "type": "object",
                "description": "Your user details",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User Name"
                    },
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "email": {
                        "type": "string",
                        "description": "User Email"
                    }
                },
                "title": "User",
                "nullable": true
            },
            "UUID": {
                "description": "[Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)",
                "type": "string",
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "title": "UUID"
            }
        }
    },
    "security": [
        {
            "API_Key_Header": []
        },
        {
            "API_Key_Query_Parameter": []
        }
    ],
    "paths": {
        "/address/format": {
            "get": {
                "description": "Request a full formatted address of a result returned from /address/search. Note this endpoint uses PassFort credits, for full details contact your account representative.",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StructuredAddress"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Address Search"
                ],
                "summary": "Request a formatted address",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "description": "The address ID taken from querying /address/search",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "required": true,
                        "in": "query",
                        "description": "The three letter country code of the address",
                        "name": "country_code",
                        "schema": {
                            "$ref": "#/components/schemas/CountryCode"
                        }
                    }
                ]
            }
        },
        "/address/search": {
            "get": {
                "description": "This endpoint returns addresses from a free text search, the full formatted address can then be requested from /address/format/.",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "number",
                                            "description": "The count of results found"
                                        },
                                        "results": {
                                            "type": "array",
                                            "description": "The matched addresses",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "The match ID, used to get the full address"
                                                    },
                                                    "query_substrings": {
                                                        "description": "An array of two-tuples containing indices that mark the start and end of where the query matches in the suggested address",
                                                        "type": "array",
                                                        "maxLength": 2,
                                                        "minLength": 2,
                                                        "items": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "number",
                                                                "description": "The start/end index of the matched string"
                                                            }
                                                        }
                                                    },
                                                    "text": {
                                                        "type": "string",
                                                        "description": "A sample of the address, to get the full address use /address/format"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "text"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "count"
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Address Search"
                ],
                "summary": "Search for formatted address by string",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "description": "The free text of an address to search. Maximum length 200.",
                        "name": "address",
                        "schema": {
                            "type": "string",
                            "maxLength": 200
                        }
                    },
                    {
                        "required": true,
                        "in": "query",
                        "description": "The three letter country code of the address",
                        "name": "country_code",
                        "schema": {
                            "$ref": "#/components/schemas/CountryCode"
                        }
                    },
                    {
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return, default 7, maximum 100",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ]
            }
        },
        "/api_keys/collect": {
            "post": {
                "description": "Generates an API key for multiple profiles to use with the collect API",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "profile_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The profile ids which this key should have access to"
                                    }
                                },
                                "required": [
                                    "profile_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "A description of the key"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "The generated key"
                                        },
                                        "expiry": {
                                            "$ref": "#/components/schemas/DateTime"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Collect"
                ],
                "summary": "Create collect API key for multiple profiles"
            }
        },
        "/api_keys/collect/{profile_id}": {
            "post": {
                "description": "Generates an API key for a single profile to use with the Collect API",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "A description of the key"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "The generated key"
                                        },
                                        "expiry": {
                                            "$ref": "#/components/schemas/DateTime"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Collect"
                ],
                "summary": "Create collect API key",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles": {
            "get": {
                "description": "This gets all profiles on your account. Query parameters can be used to filter the profiles.\n\nThis returns minimal information on each profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileSearchResults"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Profiles"
                ],
                "summary": "Get list of profiles",
                "parameters": [
                    {
                        "required": false,
                        "in": "query",
                        "description": "A query string. This allows profiles to be searched. PassFort allows searching over names and tags",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "required": false,
                        "in": "query",
                        "description": "The maximum number of profiles to return in the query. Can be used in conjunction with _offset_ to paginate results. Defaults to `50`, maximum value is `200`",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "required": false,
                        "in": "query",
                        "description": "The number of profiles to skip when returning. Can be used in conjunction with _limit_ to paginate results. Defaults to `0`",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "required": false,
                        "in": "query",
                        "description": "A comma seperated list of ProfileCategory to be included in response e.g. `CUSTOMER`",
                        "name": "categories",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "post": {
                "description": "Create a new profile. You will need specify the _role_ of the customer, which will define what rules apply to that customer",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ProfileResource"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "readOnly": true
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Profiles"
                ],
                "summary": "Create a profile"
            }
        },
        "/profiles/{profile_id}": {
            "get": {
                "description": "Returns detailed information a profile. This includes the collected data, details on the checks that have been run, and information on a profile's ongoing applications and tasks",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Profiles"
                ],
                "summary": "Get a profile",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/applications": {
            "get": {
                "description": "Returns a list of product applications associated with a profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductApplication"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Applications"
                ],
                "summary": "Get all product applications on profile",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "Create a new product application on a profile",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductApplication"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApplication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Applications"
                ],
                "summary": "Create a product application",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/applications/{application_id}": {
            "get": {
                "description": "Returns the specified production application against a profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApplication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Applications"
                ],
                "summary": "Get a product application",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the application",
                        "name": "application_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "Update the status of a product application, e.g. to approve it",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductApplication"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApplication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Applications"
                ],
                "summary": "Update a product application",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the application",
                        "name": "application_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/applications/{application_id}/revert_decision": {
            "post": {
                "description": "Recreate an application in case it was accidentally rejected or cancelled",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductApplicationRevertDecision",
                                "nullable": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApplication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Applications"
                ],
                "summary": "Revert application decision",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the application",
                        "name": "application_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/audit-items": {
            "get": {
                "description": "This returns a list of audit items associated with the profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuditItem"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Audit"
                ],
                "summary": "Get all audits for a profile",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/checks": {
            "get": {
                "description": "Returns a list of checks associated with the profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CheckResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Checks"
                ],
                "summary": "Get all checks run on a profile",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "Instruct a check on a profile",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckResource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Checks"
                ],
                "summary": "Run a check",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/checks/{check_id}": {
            "get": {
                "description": "Returns the current status and result of an instructed check",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Checks"
                ],
                "summary": "Get results of a specific check",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the specific check instance",
                        "name": "check_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "Checks are immutable and their results cannot be edited. This endpoint will update the `task_ids` on a check, all other fields are ignored",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckResource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Checks"
                ],
                "summary": "Update the tasks associated with a check",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the specific check instance",
                        "name": "check_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/checks/{check_id}/approve": {
            "post": {
                "description": "Generates a new check (checks are immutable and therefore not edited) from the specified check and sets the result to manually approved",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "Checks"
                ],
                "summary": "Manually approve a check",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the specific check instance",
                        "name": "check_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/checks/{check_id}/reject": {
            "post": {
                "description": "Generates a new check (checks are immutable and therefore not edited) from the specified check and sets the result to manually rejected",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "Checks"
                ],
                "summary": "Manually reject a check",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the specific check instance",
                        "name": "check_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/collected_data": {
            "get": {
                "description": "Returns the data which has been collected from the user",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityData"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Profiles"
                ],
                "summary": "Get collected data",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "This allows you to update the collected data on the profile. This may be to either add more information collected from the customer, or to amend previously submitted information.\n\nPassFort does **not** merge data submitted. New data will **replace** the profile's existing `collected_data`.\n\nNote that updating data (e.g. amending a date of birth) may invalidate the results of your previously run checks. PassFort does not currently handle this for you, and you will need to explicitly detect and rerun these checks",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntityData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityData"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Profiles"
                ],
                "summary": "Update collected data",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/collected_data/documents": {
            "post": {
                "description": "This is a convenience method to add a document to collected_data without having to `POST` the entirety of the collected_data",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Document"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Profiles"
                ],
                "summary": "Add a document",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/collection_steps": {
            "get": {
                "description": "Get a list of collection steps on a profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionStep"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Collect"
                ],
                "summary": "Get a list of collection steps",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "Replace the collection steps on a profile",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CollectionStep"
                                },
                                "description": "The new collection steps for the profile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionStep"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Collect"
                ],
                "summary": "Update profile collection steps",
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/document_images": {
            "get": {
                "description": "Get list of document images uploaded on a profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DocumentImageResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Document Images"
                ],
                "summary": "Get list of document images",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "This method allows you to submit a documnt image. It returns an `id` which can be used to reference the image in other data structures (typically as part of the document data structure)",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentImageResource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentImageResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Document Images"
                ],
                "summary": "Upload a new document image",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/document_images/{document_image_id}": {
            "get": {
                "description": "Get information on a specific document image",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentImageResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Document Images"
                ],
                "summary": "Get a document image",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the document image",
                        "name": "document_image_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/events": {
            "get": {
                "description": "Retrieve a list of all events on a profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EventResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Events"
                ],
                "summary": "Get a list of profile events",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "Create new event on a profile",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/EventResource"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "allOf": [
                                                    {},
                                                    {
                                                        "readOnly": true
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Events"
                ],
                "summary": "Create a new profile event",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/events/{event_id}": {
            "get": {
                "description": "Get details on a profile event",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Events"
                ],
                "summary": "Get a profile event by ID",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the event",
                        "name": "event_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "Update profile event (for example mark it as a mismatch)",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventResource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Events"
                ],
                "summary": "Update a profile event",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the event",
                        "name": "event_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/events/bulk_update": {
            "post": {
                "description": "Update multiple profile events (for example mark them as a mismatch)",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EventResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Events"
                ],
                "summary": "Update multiple events",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/files": {
            "post": {
                "description": "This method allows you to submit a file",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFileResource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Document Images"
                ],
                "summary": "Upload a new file",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/files/{file_id}": {
            "get": {
                "description": "Request a file by ID",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Document Images"
                ],
                "summary": "Get a file by ID",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the file",
                        "name": "file_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/status": {
            "get": {
                "description": "This returns whether a profile has been suspended or banned",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileStatus"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Profiles"
                ],
                "summary": "Get profile status",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "Change the status of a profile",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfileStatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileStatus"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Profiles"
                ],
                "summary": "Change profile status",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/tags": {
            "post": {
                "description": "Add a tag to a profile",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagResource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tags"
                ],
                "summary": "Add tag",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/tags/{tag_id}": {
            "delete": {
                "description": "Remove a tag from a profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tags"
                ],
                "summary": "Remove tag",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The id of the tag to be removed",
                        "name": "tag_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/tasks": {
            "get": {
                "description": "Returns a list of tasks associated with a profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaskResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all tasks on a profile",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "As mentioned above, products have a default set of tasks which are automatically created when a user applies. However, if you want to add a task on a case by case basis, you can use this endpoint",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskResource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tasks"
                ],
                "summary": "Add a task to a profile",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/tasks/{task_id}": {
            "get": {
                "description": "Returns the specified task against a profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a task",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the task",
                        "name": "task_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "Update the `is_complete` and `check_ids` fields on a task. All other fields are ignored",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskResource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tasks"
                ],
                "summary": "Complete a task",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the task",
                        "name": "task_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/tasks/{task_id}/notes": {
            "get": {
                "description": "Get notes associated with a task on a profile",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NoteResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tasks"
                ],
                "summary": "Get notes on a task",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the task",
                        "name": "task_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            },
            "post": {
                "description": "Add a note to a task on a profile",
                "requestBody": {
                    "description": "Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateNoteResource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoteResource"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tasks"
                ],
                "summary": "Add a note to a task",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the task",
                        "name": "task_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/profiles/{profile_id}/tasks/{task_id}/notes/{note_id}": {
            "delete": {
                "description": "Remove a note from a task (will not be removed from audit log)",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a note",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the profile",
                        "name": "profile_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the task",
                        "name": "task_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    },
                    {
                        "required": true,
                        "in": "path",
                        "description": "The identifier for the note",
                        "name": "note_id",
                        "schema": {
                            "$ref": "#/components/schemas/UUID"
                        }
                    }
                ]
            }
        },
        "/search/companies": {
            "get": {
                "description": "Search a provider for company details",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "companies": {
                                            "type": "array",
                                            "description": "The companies found in the search",
                                            "items": {
                                                "type": "object",
                                                "description": "Detail of each company found",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The name of the candidate company"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "description": "The company number of the candidate company"
                                                    },
                                                    "country": {
                                                        "$ref": "#/components/schemas/CountryCode"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "description": "The state of the candidate company (returned for US companies)",
                                                        "nullable": true
                                                    }
                                                }
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "An array of errors that occurred when the check was performed. Hopefully empty!",
                                            "items": {
                                                "$ref": "#/components/schemas/Error"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Search"
                ],
                "summary": "Search companies",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "description": "The country to search within",
                        "name": "country",
                        "schema": {
                            "$ref": "#/components/schemas/CountryCode"
                        }
                    },
                    {
                        "required": false,
                        "in": "query",
                        "description": "The state to search within. This is required for US companies",
                        "name": "state",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "required": true,
                        "in": "query",
                        "description": "The string to search. For Companies House and BREX by kompany this can be company number or name. DueDil and Bureau van Dijk only support search by name",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "required": false,
                        "in": "query",
                        "description": "DEPRECATED: Specify the provider to use for search. Search provider is now determined by your Company Registry Check configuration.",
                        "name": "provider",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "duedil"
                            ]
                        }
                    }
                ]
            }
        },
        "/tags/search/{term}": {
            "get": {
                "description": "Search for a tag",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TagResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tags"
                ],
                "summary": "Search tags",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "description": "A search term to find all similarly named tags",
                        "name": "term",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return, returns all results by default.",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ]
            }
        },
        "/whoami": {
            "get": {
                "description": "Details about current API key",
                "responses": {
                    "200": {
                        "description": "Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "institution": {
                                            "type": "object",
                                            "description": "The institution this API key is associated with",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "Institution Name"
                                                },
                                                "id": {
                                                    "$ref": "#/components/schemas/UUID"
                                                }
                                            }
                                        },
                                        "user": {
                                            "type": "object",
                                            "description": "Your user details",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "User Name"
                                                },
                                                "id": {
                                                    "$ref": "#/components/schemas/UUID"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "description": "User Email"
                                                }
                                            },
                                            "nullable": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Other"
                ],
                "summary": "Who Am I"
            }
        }
    }
}