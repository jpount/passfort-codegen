/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.DocumentCategory;
import org.openapitools.client.model.DocumentData;
import org.openapitools.client.model.DocumentImageResource;
import org.openapitools.client.model.DocumentResult;
import org.openapitools.client.model.DocumentType;

/**
 * A single document with one or more images
 */
@ApiModel(description = "A single document with one or more images")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class Document {
  @JsonProperty("id")
  private String id;

  @JsonProperty("category")
  private DocumentCategory category = null;

  @JsonProperty("document_type")
  private DocumentType documentType = null;

  @JsonProperty("images")
  private List<DocumentImageResource> images = new ArrayList<DocumentImageResource>();

  @JsonProperty("extracted_data")
  private DocumentData extractedData = null;

  @JsonProperty("verification_result")
  private DocumentResult verificationResult = null;

  public Document id(String id) {
    this.id = id;
    return this;
  }

   /**
   * [Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)
   * @return id
  **/
  @ApiModelProperty(value = "[Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Document category(DocumentCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(required = true, value = "")
  public DocumentCategory getCategory() {
    return category;
  }

  public void setCategory(DocumentCategory category) {
    this.category = category;
  }

  public Document documentType(DocumentType documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Get documentType
   * @return documentType
  **/
  @ApiModelProperty(required = true, value = "")
  public DocumentType getDocumentType() {
    return documentType;
  }

  public void setDocumentType(DocumentType documentType) {
    this.documentType = documentType;
  }

  public Document images(List<DocumentImageResource> images) {
    this.images = images;
    return this;
  }

  public Document addImagesItem(DocumentImageResource imagesItem) {
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Images that make up the document. For example a &#x60;DRIVING_LICENCE&#x60; will have a &#x60;FRONT&#x60; and a &#x60;BACK&#x60;
   * @return images
  **/
  @ApiModelProperty(required = true, value = "Images that make up the document. For example a `DRIVING_LICENCE` will have a `FRONT` and a `BACK`")
  public List<DocumentImageResource> getImages() {
    return images;
  }

  public void setImages(List<DocumentImageResource> images) {
    this.images = images;
  }

  public Document extractedData(DocumentData extractedData) {
    this.extractedData = extractedData;
    return this;
  }

   /**
   * Get extractedData
   * @return extractedData
  **/
  @ApiModelProperty(value = "")
  public DocumentData getExtractedData() {
    return extractedData;
  }

  public void setExtractedData(DocumentData extractedData) {
    this.extractedData = extractedData;
  }

  public Document verificationResult(DocumentResult verificationResult) {
    this.verificationResult = verificationResult;
    return this;
  }

   /**
   * Get verificationResult
   * @return verificationResult
  **/
  @ApiModelProperty(value = "")
  public DocumentResult getVerificationResult() {
    return verificationResult;
  }

  public void setVerificationResult(DocumentResult verificationResult) {
    this.verificationResult = verificationResult;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this.id, document.id) &&
        Objects.equals(this.category, document.category) &&
        Objects.equals(this.documentType, document.documentType) &&
        Objects.equals(this.images, document.images) &&
        Objects.equals(this.extractedData, document.extractedData) &&
        Objects.equals(this.verificationResult, document.verificationResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, category, documentType, images, extractedData, verificationResult);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    extractedData: ").append(toIndentedString(extractedData)).append("\n");
    sb.append("    verificationResult: ").append(toIndentedString(verificationResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

