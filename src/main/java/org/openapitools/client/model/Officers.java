/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AssociatedEntity;

/**
 * List of officers in the company, including directors, company secretaries, partners, etc
 */
@ApiModel(description = "List of officers in the company, including directors, company secretaries, partners, etc")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class Officers {
  @JsonProperty("directors")
  private List<AssociatedEntity> directors = null;

  @JsonProperty("secretaries")
  private List<AssociatedEntity> secretaries = null;

  @JsonProperty("partners")
  private List<AssociatedEntity> partners = null;

  @JsonProperty("resigned")
  private List<AssociatedEntity> resigned = null;

  @JsonProperty("trustees")
  private List<AssociatedEntity> trustees = null;

  @JsonProperty("other")
  private List<AssociatedEntity> other = null;

  public Officers directors(List<AssociatedEntity> directors) {
    this.directors = directors;
    return this;
  }

  public Officers addDirectorsItem(AssociatedEntity directorsItem) {
    if (this.directors == null) {
      this.directors = new ArrayList<AssociatedEntity>();
    }
    this.directors.add(directorsItem);
    return this;
  }

   /**
   * List of company directors
   * @return directors
  **/
  @ApiModelProperty(value = "List of company directors")
  public List<AssociatedEntity> getDirectors() {
    return directors;
  }

  public void setDirectors(List<AssociatedEntity> directors) {
    this.directors = directors;
  }

  public Officers secretaries(List<AssociatedEntity> secretaries) {
    this.secretaries = secretaries;
    return this;
  }

  public Officers addSecretariesItem(AssociatedEntity secretariesItem) {
    if (this.secretaries == null) {
      this.secretaries = new ArrayList<AssociatedEntity>();
    }
    this.secretaries.add(secretariesItem);
    return this;
  }

   /**
   * List of company secretaries
   * @return secretaries
  **/
  @ApiModelProperty(value = "List of company secretaries")
  public List<AssociatedEntity> getSecretaries() {
    return secretaries;
  }

  public void setSecretaries(List<AssociatedEntity> secretaries) {
    this.secretaries = secretaries;
  }

  public Officers partners(List<AssociatedEntity> partners) {
    this.partners = partners;
    return this;
  }

  public Officers addPartnersItem(AssociatedEntity partnersItem) {
    if (this.partners == null) {
      this.partners = new ArrayList<AssociatedEntity>();
    }
    this.partners.add(partnersItem);
    return this;
  }

   /**
   * List of company partners
   * @return partners
  **/
  @ApiModelProperty(value = "List of company partners")
  public List<AssociatedEntity> getPartners() {
    return partners;
  }

  public void setPartners(List<AssociatedEntity> partners) {
    this.partners = partners;
  }

  public Officers resigned(List<AssociatedEntity> resigned) {
    this.resigned = resigned;
    return this;
  }

  public Officers addResignedItem(AssociatedEntity resignedItem) {
    if (this.resigned == null) {
      this.resigned = new ArrayList<AssociatedEntity>();
    }
    this.resigned.add(resignedItem);
    return this;
  }

   /**
   * List of previous officers who have now resigned
   * @return resigned
  **/
  @ApiModelProperty(value = "List of previous officers who have now resigned")
  public List<AssociatedEntity> getResigned() {
    return resigned;
  }

  public void setResigned(List<AssociatedEntity> resigned) {
    this.resigned = resigned;
  }

  public Officers trustees(List<AssociatedEntity> trustees) {
    this.trustees = trustees;
    return this;
  }

  public Officers addTrusteesItem(AssociatedEntity trusteesItem) {
    if (this.trustees == null) {
      this.trustees = new ArrayList<AssociatedEntity>();
    }
    this.trustees.add(trusteesItem);
    return this;
  }

   /**
   * List of company trustees
   * @return trustees
  **/
  @ApiModelProperty(value = "List of company trustees")
  public List<AssociatedEntity> getTrustees() {
    return trustees;
  }

  public void setTrustees(List<AssociatedEntity> trustees) {
    this.trustees = trustees;
  }

  public Officers other(List<AssociatedEntity> other) {
    this.other = other;
    return this;
  }

  public Officers addOtherItem(AssociatedEntity otherItem) {
    if (this.other == null) {
      this.other = new ArrayList<AssociatedEntity>();
    }
    this.other.add(otherItem);
    return this;
  }

   /**
   * List of company officers who do not fit into any of the above categories
   * @return other
  **/
  @ApiModelProperty(value = "List of company officers who do not fit into any of the above categories")
  public List<AssociatedEntity> getOther() {
    return other;
  }

  public void setOther(List<AssociatedEntity> other) {
    this.other = other;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Officers officers = (Officers) o;
    return Objects.equals(this.directors, officers.directors) &&
        Objects.equals(this.secretaries, officers.secretaries) &&
        Objects.equals(this.partners, officers.partners) &&
        Objects.equals(this.resigned, officers.resigned) &&
        Objects.equals(this.trustees, officers.trustees) &&
        Objects.equals(this.other, officers.other);
  }

  @Override
  public int hashCode() {
    return Objects.hash(directors, secretaries, partners, resigned, trustees, other);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Officers {\n");
    
    sb.append("    directors: ").append(toIndentedString(directors)).append("\n");
    sb.append("    secretaries: ").append(toIndentedString(secretaries)).append("\n");
    sb.append("    partners: ").append(toIndentedString(partners)).append("\n");
    sb.append("    resigned: ").append(toIndentedString(resigned)).append("\n");
    sb.append("    trustees: ").append(toIndentedString(trustees)).append("\n");
    sb.append("    other: ").append(toIndentedString(other)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

