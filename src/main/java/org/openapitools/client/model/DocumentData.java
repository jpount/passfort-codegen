/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.DocumentResult;
import org.openapitools.client.model.ICAOCode;
import org.openapitools.client.model.PersonalDetails;

/**
 * All data extracted from a document
 */
@ApiModel(description = "All data extracted from a document")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class DocumentData {
  @JsonProperty("issuer")
  private String issuer;

  @JsonProperty("issuing_country")
  private ICAOCode issuingCountry = null;

  @JsonProperty("number")
  private String number;

  @JsonProperty("issued")
  private String issued;

  @JsonProperty("expiry")
  private String expiry;

  @JsonProperty("personal_details")
  private PersonalDetails personalDetails = null;

  @JsonProperty("address_history")
  private List<Object> addressHistory = null;

  @JsonProperty("mrz1")
  private String mrz1;

  @JsonProperty("mrz2")
  private String mrz2;

  @JsonProperty("mrz3")
  private String mrz3;

  @JsonProperty("result")
  private DocumentResult result = null;

  @JsonProperty("external_service")
  private String externalService;

  @JsonProperty("external_ref")
  private String externalRef;

  public DocumentData issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Name of the issuing authority
   * @return issuer
  **/
  @ApiModelProperty(value = "Name of the issuing authority")
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }

  public DocumentData issuingCountry(ICAOCode issuingCountry) {
    this.issuingCountry = issuingCountry;
    return this;
  }

   /**
   * Get issuingCountry
   * @return issuingCountry
  **/
  @ApiModelProperty(value = "")
  public ICAOCode getIssuingCountry() {
    return issuingCountry;
  }

  public void setIssuingCountry(ICAOCode issuingCountry) {
    this.issuingCountry = issuingCountry;
  }

  public DocumentData number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Document number
   * @return number
  **/
  @ApiModelProperty(value = "Document number")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public DocumentData issued(String issued) {
    this.issued = issued;
    return this;
  }

   /**
   * Exact date in &#x60;YYYY-MM-DD&#x60; format
   * @return issued
  **/
  @ApiModelProperty(example = "1992-11-24", value = "Exact date in `YYYY-MM-DD` format")
  public String getIssued() {
    return issued;
  }

  public void setIssued(String issued) {
    this.issued = issued;
  }

  public DocumentData expiry(String expiry) {
    this.expiry = expiry;
    return this;
  }

   /**
   * Exact date in &#x60;YYYY-MM-DD&#x60; format
   * @return expiry
  **/
  @ApiModelProperty(example = "1992-11-24", value = "Exact date in `YYYY-MM-DD` format")
  public String getExpiry() {
    return expiry;
  }

  public void setExpiry(String expiry) {
    this.expiry = expiry;
  }

  public DocumentData personalDetails(PersonalDetails personalDetails) {
    this.personalDetails = personalDetails;
    return this;
  }

   /**
   * Get personalDetails
   * @return personalDetails
  **/
  @ApiModelProperty(value = "")
  public PersonalDetails getPersonalDetails() {
    return personalDetails;
  }

  public void setPersonalDetails(PersonalDetails personalDetails) {
    this.personalDetails = personalDetails;
  }

  public DocumentData addressHistory(List<Object> addressHistory) {
    this.addressHistory = addressHistory;
    return this;
  }

  public DocumentData addAddressHistoryItem(Object addressHistoryItem) {
    if (this.addressHistory == null) {
      this.addressHistory = new ArrayList<Object>();
    }
    this.addressHistory.add(addressHistoryItem);
    return this;
  }

   /**
   * A list of addresses in which the individual has lived. Each of these can have an approximate start and end date.  Addresses are ordered by &#x60;start_date&#x60;. If two addresses have the same &#x60;start_date&#x60;, &#x60;end_date&#x60; will order them. An address with no &#x60;start_date&#x60; and &#x60;end_date&#x60; will be assumed to be current. If multiple addresses have no &#x60;start_date&#x60; and &#x60;end_date&#x60; then their order will be random.
   * @return addressHistory
  **/
  @ApiModelProperty(value = "A list of addresses in which the individual has lived. Each of these can have an approximate start and end date.  Addresses are ordered by `start_date`. If two addresses have the same `start_date`, `end_date` will order them. An address with no `start_date` and `end_date` will be assumed to be current. If multiple addresses have no `start_date` and `end_date` then their order will be random.")
  public List<Object> getAddressHistory() {
    return addressHistory;
  }

  public void setAddressHistory(List<Object> addressHistory) {
    this.addressHistory = addressHistory;
  }

  public DocumentData mrz1(String mrz1) {
    this.mrz1 = mrz1;
    return this;
  }

   /**
   * Line one of the [Machine-Readable Zone](https://en.wikipedia.org/wiki/Machine-readable_passport)
   * @return mrz1
  **/
  @ApiModelProperty(value = "Line one of the [Machine-Readable Zone](https://en.wikipedia.org/wiki/Machine-readable_passport)")
  public String getMrz1() {
    return mrz1;
  }

  public void setMrz1(String mrz1) {
    this.mrz1 = mrz1;
  }

  public DocumentData mrz2(String mrz2) {
    this.mrz2 = mrz2;
    return this;
  }

   /**
   * Line two of the MRZ
   * @return mrz2
  **/
  @ApiModelProperty(value = "Line two of the MRZ")
  public String getMrz2() {
    return mrz2;
  }

  public void setMrz2(String mrz2) {
    this.mrz2 = mrz2;
  }

  public DocumentData mrz3(String mrz3) {
    this.mrz3 = mrz3;
    return this;
  }

   /**
   * Line three of the MRZ
   * @return mrz3
  **/
  @ApiModelProperty(value = "Line three of the MRZ")
  public String getMrz3() {
    return mrz3;
  }

  public void setMrz3(String mrz3) {
    this.mrz3 = mrz3;
  }

  public DocumentData result(DocumentResult result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @ApiModelProperty(value = "")
  public DocumentResult getResult() {
    return result;
  }

  public void setResult(DocumentResult result) {
    this.result = result;
  }

  public DocumentData externalService(String externalService) {
    this.externalService = externalService;
    return this;
  }

   /**
   * External service
   * @return externalService
  **/
  @ApiModelProperty(value = "External service")
  public String getExternalService() {
    return externalService;
  }

  public void setExternalService(String externalService) {
    this.externalService = externalService;
  }

  public DocumentData externalRef(String externalRef) {
    this.externalRef = externalRef;
    return this;
  }

   /**
   * External service reference
   * @return externalRef
  **/
  @ApiModelProperty(value = "External service reference")
  public String getExternalRef() {
    return externalRef;
  }

  public void setExternalRef(String externalRef) {
    this.externalRef = externalRef;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentData documentData = (DocumentData) o;
    return Objects.equals(this.issuer, documentData.issuer) &&
        Objects.equals(this.issuingCountry, documentData.issuingCountry) &&
        Objects.equals(this.number, documentData.number) &&
        Objects.equals(this.issued, documentData.issued) &&
        Objects.equals(this.expiry, documentData.expiry) &&
        Objects.equals(this.personalDetails, documentData.personalDetails) &&
        Objects.equals(this.addressHistory, documentData.addressHistory) &&
        Objects.equals(this.mrz1, documentData.mrz1) &&
        Objects.equals(this.mrz2, documentData.mrz2) &&
        Objects.equals(this.mrz3, documentData.mrz3) &&
        Objects.equals(this.result, documentData.result) &&
        Objects.equals(this.externalService, documentData.externalService) &&
        Objects.equals(this.externalRef, documentData.externalRef);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issuer, issuingCountry, number, issued, expiry, personalDetails, addressHistory, mrz1, mrz2, mrz3, result, externalService, externalRef);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentData {\n");
    
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    issuingCountry: ").append(toIndentedString(issuingCountry)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    issued: ").append(toIndentedString(issued)).append("\n");
    sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
    sb.append("    personalDetails: ").append(toIndentedString(personalDetails)).append("\n");
    sb.append("    addressHistory: ").append(toIndentedString(addressHistory)).append("\n");
    sb.append("    mrz1: ").append(toIndentedString(mrz1)).append("\n");
    sb.append("    mrz2: ").append(toIndentedString(mrz2)).append("\n");
    sb.append("    mrz3: ").append(toIndentedString(mrz3)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    externalService: ").append(toIndentedString(externalService)).append("\n");
    sb.append("    externalRef: ").append(toIndentedString(externalRef)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

