/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Document;

/**
 * Base class for profile data. An entity is either an individual or a company
 */
@ApiModel(description = "Base class for profile data. An entity is either an individual or a company")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class EntityDataBase {
  @JsonProperty("customer_ref")
  private String customerRef;

  @JsonProperty("documents")
  private List<Document> documents = null;

  @JsonProperty("external_refs")
  private Object externalRefs = null;

  public EntityDataBase customerRef(String customerRef) {
    this.customerRef = customerRef;
    return this;
  }

   /**
   * You can supply your own reference to an entity. This might correspond to your database models.  This reference is included in webhooks
   * @return customerRef
  **/
  @ApiModelProperty(value = "You can supply your own reference to an entity. This might correspond to your database models.  This reference is included in webhooks")
  public String getCustomerRef() {
    return customerRef;
  }

  public void setCustomerRef(String customerRef) {
    this.customerRef = customerRef;
  }

  public EntityDataBase documents(List<Document> documents) {
    this.documents = documents;
    return this;
  }

  public EntityDataBase addDocumentsItem(Document documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<Document>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * Set of documents to submit
   * @return documents
  **/
  @ApiModelProperty(value = "Set of documents to submit")
  public List<Document> getDocuments() {
    return documents;
  }

  public void setDocuments(List<Document> documents) {
    this.documents = documents;
  }

  public EntityDataBase externalRefs(Object externalRefs) {
    this.externalRefs = externalRefs;
    return this;
  }

   /**
   * References used to pull data directly from external providers
   * @return externalRefs
  **/
  @ApiModelProperty(value = "References used to pull data directly from external providers")
  public Object getExternalRefs() {
    return externalRefs;
  }

  public void setExternalRefs(Object externalRefs) {
    this.externalRefs = externalRefs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityDataBase entityDataBase = (EntityDataBase) o;
    return Objects.equals(this.customerRef, entityDataBase.customerRef) &&
        Objects.equals(this.documents, entityDataBase.documents) &&
        Objects.equals(this.externalRefs, entityDataBase.externalRefs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerRef, documents, externalRefs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityDataBase {\n");
    
    sb.append("    customerRef: ").append(toIndentedString(customerRef)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    externalRefs: ").append(toIndentedString(externalRefs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

