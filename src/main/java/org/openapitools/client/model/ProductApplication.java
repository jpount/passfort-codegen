/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApprovalBlocker;
import org.openapitools.client.model.AssociatedRole;
import org.openapitools.client.model.ProductApplicationFlag;
import org.openapitools.client.model.ProductApplicationFlagHistory;
import org.openapitools.client.model.ProductApplicationStatus;
import org.openapitools.client.model.ProductApplicationStatusChange;
import org.openapitools.client.model.ProductResource;
import org.openapitools.client.model.TaskVariant;

/**
 * A product application on a profile
 */
@ApiModel(description = "A product application on a profile")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class ProductApplication {
  @JsonProperty("id")
  private String id;

  @JsonProperty("product")
  private ProductResource product = null;

  @JsonProperty("associated_role")
  private AssociatedRole associatedRole = null;

  @JsonProperty("status")
  private ProductApplicationStatus status = null;

  @JsonProperty("flag")
  private ProductApplicationFlag flag = null;

  @JsonProperty("required_tasks")
  private List<TaskVariant> requiredTasks = null;

  @JsonProperty("history")
  private List<ProductApplicationStatusChange> history = null;

  @JsonProperty("flag_history")
  private List<ProductApplicationFlagHistory> flagHistory = null;

  @JsonProperty("approval_blockers")
  private List<ApprovalBlocker> approvalBlockers = null;

  @JsonProperty("hidden")
  private Boolean hidden;

  public ProductApplication id(String id) {
    this.id = id;
    return this;
  }

   /**
   * [Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)
   * @return id
  **/
  @ApiModelProperty(value = "[Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProductApplication product(ProductResource product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @ApiModelProperty(value = "")
  public ProductResource getProduct() {
    return product;
  }

  public void setProduct(ProductResource product) {
    this.product = product;
  }

  public ProductApplication associatedRole(AssociatedRole associatedRole) {
    this.associatedRole = associatedRole;
    return this;
  }

   /**
   * Get associatedRole
   * @return associatedRole
  **/
  @ApiModelProperty(value = "")
  public AssociatedRole getAssociatedRole() {
    return associatedRole;
  }

  public void setAssociatedRole(AssociatedRole associatedRole) {
    this.associatedRole = associatedRole;
  }

  public ProductApplication status(ProductApplicationStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public ProductApplicationStatus getStatus() {
    return status;
  }

  public void setStatus(ProductApplicationStatus status) {
    this.status = status;
  }

  public ProductApplication flag(ProductApplicationFlag flag) {
    this.flag = flag;
    return this;
  }

   /**
   * Get flag
   * @return flag
  **/
  @ApiModelProperty(value = "")
  public ProductApplicationFlag getFlag() {
    return flag;
  }

  public void setFlag(ProductApplicationFlag flag) {
    this.flag = flag;
  }

  public ProductApplication requiredTasks(List<TaskVariant> requiredTasks) {
    this.requiredTasks = requiredTasks;
    return this;
  }

  public ProductApplication addRequiredTasksItem(TaskVariant requiredTasksItem) {
    if (this.requiredTasks == null) {
      this.requiredTasks = new ArrayList<TaskVariant>();
    }
    this.requiredTasks.add(requiredTasksItem);
    return this;
  }

   /**
   * The tasks that are required to be completed for this product application to be approved
   * @return requiredTasks
  **/
  @ApiModelProperty(value = "The tasks that are required to be completed for this product application to be approved")
  public List<TaskVariant> getRequiredTasks() {
    return requiredTasks;
  }

  public void setRequiredTasks(List<TaskVariant> requiredTasks) {
    this.requiredTasks = requiredTasks;
  }

  public ProductApplication history(List<ProductApplicationStatusChange> history) {
    this.history = history;
    return this;
  }

  public ProductApplication addHistoryItem(ProductApplicationStatusChange historyItem) {
    if (this.history == null) {
      this.history = new ArrayList<ProductApplicationStatusChange>();
    }
    this.history.add(historyItem);
    return this;
  }

   /**
   * A history of the previous application statuses that the profile has been through for this product
   * @return history
  **/
  @ApiModelProperty(value = "A history of the previous application statuses that the profile has been through for this product")
  public List<ProductApplicationStatusChange> getHistory() {
    return history;
  }

  public void setHistory(List<ProductApplicationStatusChange> history) {
    this.history = history;
  }

  public ProductApplication flagHistory(List<ProductApplicationFlagHistory> flagHistory) {
    this.flagHistory = flagHistory;
    return this;
  }

  public ProductApplication addFlagHistoryItem(ProductApplicationFlagHistory flagHistoryItem) {
    if (this.flagHistory == null) {
      this.flagHistory = new ArrayList<ProductApplicationFlagHistory>();
    }
    this.flagHistory.add(flagHistoryItem);
    return this;
  }

   /**
   * A history of the previous application statuses and flags that the profile has been through for this product
   * @return flagHistory
  **/
  @ApiModelProperty(value = "A history of the previous application statuses and flags that the profile has been through for this product")
  public List<ProductApplicationFlagHistory> getFlagHistory() {
    return flagHistory;
  }

  public void setFlagHistory(List<ProductApplicationFlagHistory> flagHistory) {
    this.flagHistory = flagHistory;
  }

  public ProductApplication approvalBlockers(List<ApprovalBlocker> approvalBlockers) {
    this.approvalBlockers = approvalBlockers;
    return this;
  }

  public ProductApplication addApprovalBlockersItem(ApprovalBlocker approvalBlockersItem) {
    if (this.approvalBlockers == null) {
      this.approvalBlockers = new ArrayList<ApprovalBlocker>();
    }
    this.approvalBlockers.add(approvalBlockersItem);
    return this;
  }

   /**
   * Actions that need to be completed before the profile can be approved
   * @return approvalBlockers
  **/
  @ApiModelProperty(value = "Actions that need to be completed before the profile can be approved")
  public List<ApprovalBlocker> getApprovalBlockers() {
    return approvalBlockers;
  }

  public void setApprovalBlockers(List<ApprovalBlocker> approvalBlockers) {
    this.approvalBlockers = approvalBlockers;
  }

  public ProductApplication hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * If this product application is hidden
   * @return hidden
  **/
  @ApiModelProperty(value = "If this product application is hidden")
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductApplication productApplication = (ProductApplication) o;
    return Objects.equals(this.id, productApplication.id) &&
        Objects.equals(this.product, productApplication.product) &&
        Objects.equals(this.associatedRole, productApplication.associatedRole) &&
        Objects.equals(this.status, productApplication.status) &&
        Objects.equals(this.flag, productApplication.flag) &&
        Objects.equals(this.requiredTasks, productApplication.requiredTasks) &&
        Objects.equals(this.history, productApplication.history) &&
        Objects.equals(this.flagHistory, productApplication.flagHistory) &&
        Objects.equals(this.approvalBlockers, productApplication.approvalBlockers) &&
        Objects.equals(this.hidden, productApplication.hidden);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, product, associatedRole, status, flag, requiredTasks, history, flagHistory, approvalBlockers, hidden);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductApplication {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    associatedRole: ").append(toIndentedString(associatedRole)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    flag: ").append(toIndentedString(flag)).append("\n");
    sb.append("    requiredTasks: ").append(toIndentedString(requiredTasks)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("    flagHistory: ").append(toIndentedString(flagHistory)).append("\n");
    sb.append("    approvalBlockers: ").append(toIndentedString(approvalBlockers)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

