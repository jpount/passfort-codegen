/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.client.model.FullName;
import org.openapitools.client.model.Gender;
import org.openapitools.client.model.ICAOCode;

/**
 * Personal information about an individual
 */
@ApiModel(description = "Personal information about an individual")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class PersonalDetails {
  @JsonProperty("name")
  private FullName name = null;

  @JsonProperty("dob")
  private String dob;

  @JsonProperty("nationality")
  private ICAOCode nationality = null;

  @JsonProperty("gender")
  private Gender gender = null;

  @JsonProperty("national_identity_number")
  private Object nationalIdentityNumber = null;

  public PersonalDetails name(FullName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public FullName getName() {
    return name;
  }

  public void setName(FullName name) {
    this.name = name;
  }

  public PersonalDetails dob(String dob) {
    this.dob = dob;
    return this;
  }

   /**
   * Partial date, recording a year and possibly month and day. The date will be in one of three formats &#x60;YYYY&#x60;, &#x60;YYYY-MM&#x60;, &#x60;YYYY-MM-DD&#x60;
   * @return dob
  **/
  @ApiModelProperty(example = "1992", value = "Partial date, recording a year and possibly month and day. The date will be in one of three formats `YYYY`, `YYYY-MM`, `YYYY-MM-DD`")
  public String getDob() {
    return dob;
  }

  public void setDob(String dob) {
    this.dob = dob;
  }

  public PersonalDetails nationality(ICAOCode nationality) {
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @ApiModelProperty(value = "")
  public ICAOCode getNationality() {
    return nationality;
  }

  public void setNationality(ICAOCode nationality) {
    this.nationality = nationality;
  }

  public PersonalDetails gender(Gender gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @ApiModelProperty(value = "")
  public Gender getGender() {
    return gender;
  }

  public void setGender(Gender gender) {
    this.gender = gender;
  }

  public PersonalDetails nationalIdentityNumber(Object nationalIdentityNumber) {
    this.nationalIdentityNumber = nationalIdentityNumber;
    return this;
  }

   /**
   * Some countries issue national identity numbers (or unique taxpayer reference numbers) to individuals. Examples include the [Italian Codice Fiscale](https://en.wikipedia.org/wiki/Italian_fiscal_code_card) or the [American Social Security Number](https://en.wikipedia.org/wiki/Social_Security_number)
   * @return nationalIdentityNumber
  **/
  @ApiModelProperty(value = "Some countries issue national identity numbers (or unique taxpayer reference numbers) to individuals. Examples include the [Italian Codice Fiscale](https://en.wikipedia.org/wiki/Italian_fiscal_code_card) or the [American Social Security Number](https://en.wikipedia.org/wiki/Social_Security_number)")
  public Object getNationalIdentityNumber() {
    return nationalIdentityNumber;
  }

  public void setNationalIdentityNumber(Object nationalIdentityNumber) {
    this.nationalIdentityNumber = nationalIdentityNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonalDetails personalDetails = (PersonalDetails) o;
    return Objects.equals(this.name, personalDetails.name) &&
        Objects.equals(this.dob, personalDetails.dob) &&
        Objects.equals(this.nationality, personalDetails.nationality) &&
        Objects.equals(this.gender, personalDetails.gender) &&
        Objects.equals(this.nationalIdentityNumber, personalDetails.nationalIdentityNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, dob, nationality, gender, nationalIdentityNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonalDetails {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    nationalIdentityNumber: ").append(toIndentedString(nationalIdentityNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

