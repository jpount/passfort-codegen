/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.client.model.CountryCode;

/**
 * Structured address format
 */
@ApiModel(description = "Structured address format")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class StructuredAddress {
  /**
   * The type of a structured address is always &#x60;STRUCTURED&#x60;
   */
  public enum TypeEnum {
    STRUCTURED("STRUCTURED");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }
  }

  @JsonProperty("type")
  private TypeEnum type;

  @JsonProperty("country")
  private CountryCode country = null;

  @JsonProperty("state_province")
  private String stateProvince;

  @JsonProperty("county")
  private String county;

  @JsonProperty("postal_code")
  private String postalCode;

  @JsonProperty("locality")
  private String locality;

  @JsonProperty("route")
  private String route;

  @JsonProperty("street_number")
  private String streetNumber;

  @JsonProperty("premise")
  private String premise;

  @JsonProperty("subpremise")
  private String subpremise;

  @JsonProperty("original_freeform_address")
  private String originalFreeformAddress;

  @JsonProperty("original_structured_address")
  private Object originalStructuredAddress = null;

  public StructuredAddress type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of a structured address is always &#x60;STRUCTURED&#x60;
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The type of a structured address is always `STRUCTURED`")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public StructuredAddress country(CountryCode country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(value = "")
  public CountryCode getCountry() {
    return country;
  }

  public void setCountry(CountryCode country) {
    this.country = country;
  }

  public StructuredAddress stateProvince(String stateProvince) {
    this.stateProvince = stateProvince;
    return this;
  }

   /**
   * The state/province in which the address is located. This is required for addresses in the USA and Canada.  Note that a UK _county_ should not go here
   * @return stateProvince
  **/
  @ApiModelProperty(value = "The state/province in which the address is located. This is required for addresses in the USA and Canada.  Note that a UK _county_ should not go here")
  public String getStateProvince() {
    return stateProvince;
  }

  public void setStateProvince(String stateProvince) {
    this.stateProvince = stateProvince;
  }

  public StructuredAddress county(String county) {
    this.county = county;
    return this;
  }

   /**
   * The county in which the address is located.  Note that a USA/Canadian _state_ or _province_ should not go here
   * @return county
  **/
  @ApiModelProperty(value = "The county in which the address is located.  Note that a USA/Canadian _state_ or _province_ should not go here")
  public String getCounty() {
    return county;
  }

  public void setCounty(String county) {
    this.county = county;
  }

  public StructuredAddress postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * The postal code or zip code for the address
   * @return postalCode
  **/
  @ApiModelProperty(value = "The postal code or zip code for the address")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public StructuredAddress locality(String locality) {
    this.locality = locality;
    return this;
  }

   /**
   * The city or town in which the address is located
   * @return locality
  **/
  @ApiModelProperty(value = "The city or town in which the address is located")
  public String getLocality() {
    return locality;
  }

  public void setLocality(String locality) {
    this.locality = locality;
  }

  public StructuredAddress route(String route) {
    this.route = route;
    return this;
  }

   /**
   * The route or street name on which address is located
   * @return route
  **/
  @ApiModelProperty(value = "The route or street name on which address is located")
  public String getRoute() {
    return route;
  }

  public void setRoute(String route) {
    this.route = route;
  }

  public StructuredAddress streetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
    return this;
  }

   /**
   * The street number of the address
   * @return streetNumber
  **/
  @ApiModelProperty(value = "The street number of the address")
  public String getStreetNumber() {
    return streetNumber;
  }

  public void setStreetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
  }

  public StructuredAddress premise(String premise) {
    this.premise = premise;
    return this;
  }

   /**
   * The name of the building
   * @return premise
  **/
  @ApiModelProperty(value = "The name of the building")
  public String getPremise() {
    return premise;
  }

  public void setPremise(String premise) {
    this.premise = premise;
  }

  public StructuredAddress subpremise(String subpremise) {
    this.subpremise = subpremise;
    return this;
  }

   /**
   * A subaddress within the building. This is typically a flat number
   * @return subpremise
  **/
  @ApiModelProperty(value = "A subaddress within the building. This is typically a flat number")
  public String getSubpremise() {
    return subpremise;
  }

  public void setSubpremise(String subpremise) {
    this.subpremise = subpremise;
  }

  public StructuredAddress originalFreeformAddress(String originalFreeformAddress) {
    this.originalFreeformAddress = originalFreeformAddress;
    return this;
  }

   /**
   * Original freeform address prior to structuring attempts
   * @return originalFreeformAddress
  **/
  @ApiModelProperty(value = "Original freeform address prior to structuring attempts")
  public String getOriginalFreeformAddress() {
    return originalFreeformAddress;
  }

  public void setOriginalFreeformAddress(String originalFreeformAddress) {
    this.originalFreeformAddress = originalFreeformAddress;
  }

  public StructuredAddress originalStructuredAddress(Object originalStructuredAddress) {
    this.originalStructuredAddress = originalStructuredAddress;
    return this;
  }

   /**
   * Original structured address prior to normalisation
   * @return originalStructuredAddress
  **/
  @ApiModelProperty(value = "Original structured address prior to normalisation")
  public Object getOriginalStructuredAddress() {
    return originalStructuredAddress;
  }

  public void setOriginalStructuredAddress(Object originalStructuredAddress) {
    this.originalStructuredAddress = originalStructuredAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StructuredAddress structuredAddress = (StructuredAddress) o;
    return Objects.equals(this.type, structuredAddress.type) &&
        Objects.equals(this.country, structuredAddress.country) &&
        Objects.equals(this.stateProvince, structuredAddress.stateProvince) &&
        Objects.equals(this.county, structuredAddress.county) &&
        Objects.equals(this.postalCode, structuredAddress.postalCode) &&
        Objects.equals(this.locality, structuredAddress.locality) &&
        Objects.equals(this.route, structuredAddress.route) &&
        Objects.equals(this.streetNumber, structuredAddress.streetNumber) &&
        Objects.equals(this.premise, structuredAddress.premise) &&
        Objects.equals(this.subpremise, structuredAddress.subpremise) &&
        Objects.equals(this.originalFreeformAddress, structuredAddress.originalFreeformAddress) &&
        Objects.equals(this.originalStructuredAddress, structuredAddress.originalStructuredAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, country, stateProvince, county, postalCode, locality, route, streetNumber, premise, subpremise, originalFreeformAddress, originalStructuredAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StructuredAddress {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    stateProvince: ").append(toIndentedString(stateProvince)).append("\n");
    sb.append("    county: ").append(toIndentedString(county)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    route: ").append(toIndentedString(route)).append("\n");
    sb.append("    streetNumber: ").append(toIndentedString(streetNumber)).append("\n");
    sb.append("    premise: ").append(toIndentedString(premise)).append("\n");
    sb.append("    subpremise: ").append(toIndentedString(subpremise)).append("\n");
    sb.append("    originalFreeformAddress: ").append(toIndentedString(originalFreeformAddress)).append("\n");
    sb.append("    originalStructuredAddress: ").append(toIndentedString(originalStructuredAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

