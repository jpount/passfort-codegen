/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Details of a false positive
 */
@ApiModel(description = "Details of a false positive")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class FalsePositive {
  @JsonProperty("match_id")
  private String matchId;

  @JsonProperty("match_modified_date")
  private String matchModifiedDate;

  @JsonProperty("reasons")
  private List<String> reasons = null;

  @JsonProperty("issuer")
  private String issuer;

  public FalsePositive matchId(String matchId) {
    this.matchId = matchId;
    return this;
  }

   /**
   * ID of the Sanction Match
   * @return matchId
  **/
  @ApiModelProperty(value = "ID of the Sanction Match")
  public String getMatchId() {
    return matchId;
  }

  public void setMatchId(String matchId) {
    this.matchId = matchId;
  }

  public FalsePositive matchModifiedDate(String matchModifiedDate) {
    this.matchModifiedDate = matchModifiedDate;
    return this;
  }

   /**
   * Exact date and time in &#x60;YYYY-MM-DD hh:mm:ss&#x60; format
   * @return matchModifiedDate
  **/
  @ApiModelProperty(example = "2017-02-08 15:16:01", value = "Exact date and time in `YYYY-MM-DD hh:mm:ss` format")
  public String getMatchModifiedDate() {
    return matchModifiedDate;
  }

  public void setMatchModifiedDate(String matchModifiedDate) {
    this.matchModifiedDate = matchModifiedDate;
  }

  public FalsePositive reasons(List<String> reasons) {
    this.reasons = reasons;
    return this;
  }

  public FalsePositive addReasonsItem(String reasonsItem) {
    if (this.reasons == null) {
      this.reasons = new ArrayList<String>();
    }
    this.reasons.add(reasonsItem);
    return this;
  }

   /**
   * Reasons for false positive
   * @return reasons
  **/
  @ApiModelProperty(value = "Reasons for false positive")
  public List<String> getReasons() {
    return reasons;
  }

  public void setReasons(List<String> reasons) {
    this.reasons = reasons;
  }

  public FalsePositive issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Name of issuing authority
   * @return issuer
  **/
  @ApiModelProperty(value = "Name of issuing authority")
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FalsePositive falsePositive = (FalsePositive) o;
    return Objects.equals(this.matchId, falsePositive.matchId) &&
        Objects.equals(this.matchModifiedDate, falsePositive.matchModifiedDate) &&
        Objects.equals(this.reasons, falsePositive.reasons) &&
        Objects.equals(this.issuer, falsePositive.issuer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(matchId, matchModifiedDate, reasons, issuer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FalsePositive {\n");
    
    sb.append("    matchId: ").append(toIndentedString(matchId)).append("\n");
    sb.append("    matchModifiedDate: ").append(toIndentedString(matchModifiedDate)).append("\n");
    sb.append("    reasons: ").append(toIndentedString(reasons)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

