/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.client.model.CollectionStep;

/**
 * Collect the profile&#39;s date of birth
 */
@ApiModel(description = "Collect the profile's date of birth")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class CollectionStepDOB extends CollectionStep {
  /**
   * Specifies the data to be collected
   */
  public enum CollectionTypeEnum {
    DOB("DOB");

    private String value;

    CollectionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CollectionTypeEnum fromValue(String text) {
      for (CollectionTypeEnum b : CollectionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }
  }

  @JsonProperty("collection_type")
  private CollectionTypeEnum collectionType;

  /**
   * Specify the precision required for date of birth. If unspecified will default to &#x60;YEAR_MONTH_DAY&#x60;
   */
  public enum PrecisionEnum {
    YEAR("YEAR"),
    
    YEAR_MONTH("YEAR_MONTH"),
    
    YEAR_MONTH_DAY("YEAR_MONTH_DAY");

    private String value;

    PrecisionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PrecisionEnum fromValue(String text) {
      for (PrecisionEnum b : PrecisionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }
  }

  @JsonProperty("precision")
  private PrecisionEnum precision;

  public CollectionStepDOB collectionType(CollectionTypeEnum collectionType) {
    this.collectionType = collectionType;
    return this;
  }

   /**
   * Specifies the data to be collected
   * @return collectionType
  **/
  @ApiModelProperty(required = true, value = "Specifies the data to be collected")
  public CollectionTypeEnum getCollectionType() {
    return collectionType;
  }

  public void setCollectionType(CollectionTypeEnum collectionType) {
    this.collectionType = collectionType;
  }

  public CollectionStepDOB precision(PrecisionEnum precision) {
    this.precision = precision;
    return this;
  }

   /**
   * Specify the precision required for date of birth. If unspecified will default to &#x60;YEAR_MONTH_DAY&#x60;
   * @return precision
  **/
  @ApiModelProperty(value = "Specify the precision required for date of birth. If unspecified will default to `YEAR_MONTH_DAY`")
  public PrecisionEnum getPrecision() {
    return precision;
  }

  public void setPrecision(PrecisionEnum precision) {
    this.precision = precision;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollectionStepDOB collectionStepDOB = (CollectionStepDOB) o;
    return Objects.equals(this.collectionType, collectionStepDOB.collectionType) &&
        Objects.equals(this.precision, collectionStepDOB.precision) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collectionType, precision, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollectionStepDOB {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    collectionType: ").append(toIndentedString(collectionType)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

