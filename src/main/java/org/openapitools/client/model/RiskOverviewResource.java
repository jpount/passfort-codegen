/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ComponentRisk;
import org.openapitools.client.model.InheritedRisk;
import org.openapitools.client.model.RiskLevel;

/**
 * Overview of a profile&#39;s risk
 */
@ApiModel(description = "Overview of a profile's risk")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class RiskOverviewResource {
  @JsonProperty("components")
  private List<ComponentRisk> components = new ArrayList<ComponentRisk>();

  @JsonProperty("is_pending")
  private Boolean isPending;

  @JsonProperty("missing_required_components")
  private List<String> missingRequiredComponents = new ArrayList<String>();

  @JsonProperty("inherited")
  private InheritedRisk inherited = null;

  @JsonProperty("overall_risk")
  private RiskLevel overallRisk = null;

  public RiskOverviewResource components(List<ComponentRisk> components) {
    this.components = components;
    return this;
  }

  public RiskOverviewResource addComponentsItem(ComponentRisk componentsItem) {
    this.components.add(componentsItem);
    return this;
  }

   /**
   * Components making up the profile&#39;s risk
   * @return components
  **/
  @ApiModelProperty(required = true, value = "Components making up the profile's risk")
  public List<ComponentRisk> getComponents() {
    return components;
  }

  public void setComponents(List<ComponentRisk> components) {
    this.components = components;
  }

  public RiskOverviewResource isPending(Boolean isPending) {
    this.isPending = isPending;
    return this;
  }

   /**
   * Is the risk currently being calculated. If it is, the risk score is not up to date so may not be accurate.
   * @return isPending
  **/
  @ApiModelProperty(value = "Is the risk currently being calculated. If it is, the risk score is not up to date so may not be accurate.")
  public Boolean getIsPending() {
    return isPending;
  }

  public void setIsPending(Boolean isPending) {
    this.isPending = isPending;
  }

  public RiskOverviewResource missingRequiredComponents(List<String> missingRequiredComponents) {
    this.missingRequiredComponents = missingRequiredComponents;
    return this;
  }

  public RiskOverviewResource addMissingRequiredComponentsItem(String missingRequiredComponentsItem) {
    this.missingRequiredComponents.add(missingRequiredComponentsItem);
    return this;
  }

   /**
   * Components required in order to calculate a risk score
   * @return missingRequiredComponents
  **/
  @ApiModelProperty(required = true, value = "Components required in order to calculate a risk score")
  public List<String> getMissingRequiredComponents() {
    return missingRequiredComponents;
  }

  public void setMissingRequiredComponents(List<String> missingRequiredComponents) {
    this.missingRequiredComponents = missingRequiredComponents;
  }

  public RiskOverviewResource inherited(InheritedRisk inherited) {
    this.inherited = inherited;
    return this;
  }

   /**
   * Get inherited
   * @return inherited
  **/
  @ApiModelProperty(value = "")
  public InheritedRisk getInherited() {
    return inherited;
  }

  public void setInherited(InheritedRisk inherited) {
    this.inherited = inherited;
  }

  public RiskOverviewResource overallRisk(RiskLevel overallRisk) {
    this.overallRisk = overallRisk;
    return this;
  }

   /**
   * Get overallRisk
   * @return overallRisk
  **/
  @ApiModelProperty(required = true, value = "")
  public RiskLevel getOverallRisk() {
    return overallRisk;
  }

  public void setOverallRisk(RiskLevel overallRisk) {
    this.overallRisk = overallRisk;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RiskOverviewResource riskOverviewResource = (RiskOverviewResource) o;
    return Objects.equals(this.components, riskOverviewResource.components) &&
        Objects.equals(this.isPending, riskOverviewResource.isPending) &&
        Objects.equals(this.missingRequiredComponents, riskOverviewResource.missingRequiredComponents) &&
        Objects.equals(this.inherited, riskOverviewResource.inherited) &&
        Objects.equals(this.overallRisk, riskOverviewResource.overallRisk);
  }

  @Override
  public int hashCode() {
    return Objects.hash(components, isPending, missingRequiredComponents, inherited, overallRisk);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RiskOverviewResource {\n");
    
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    isPending: ").append(toIndentedString(isPending)).append("\n");
    sb.append("    missingRequiredComponents: ").append(toIndentedString(missingRequiredComponents)).append("\n");
    sb.append("    inherited: ").append(toIndentedString(inherited)).append("\n");
    sb.append("    overallRisk: ").append(toIndentedString(overallRisk)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

