/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.EKYCDatabaseType;
import org.openapitools.client.model.EKYCMatchField;

/**
 * Describes a match against a database for an EKYC check
 */
@ApiModel(description = "Describes a match against a database for an EKYC check")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class EKYCMatch {
  @JsonProperty("database_name")
  private String databaseName;

  @JsonProperty("database_type")
  private EKYCDatabaseType databaseType = null;

  @JsonProperty("matched_fields")
  private List<EKYCMatchField> matchedFields = new ArrayList<EKYCMatchField>();

  @JsonProperty("count")
  private Integer count;

  public EKYCMatch databaseName(String databaseName) {
    this.databaseName = databaseName;
    return this;
  }

   /**
   * Name of the database containing a match
   * @return databaseName
  **/
  @ApiModelProperty(required = true, value = "Name of the database containing a match")
  public String getDatabaseName() {
    return databaseName;
  }

  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }

  public EKYCMatch databaseType(EKYCDatabaseType databaseType) {
    this.databaseType = databaseType;
    return this;
  }

   /**
   * Get databaseType
   * @return databaseType
  **/
  @ApiModelProperty(required = true, value = "")
  public EKYCDatabaseType getDatabaseType() {
    return databaseType;
  }

  public void setDatabaseType(EKYCDatabaseType databaseType) {
    this.databaseType = databaseType;
  }

  public EKYCMatch matchedFields(List<EKYCMatchField> matchedFields) {
    this.matchedFields = matchedFields;
    return this;
  }

  public EKYCMatch addMatchedFieldsItem(EKYCMatchField matchedFieldsItem) {
    this.matchedFields.add(matchedFieldsItem);
    return this;
  }

   /**
   * List of matched fields for this database
   * @return matchedFields
  **/
  @ApiModelProperty(required = true, value = "List of matched fields for this database")
  public List<EKYCMatchField> getMatchedFields() {
    return matchedFields;
  }

  public void setMatchedFields(List<EKYCMatchField> matchedFields) {
    this.matchedFields = matchedFields;
  }

  public EKYCMatch count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * How many times this set of fields was matched in this database
   * @return count
  **/
  @ApiModelProperty(value = "How many times this set of fields was matched in this database")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EKYCMatch ekYCMatch = (EKYCMatch) o;
    return Objects.equals(this.databaseName, ekYCMatch.databaseName) &&
        Objects.equals(this.databaseType, ekYCMatch.databaseType) &&
        Objects.equals(this.matchedFields, ekYCMatch.matchedFields) &&
        Objects.equals(this.count, ekYCMatch.count);
  }

  @Override
  public int hashCode() {
    return Objects.hash(databaseName, databaseType, matchedFields, count);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EKYCMatch {\n");
    
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    databaseType: ").append(toIndentedString(databaseType)).append("\n");
    sb.append("    matchedFields: ").append(toIndentedString(matchedFields)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

