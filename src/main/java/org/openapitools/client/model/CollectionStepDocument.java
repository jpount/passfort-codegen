/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CollectionStep;
import org.openapitools.client.model.DocumentCategory;
import org.openapitools.client.model.DocumentType;

/**
 * Collect a document from the profile (which can be used for a document verification)
 */
@ApiModel(description = "Collect a document from the profile (which can be used for a document verification)")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class CollectionStepDocument extends CollectionStep {
  /**
   * Specifies the data to be collected
   */
  public enum CollectionTypeEnum {
    DOCUMENT("DOCUMENT");

    private String value;

    CollectionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CollectionTypeEnum fromValue(String text) {
      for (CollectionTypeEnum b : CollectionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }
  }

  @JsonProperty("collection_type")
  private CollectionTypeEnum collectionType;

  @JsonProperty("id")
  private String id;

  @JsonProperty("category")
  private DocumentCategory category = null;

  @JsonProperty("facial_similarity")
  private Boolean facialSimilarity;

  @JsonProperty("allowed_types")
  private List<DocumentType> allowedTypes = new ArrayList<DocumentType>();

  public CollectionStepDocument collectionType(CollectionTypeEnum collectionType) {
    this.collectionType = collectionType;
    return this;
  }

   /**
   * Specifies the data to be collected
   * @return collectionType
  **/
  @ApiModelProperty(required = true, value = "Specifies the data to be collected")
  public CollectionTypeEnum getCollectionType() {
    return collectionType;
  }

  public void setCollectionType(CollectionTypeEnum collectionType) {
    this.collectionType = collectionType;
  }

  public CollectionStepDocument id(String id) {
    this.id = id;
    return this;
  }

   /**
   * [Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)
   * @return id
  **/
  @ApiModelProperty(value = "[Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CollectionStepDocument category(DocumentCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(required = true, value = "")
  public DocumentCategory getCategory() {
    return category;
  }

  public void setCategory(DocumentCategory category) {
    this.category = category;
  }

  public CollectionStepDocument facialSimilarity(Boolean facialSimilarity) {
    this.facialSimilarity = facialSimilarity;
    return this;
  }

   /**
   * Defaults to &#x60;false&#x60;. If this document is going to be used for a &#x60;DOCUMENT_VERIFICATION&#x60; that performs a facial similarity check, enabling this will ask the user to upload a photo of themselves in addition to their document
   * @return facialSimilarity
  **/
  @ApiModelProperty(value = "Defaults to `false`. If this document is going to be used for a `DOCUMENT_VERIFICATION` that performs a facial similarity check, enabling this will ask the user to upload a photo of themselves in addition to their document")
  public Boolean getFacialSimilarity() {
    return facialSimilarity;
  }

  public void setFacialSimilarity(Boolean facialSimilarity) {
    this.facialSimilarity = facialSimilarity;
  }

  public CollectionStepDocument allowedTypes(List<DocumentType> allowedTypes) {
    this.allowedTypes = allowedTypes;
    return this;
  }

  public CollectionStepDocument addAllowedTypesItem(DocumentType allowedTypesItem) {
    this.allowedTypes.add(allowedTypesItem);
    return this;
  }

   /**
   * Specifies the types of document that are accepted. These will be presented as options to the user completing the step
   * @return allowedTypes
  **/
  @ApiModelProperty(required = true, value = "Specifies the types of document that are accepted. These will be presented as options to the user completing the step")
  public List<DocumentType> getAllowedTypes() {
    return allowedTypes;
  }

  public void setAllowedTypes(List<DocumentType> allowedTypes) {
    this.allowedTypes = allowedTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollectionStepDocument collectionStepDocument = (CollectionStepDocument) o;
    return Objects.equals(this.collectionType, collectionStepDocument.collectionType) &&
        Objects.equals(this.id, collectionStepDocument.id) &&
        Objects.equals(this.category, collectionStepDocument.category) &&
        Objects.equals(this.facialSimilarity, collectionStepDocument.facialSimilarity) &&
        Objects.equals(this.allowedTypes, collectionStepDocument.allowedTypes) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collectionType, id, category, facialSimilarity, allowedTypes, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollectionStepDocument {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    collectionType: ").append(toIndentedString(collectionType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    facialSimilarity: ").append(toIndentedString(facialSimilarity)).append("\n");
    sb.append("    allowedTypes: ").append(toIndentedString(allowedTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

