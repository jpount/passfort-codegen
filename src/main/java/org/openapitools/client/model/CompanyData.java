/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AssociatedEntity;
import org.openapitools.client.model.CompanyCharityData;
import org.openapitools.client.model.CompanyFiling;
import org.openapitools.client.model.CompanyMetadata;
import org.openapitools.client.model.Document;
import org.openapitools.client.model.EntityDataBase;
import org.openapitools.client.model.Officers;
import org.openapitools.client.model.OwnershipStructure;

/**
 * Top-level data structure for companies
 */
@ApiModel(description = "Top-level data structure for companies")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class CompanyData extends EntityDataBase {
  /**
   * You must include set the entity_type as &#x60;COMPANY&#x60; to distinguish CompanyData from other types of EntityData
   */
  public enum EntityTypeEnum {
    COMPANY("COMPANY");

    private String value;

    EntityTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EntityTypeEnum fromValue(String text) {
      for (EntityTypeEnum b : EntityTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }
  }

  @JsonProperty("entity_type")
  private EntityTypeEnum entityType;

  @JsonProperty("metadata")
  private CompanyMetadata metadata = null;

  @JsonProperty("authorized_persons")
  private List<AssociatedEntity> authorizedPersons = null;

  @JsonProperty("unauthorized_persons")
  private List<AssociatedEntity> unauthorizedPersons = null;

  @JsonProperty("ownership_structure")
  private OwnershipStructure ownershipStructure = null;

  @JsonProperty("officers")
  private Officers officers = null;

  @JsonProperty("filings")
  private List<CompanyFiling> filings = null;

  @JsonProperty("charity_data")
  private CompanyCharityData charityData = null;

  public CompanyData entityType(EntityTypeEnum entityType) {
    this.entityType = entityType;
    return this;
  }

   /**
   * You must include set the entity_type as &#x60;COMPANY&#x60; to distinguish CompanyData from other types of EntityData
   * @return entityType
  **/
  @ApiModelProperty(value = "You must include set the entity_type as `COMPANY` to distinguish CompanyData from other types of EntityData")
  public EntityTypeEnum getEntityType() {
    return entityType;
  }

  public void setEntityType(EntityTypeEnum entityType) {
    this.entityType = entityType;
  }

  public CompanyData metadata(CompanyMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public CompanyMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(CompanyMetadata metadata) {
    this.metadata = metadata;
  }

  public CompanyData authorizedPersons(List<AssociatedEntity> authorizedPersons) {
    this.authorizedPersons = authorizedPersons;
    return this;
  }

  public CompanyData addAuthorizedPersonsItem(AssociatedEntity authorizedPersonsItem) {
    if (this.authorizedPersons == null) {
      this.authorizedPersons = new ArrayList<AssociatedEntity>();
    }
    this.authorizedPersons.add(authorizedPersonsItem);
    return this;
  }

   /**
   * List of people authorized to submit information regarding the company
   * @return authorizedPersons
  **/
  @ApiModelProperty(value = "List of people authorized to submit information regarding the company")
  public List<AssociatedEntity> getAuthorizedPersons() {
    return authorizedPersons;
  }

  public void setAuthorizedPersons(List<AssociatedEntity> authorizedPersons) {
    this.authorizedPersons = authorizedPersons;
  }

  public CompanyData unauthorizedPersons(List<AssociatedEntity> unauthorizedPersons) {
    this.unauthorizedPersons = unauthorizedPersons;
    return this;
  }

  public CompanyData addUnauthorizedPersonsItem(AssociatedEntity unauthorizedPersonsItem) {
    if (this.unauthorizedPersons == null) {
      this.unauthorizedPersons = new ArrayList<AssociatedEntity>();
    }
    this.unauthorizedPersons.add(unauthorizedPersonsItem);
    return this;
  }

   /**
   * List of people no longer authorized to submit information regarding the company
   * @return unauthorizedPersons
  **/
  @ApiModelProperty(value = "List of people no longer authorized to submit information regarding the company")
  public List<AssociatedEntity> getUnauthorizedPersons() {
    return unauthorizedPersons;
  }

  public void setUnauthorizedPersons(List<AssociatedEntity> unauthorizedPersons) {
    this.unauthorizedPersons = unauthorizedPersons;
  }

  public CompanyData ownershipStructure(OwnershipStructure ownershipStructure) {
    this.ownershipStructure = ownershipStructure;
    return this;
  }

   /**
   * Get ownershipStructure
   * @return ownershipStructure
  **/
  @ApiModelProperty(value = "")
  public OwnershipStructure getOwnershipStructure() {
    return ownershipStructure;
  }

  public void setOwnershipStructure(OwnershipStructure ownershipStructure) {
    this.ownershipStructure = ownershipStructure;
  }

  public CompanyData officers(Officers officers) {
    this.officers = officers;
    return this;
  }

   /**
   * Get officers
   * @return officers
  **/
  @ApiModelProperty(value = "")
  public Officers getOfficers() {
    return officers;
  }

  public void setOfficers(Officers officers) {
    this.officers = officers;
  }

  public CompanyData filings(List<CompanyFiling> filings) {
    this.filings = filings;
    return this;
  }

  public CompanyData addFilingsItem(CompanyFiling filingsItem) {
    if (this.filings == null) {
      this.filings = new ArrayList<CompanyFiling>();
    }
    this.filings.add(filingsItem);
    return this;
  }

   /**
   * List of documents filed by the company with the registry
   * @return filings
  **/
  @ApiModelProperty(value = "List of documents filed by the company with the registry")
  public List<CompanyFiling> getFilings() {
    return filings;
  }

  public void setFilings(List<CompanyFiling> filings) {
    this.filings = filings;
  }

  public CompanyData charityData(CompanyCharityData charityData) {
    this.charityData = charityData;
    return this;
  }

   /**
   * Get charityData
   * @return charityData
  **/
  @ApiModelProperty(value = "")
  public CompanyCharityData getCharityData() {
    return charityData;
  }

  public void setCharityData(CompanyCharityData charityData) {
    this.charityData = charityData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyData companyData = (CompanyData) o;
    return Objects.equals(this.entityType, companyData.entityType) &&
        Objects.equals(this.metadata, companyData.metadata) &&
        Objects.equals(this.authorizedPersons, companyData.authorizedPersons) &&
        Objects.equals(this.unauthorizedPersons, companyData.unauthorizedPersons) &&
        Objects.equals(this.ownershipStructure, companyData.ownershipStructure) &&
        Objects.equals(this.officers, companyData.officers) &&
        Objects.equals(this.filings, companyData.filings) &&
        Objects.equals(this.charityData, companyData.charityData) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityType, metadata, authorizedPersons, unauthorizedPersons, ownershipStructure, officers, filings, charityData, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyData {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    authorizedPersons: ").append(toIndentedString(authorizedPersons)).append("\n");
    sb.append("    unauthorizedPersons: ").append(toIndentedString(unauthorizedPersons)).append("\n");
    sb.append("    ownershipStructure: ").append(toIndentedString(ownershipStructure)).append("\n");
    sb.append("    officers: ").append(toIndentedString(officers)).append("\n");
    sb.append("    filings: ").append(toIndentedString(filings)).append("\n");
    sb.append("    charityData: ").append(toIndentedString(charityData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

