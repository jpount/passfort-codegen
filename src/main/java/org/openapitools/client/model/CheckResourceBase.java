/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CheckResourceBaseProviders;
import org.openapitools.client.model.CheckState;
import org.openapitools.client.model.CheckVariant;
import org.openapitools.client.model.Error;

/**
 * A single check run against a profile
 */
@ApiModel(description = "A single check run against a profile")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class CheckResourceBase {
  @JsonProperty("id")
  private String id;

  @JsonProperty("variant")
  private CheckVariant variant = null;

  @JsonProperty("state")
  private CheckState state = null;

  @JsonProperty("performed_on")
  private String performedOn;

  @JsonProperty("errors")
  private List<Error> errors = null;

  @JsonProperty("task_ids")
  private List<String> taskIds = null;

  @JsonProperty("instructed_externally")
  private Boolean instructedExternally;

  @JsonProperty("providers")
  private List<CheckResourceBaseProviders> providers = null;

  public CheckResourceBase id(String id) {
    this.id = id;
    return this;
  }

   /**
   * [Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)
   * @return id
  **/
  @ApiModelProperty(value = "[Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CheckResourceBase variant(CheckVariant variant) {
    this.variant = variant;
    return this;
  }

   /**
   * Get variant
   * @return variant
  **/
  @ApiModelProperty(value = "")
  public CheckVariant getVariant() {
    return variant;
  }

  public void setVariant(CheckVariant variant) {
    this.variant = variant;
  }

  public CheckResourceBase state(CheckState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public CheckState getState() {
    return state;
  }

  public void setState(CheckState state) {
    this.state = state;
  }

  public CheckResourceBase performedOn(String performedOn) {
    this.performedOn = performedOn;
    return this;
  }

   /**
   * Exact date and time in &#x60;YYYY-MM-DD hh:mm:ss&#x60; format
   * @return performedOn
  **/
  @ApiModelProperty(example = "2017-02-08 15:16:01", value = "Exact date and time in `YYYY-MM-DD hh:mm:ss` format")
  public String getPerformedOn() {
    return performedOn;
  }

  public void setPerformedOn(String performedOn) {
    this.performedOn = performedOn;
  }

  public CheckResourceBase errors(List<Error> errors) {
    this.errors = errors;
    return this;
  }

  public CheckResourceBase addErrorsItem(Error errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<Error>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * An array of errors that occurred when the check was performed. Hopefully empty!
   * @return errors
  **/
  @ApiModelProperty(value = "An array of errors that occurred when the check was performed. Hopefully empty!")
  public List<Error> getErrors() {
    return errors;
  }

  public void setErrors(List<Error> errors) {
    this.errors = errors;
  }

  public CheckResourceBase taskIds(List<String> taskIds) {
    this.taskIds = taskIds;
    return this;
  }

  public CheckResourceBase addTaskIdsItem(String taskIdsItem) {
    if (this.taskIds == null) {
      this.taskIds = new ArrayList<String>();
    }
    this.taskIds.add(taskIdsItem);
    return this;
  }

   /**
   * The tasks related to this check
   * @return taskIds
  **/
  @ApiModelProperty(value = "The tasks related to this check")
  public List<String> getTaskIds() {
    return taskIds;
  }

  public void setTaskIds(List<String> taskIds) {
    this.taskIds = taskIds;
  }

  public CheckResourceBase instructedExternally(Boolean instructedExternally) {
    this.instructedExternally = instructedExternally;
    return this;
  }

   /**
   * Whether the check ran externally and contains the formatted result
   * @return instructedExternally
  **/
  @ApiModelProperty(value = "Whether the check ran externally and contains the formatted result")
  public Boolean getInstructedExternally() {
    return instructedExternally;
  }

  public void setInstructedExternally(Boolean instructedExternally) {
    this.instructedExternally = instructedExternally;
  }

  public CheckResourceBase providers(List<CheckResourceBaseProviders> providers) {
    this.providers = providers;
    return this;
  }

  public CheckResourceBase addProvidersItem(CheckResourceBaseProviders providersItem) {
    if (this.providers == null) {
      this.providers = new ArrayList<CheckResourceBaseProviders>();
    }
    this.providers.add(providersItem);
    return this;
  }

   /**
   * An array of records on the providers that were used to run this check
   * @return providers
  **/
  @ApiModelProperty(value = "An array of records on the providers that were used to run this check")
  public List<CheckResourceBaseProviders> getProviders() {
    return providers;
  }

  public void setProviders(List<CheckResourceBaseProviders> providers) {
    this.providers = providers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckResourceBase checkResourceBase = (CheckResourceBase) o;
    return Objects.equals(this.id, checkResourceBase.id) &&
        Objects.equals(this.variant, checkResourceBase.variant) &&
        Objects.equals(this.state, checkResourceBase.state) &&
        Objects.equals(this.performedOn, checkResourceBase.performedOn) &&
        Objects.equals(this.errors, checkResourceBase.errors) &&
        Objects.equals(this.taskIds, checkResourceBase.taskIds) &&
        Objects.equals(this.instructedExternally, checkResourceBase.instructedExternally) &&
        Objects.equals(this.providers, checkResourceBase.providers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, variant, state, performedOn, errors, taskIds, instructedExternally, providers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckResourceBase {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    variant: ").append(toIndentedString(variant)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    performedOn: ").append(toIndentedString(performedOn)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    taskIds: ").append(toIndentedString(taskIds)).append("\n");
    sb.append("    instructedExternally: ").append(toIndentedString(instructedExternally)).append("\n");
    sb.append("    providers: ").append(toIndentedString(providers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

