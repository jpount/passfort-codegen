/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.TaskType;
import org.openapitools.client.model.TaskVariant;

/**
 * A task variant that can be used in a task set
 */
@ApiModel(description = "A task variant that can be used in a task set")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class TaskResource {
  @JsonProperty("id")
  private String id;

  @JsonProperty("variant")
  private TaskVariant variant = null;

  @JsonProperty("type")
  private TaskType type = null;

  @JsonProperty("is_complete")
  private Boolean isComplete;

  @JsonProperty("is_deleted")
  private Boolean isDeleted;

  @JsonProperty("is_expired")
  private Boolean isExpired;

  @JsonProperty("creation_date")
  private String creationDate;

  @JsonProperty("check_ids")
  private List<String> checkIds = null;

  @JsonProperty("expiry_date")
  private String expiryDate;

  public TaskResource id(String id) {
    this.id = id;
    return this;
  }

   /**
   * [Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)
   * @return id
  **/
  @ApiModelProperty(value = "[Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TaskResource variant(TaskVariant variant) {
    this.variant = variant;
    return this;
  }

   /**
   * Get variant
   * @return variant
  **/
  @ApiModelProperty(value = "")
  public TaskVariant getVariant() {
    return variant;
  }

  public void setVariant(TaskVariant variant) {
    this.variant = variant;
  }

  public TaskResource type(TaskType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TaskType getType() {
    return type;
  }

  public void setType(TaskType type) {
    this.type = type;
  }

  public TaskResource isComplete(Boolean isComplete) {
    this.isComplete = isComplete;
    return this;
  }

   /**
   * Whether a task is currently complete
   * @return isComplete
  **/
  @ApiModelProperty(value = "Whether a task is currently complete")
  public Boolean getIsComplete() {
    return isComplete;
  }

  public void setIsComplete(Boolean isComplete) {
    this.isComplete = isComplete;
  }

  public TaskResource isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Whether this task set has been deleted
   * @return isDeleted
  **/
  @ApiModelProperty(value = "Whether this task set has been deleted")
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public TaskResource isExpired(Boolean isExpired) {
    this.isExpired = isExpired;
    return this;
  }

   /**
   * Whether a task is expired
   * @return isExpired
  **/
  @ApiModelProperty(value = "Whether a task is expired")
  public Boolean getIsExpired() {
    return isExpired;
  }

  public void setIsExpired(Boolean isExpired) {
    this.isExpired = isExpired;
  }

  public TaskResource creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Exact date and time in &#x60;YYYY-MM-DD hh:mm:ss&#x60; format
   * @return creationDate
  **/
  @ApiModelProperty(example = "2017-02-08 15:16:01", value = "Exact date and time in `YYYY-MM-DD hh:mm:ss` format")
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }

  public TaskResource checkIds(List<String> checkIds) {
    this.checkIds = checkIds;
    return this;
  }

  public TaskResource addCheckIdsItem(String checkIdsItem) {
    if (this.checkIds == null) {
      this.checkIds = new ArrayList<String>();
    }
    this.checkIds.add(checkIdsItem);
    return this;
  }

   /**
   * A list of the checks which have been associated with this task
   * @return checkIds
  **/
  @ApiModelProperty(value = "A list of the checks which have been associated with this task")
  public List<String> getCheckIds() {
    return checkIds;
  }

  public void setCheckIds(List<String> checkIds) {
    this.checkIds = checkIds;
  }

  public TaskResource expiryDate(String expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Exact date and time in &#x60;YYYY-MM-DD hh:mm:ss&#x60; format
   * @return expiryDate
  **/
  @ApiModelProperty(example = "2017-02-08 15:16:01", value = "Exact date and time in `YYYY-MM-DD hh:mm:ss` format")
  public String getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(String expiryDate) {
    this.expiryDate = expiryDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskResource taskResource = (TaskResource) o;
    return Objects.equals(this.id, taskResource.id) &&
        Objects.equals(this.variant, taskResource.variant) &&
        Objects.equals(this.type, taskResource.type) &&
        Objects.equals(this.isComplete, taskResource.isComplete) &&
        Objects.equals(this.isDeleted, taskResource.isDeleted) &&
        Objects.equals(this.isExpired, taskResource.isExpired) &&
        Objects.equals(this.creationDate, taskResource.creationDate) &&
        Objects.equals(this.checkIds, taskResource.checkIds) &&
        Objects.equals(this.expiryDate, taskResource.expiryDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, variant, type, isComplete, isDeleted, isExpired, creationDate, checkIds, expiryDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskResource {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    variant: ").append(toIndentedString(variant)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isComplete: ").append(toIndentedString(isComplete)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    isExpired: ").append(toIndentedString(isExpired)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    checkIds: ").append(toIndentedString(checkIds)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

