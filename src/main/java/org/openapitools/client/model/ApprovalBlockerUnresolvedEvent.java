/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Unresolved event preventing the profile application being approved
 */
@ApiModel(description = "Unresolved event preventing the profile application being approved")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class ApprovalBlockerUnresolvedEvent {
  /**
   * The nature of the blocker
   */
  public enum BlockerTypeEnum {
    UNRESOLVED_EVENT("UNRESOLVED_EVENT");

    private String value;

    BlockerTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BlockerTypeEnum fromValue(String text) {
      for (BlockerTypeEnum b : BlockerTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }
  }

  @JsonProperty("blocker_type")
  private BlockerTypeEnum blockerType;

  @JsonProperty("event_id")
  private String eventId;

  public ApprovalBlockerUnresolvedEvent blockerType(BlockerTypeEnum blockerType) {
    this.blockerType = blockerType;
    return this;
  }

   /**
   * The nature of the blocker
   * @return blockerType
  **/
  @ApiModelProperty(value = "The nature of the blocker")
  public BlockerTypeEnum getBlockerType() {
    return blockerType;
  }

  public void setBlockerType(BlockerTypeEnum blockerType) {
    this.blockerType = blockerType;
  }

  public ApprovalBlockerUnresolvedEvent eventId(String eventId) {
    this.eventId = eventId;
    return this;
  }

   /**
   * [Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)
   * @return eventId
  **/
  @ApiModelProperty(value = "[Universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)")
  public String getEventId() {
    return eventId;
  }

  public void setEventId(String eventId) {
    this.eventId = eventId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApprovalBlockerUnresolvedEvent approvalBlockerUnresolvedEvent = (ApprovalBlockerUnresolvedEvent) o;
    return Objects.equals(this.blockerType, approvalBlockerUnresolvedEvent.blockerType) &&
        Objects.equals(this.eventId, approvalBlockerUnresolvedEvent.eventId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockerType, eventId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApprovalBlockerUnresolvedEvent {\n");
    
    sb.append("    blockerType: ").append(toIndentedString(blockerType)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

