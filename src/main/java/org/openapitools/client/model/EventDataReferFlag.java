/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Associate;
import org.openapitools.client.model.CountryCode;
import org.openapitools.client.model.DefaultSanctionsResultDetails;
import org.openapitools.client.model.Document;
import org.openapitools.client.model.Identification;
import org.openapitools.client.model.Location;
import org.openapitools.client.model.Source;

/**
 * Information related to a refer flag event
 */
@ApiModel(description = "Information related to a refer flag event")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-02-06T16:01:27.451+11:00[Australia/Sydney]")
public class EventDataReferFlag {
  /**
   * Profile event type
   */
  public enum EventTypeEnum {
    REFER_FLAG("REFER_FLAG");

    private String value;

    EventTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EventTypeEnum fromValue(String text) {
      for (EventTypeEnum b : EventTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }
  }

  @JsonProperty("event_type")
  private EventTypeEnum eventType;

  @JsonProperty("match_id")
  private String matchId;

  @JsonProperty("gender")
  private String gender;

  @JsonProperty("deceased_dates")
  private List<String> deceasedDates = null;

  @JsonProperty("modified_date")
  private String modifiedDate;

  @JsonProperty("provider_name")
  private String providerName;

  @JsonProperty("match_name")
  private String matchName;

  @JsonProperty("match_dates")
  private List<String> matchDates = null;

  @JsonProperty("match_countries")
  private List<CountryCode> matchCountries = null;

  @JsonProperty("score")
  private BigDecimal score;

  @JsonProperty("aliases")
  private List<String> aliases = null;

  @JsonProperty("previous_names")
  private List<String> previousNames = null;

  @JsonProperty("associates")
  private List<Associate> associates = null;

  @JsonProperty("profile_notes")
  private String profileNotes;

  @JsonProperty("details")
  private List<DefaultSanctionsResultDetails> details = null;

  @JsonProperty("documents")
  private List<Document> documents = null;

  @JsonProperty("riskography")
  private String riskography;

  @JsonProperty("sources")
  private List<Source> sources = null;

  @JsonProperty("remarks")
  private List<String> remarks = null;

  @JsonProperty("identifications")
  private List<Identification> identifications = null;

  @JsonProperty("locations")
  private List<Location> locations = null;

  public EventDataReferFlag eventType(EventTypeEnum eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * Profile event type
   * @return eventType
  **/
  @ApiModelProperty(required = true, value = "Profile event type")
  public EventTypeEnum getEventType() {
    return eventType;
  }

  public void setEventType(EventTypeEnum eventType) {
    this.eventType = eventType;
  }

  public EventDataReferFlag matchId(String matchId) {
    this.matchId = matchId;
    return this;
  }

   /**
   * The related match identifier
   * @return matchId
  **/
  @ApiModelProperty(value = "The related match identifier")
  public String getMatchId() {
    return matchId;
  }

  public void setMatchId(String matchId) {
    this.matchId = matchId;
  }

  public EventDataReferFlag gender(String gender) {
    this.gender = gender;
    return this;
  }

   /**
   * gender of match
   * @return gender
  **/
  @ApiModelProperty(value = "gender of match")
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }

  public EventDataReferFlag deceasedDates(List<String> deceasedDates) {
    this.deceasedDates = deceasedDates;
    return this;
  }

  public EventDataReferFlag addDeceasedDatesItem(String deceasedDatesItem) {
    if (this.deceasedDates == null) {
      this.deceasedDates = new ArrayList<String>();
    }
    this.deceasedDates.add(deceasedDatesItem);
    return this;
  }

   /**
   * Reported death dates
   * @return deceasedDates
  **/
  @ApiModelProperty(value = "Reported death dates")
  public List<String> getDeceasedDates() {
    return deceasedDates;
  }

  public void setDeceasedDates(List<String> deceasedDates) {
    this.deceasedDates = deceasedDates;
  }

  public EventDataReferFlag modifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Exact date and time in &#x60;YYYY-MM-DD hh:mm:ss&#x60; format
   * @return modifiedDate
  **/
  @ApiModelProperty(example = "2017-02-08 15:16:01", value = "Exact date and time in `YYYY-MM-DD hh:mm:ss` format")
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public EventDataReferFlag providerName(String providerName) {
    this.providerName = providerName;
    return this;
  }

   /**
   * Name of the verification provider
   * @return providerName
  **/
  @ApiModelProperty(value = "Name of the verification provider")
  public String getProviderName() {
    return providerName;
  }

  public void setProviderName(String providerName) {
    this.providerName = providerName;
  }

  public EventDataReferFlag matchName(String matchName) {
    this.matchName = matchName;
    return this;
  }

   /**
   * The name that was matched against
   * @return matchName
  **/
  @ApiModelProperty(value = "The name that was matched against")
  public String getMatchName() {
    return matchName;
  }

  public void setMatchName(String matchName) {
    this.matchName = matchName;
  }

  public EventDataReferFlag matchDates(List<String> matchDates) {
    this.matchDates = matchDates;
    return this;
  }

  public EventDataReferFlag addMatchDatesItem(String matchDatesItem) {
    if (this.matchDates == null) {
      this.matchDates = new ArrayList<String>();
    }
    this.matchDates.add(matchDatesItem);
    return this;
  }

   /**
   * Dates of the matched results
   * @return matchDates
  **/
  @ApiModelProperty(value = "Dates of the matched results")
  public List<String> getMatchDates() {
    return matchDates;
  }

  public void setMatchDates(List<String> matchDates) {
    this.matchDates = matchDates;
  }

  public EventDataReferFlag matchCountries(List<CountryCode> matchCountries) {
    this.matchCountries = matchCountries;
    return this;
  }

  public EventDataReferFlag addMatchCountriesItem(CountryCode matchCountriesItem) {
    if (this.matchCountries == null) {
      this.matchCountries = new ArrayList<CountryCode>();
    }
    this.matchCountries.add(matchCountriesItem);
    return this;
  }

   /**
   * Dates of the matched sanctions
   * @return matchCountries
  **/
  @ApiModelProperty(value = "Dates of the matched sanctions")
  public List<CountryCode> getMatchCountries() {
    return matchCountries;
  }

  public void setMatchCountries(List<CountryCode> matchCountries) {
    this.matchCountries = matchCountries;
  }

  public EventDataReferFlag score(BigDecimal score) {
    this.score = score;
    return this;
  }

   /**
   * The score of the match
   * minimum: 0.0
   * maximum: 1.0
   * @return score
  **/
  @ApiModelProperty(value = "The score of the match")
  public BigDecimal getScore() {
    return score;
  }

  public void setScore(BigDecimal score) {
    this.score = score;
  }

  public EventDataReferFlag aliases(List<String> aliases) {
    this.aliases = aliases;
    return this;
  }

  public EventDataReferFlag addAliasesItem(String aliasesItem) {
    if (this.aliases == null) {
      this.aliases = new ArrayList<String>();
    }
    this.aliases.add(aliasesItem);
    return this;
  }

   /**
   * Aliases used by the matched
   * @return aliases
  **/
  @ApiModelProperty(value = "Aliases used by the matched")
  public List<String> getAliases() {
    return aliases;
  }

  public void setAliases(List<String> aliases) {
    this.aliases = aliases;
  }

  public EventDataReferFlag previousNames(List<String> previousNames) {
    this.previousNames = previousNames;
    return this;
  }

  public EventDataReferFlag addPreviousNamesItem(String previousNamesItem) {
    if (this.previousNames == null) {
      this.previousNames = new ArrayList<String>();
    }
    this.previousNames.add(previousNamesItem);
    return this;
  }

   /**
   * Previous names used by the matched
   * @return previousNames
  **/
  @ApiModelProperty(value = "Previous names used by the matched")
  public List<String> getPreviousNames() {
    return previousNames;
  }

  public void setPreviousNames(List<String> previousNames) {
    this.previousNames = previousNames;
  }

  public EventDataReferFlag associates(List<Associate> associates) {
    this.associates = associates;
    return this;
  }

  public EventDataReferFlag addAssociatesItem(Associate associatesItem) {
    if (this.associates == null) {
      this.associates = new ArrayList<Associate>();
    }
    this.associates.add(associatesItem);
    return this;
  }

   /**
   * Associated to the returned PEPs and Sanctions
   * @return associates
  **/
  @ApiModelProperty(value = "Associated to the returned PEPs and Sanctions")
  public List<Associate> getAssociates() {
    return associates;
  }

  public void setAssociates(List<Associate> associates) {
    this.associates = associates;
  }

  public EventDataReferFlag profileNotes(String profileNotes) {
    this.profileNotes = profileNotes;
    return this;
  }

   /**
   * Profile notes returned by check
   * @return profileNotes
  **/
  @ApiModelProperty(value = "Profile notes returned by check")
  public String getProfileNotes() {
    return profileNotes;
  }

  public void setProfileNotes(String profileNotes) {
    this.profileNotes = profileNotes;
  }

  public EventDataReferFlag details(List<DefaultSanctionsResultDetails> details) {
    this.details = details;
    return this;
  }

  public EventDataReferFlag addDetailsItem(DefaultSanctionsResultDetails detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<DefaultSanctionsResultDetails>();
    }
    this.details.add(detailsItem);
    return this;
  }

   /**
   * More information about the match
   * @return details
  **/
  @ApiModelProperty(value = "More information about the match")
  public List<DefaultSanctionsResultDetails> getDetails() {
    return details;
  }

  public void setDetails(List<DefaultSanctionsResultDetails> details) {
    this.details = details;
  }

  public EventDataReferFlag documents(List<Document> documents) {
    this.documents = documents;
    return this;
  }

  public EventDataReferFlag addDocumentsItem(Document documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<Document>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * Documents related to the PEP match
   * @return documents
  **/
  @ApiModelProperty(value = "Documents related to the PEP match")
  public List<Document> getDocuments() {
    return documents;
  }

  public void setDocuments(List<Document> documents) {
    this.documents = documents;
  }

  public EventDataReferFlag riskography(String riskography) {
    this.riskography = riskography;
    return this;
  }

   /**
   * Description of PEP or sanctioned persons background
   * @return riskography
  **/
  @ApiModelProperty(value = "Description of PEP or sanctioned persons background")
  public String getRiskography() {
    return riskography;
  }

  public void setRiskography(String riskography) {
    this.riskography = riskography;
  }

  public EventDataReferFlag sources(List<Source> sources) {
    this.sources = sources;
    return this;
  }

  public EventDataReferFlag addSourcesItem(Source sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<Source>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

   /**
   * Sources used to derive sanctions and PEP information
   * @return sources
  **/
  @ApiModelProperty(value = "Sources used to derive sanctions and PEP information")
  public List<Source> getSources() {
    return sources;
  }

  public void setSources(List<Source> sources) {
    this.sources = sources;
  }

  public EventDataReferFlag remarks(List<String> remarks) {
    this.remarks = remarks;
    return this;
  }

  public EventDataReferFlag addRemarksItem(String remarksItem) {
    if (this.remarks == null) {
      this.remarks = new ArrayList<String>();
    }
    this.remarks.add(remarksItem);
    return this;
  }

   /**
   * Remarks about a sanctioned person
   * @return remarks
  **/
  @ApiModelProperty(value = "Remarks about a sanctioned person")
  public List<String> getRemarks() {
    return remarks;
  }

  public void setRemarks(List<String> remarks) {
    this.remarks = remarks;
  }

  public EventDataReferFlag identifications(List<Identification> identifications) {
    this.identifications = identifications;
    return this;
  }

  public EventDataReferFlag addIdentificationsItem(Identification identificationsItem) {
    if (this.identifications == null) {
      this.identifications = new ArrayList<Identification>();
    }
    this.identifications.add(identificationsItem);
    return this;
  }

   /**
   * Identifications such as a passport
   * @return identifications
  **/
  @ApiModelProperty(value = "Identifications such as a passport")
  public List<Identification> getIdentifications() {
    return identifications;
  }

  public void setIdentifications(List<Identification> identifications) {
    this.identifications = identifications;
  }

  public EventDataReferFlag locations(List<Location> locations) {
    this.locations = locations;
    return this;
  }

  public EventDataReferFlag addLocationsItem(Location locationsItem) {
    if (this.locations == null) {
      this.locations = new ArrayList<Location>();
    }
    this.locations.add(locationsItem);
    return this;
  }

   /**
   * Locations related to a PEP or sanctioned entity, such as birth place
   * @return locations
  **/
  @ApiModelProperty(value = "Locations related to a PEP or sanctioned entity, such as birth place")
  public List<Location> getLocations() {
    return locations;
  }

  public void setLocations(List<Location> locations) {
    this.locations = locations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventDataReferFlag eventDataReferFlag = (EventDataReferFlag) o;
    return Objects.equals(this.eventType, eventDataReferFlag.eventType) &&
        Objects.equals(this.matchId, eventDataReferFlag.matchId) &&
        Objects.equals(this.gender, eventDataReferFlag.gender) &&
        Objects.equals(this.deceasedDates, eventDataReferFlag.deceasedDates) &&
        Objects.equals(this.modifiedDate, eventDataReferFlag.modifiedDate) &&
        Objects.equals(this.providerName, eventDataReferFlag.providerName) &&
        Objects.equals(this.matchName, eventDataReferFlag.matchName) &&
        Objects.equals(this.matchDates, eventDataReferFlag.matchDates) &&
        Objects.equals(this.matchCountries, eventDataReferFlag.matchCountries) &&
        Objects.equals(this.score, eventDataReferFlag.score) &&
        Objects.equals(this.aliases, eventDataReferFlag.aliases) &&
        Objects.equals(this.previousNames, eventDataReferFlag.previousNames) &&
        Objects.equals(this.associates, eventDataReferFlag.associates) &&
        Objects.equals(this.profileNotes, eventDataReferFlag.profileNotes) &&
        Objects.equals(this.details, eventDataReferFlag.details) &&
        Objects.equals(this.documents, eventDataReferFlag.documents) &&
        Objects.equals(this.riskography, eventDataReferFlag.riskography) &&
        Objects.equals(this.sources, eventDataReferFlag.sources) &&
        Objects.equals(this.remarks, eventDataReferFlag.remarks) &&
        Objects.equals(this.identifications, eventDataReferFlag.identifications) &&
        Objects.equals(this.locations, eventDataReferFlag.locations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventType, matchId, gender, deceasedDates, modifiedDate, providerName, matchName, matchDates, matchCountries, score, aliases, previousNames, associates, profileNotes, details, documents, riskography, sources, remarks, identifications, locations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventDataReferFlag {\n");
    
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    matchId: ").append(toIndentedString(matchId)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    deceasedDates: ").append(toIndentedString(deceasedDates)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    providerName: ").append(toIndentedString(providerName)).append("\n");
    sb.append("    matchName: ").append(toIndentedString(matchName)).append("\n");
    sb.append("    matchDates: ").append(toIndentedString(matchDates)).append("\n");
    sb.append("    matchCountries: ").append(toIndentedString(matchCountries)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    previousNames: ").append(toIndentedString(previousNames)).append("\n");
    sb.append("    associates: ").append(toIndentedString(associates)).append("\n");
    sb.append("    profileNotes: ").append(toIndentedString(profileNotes)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    riskography: ").append(toIndentedString(riskography)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("    remarks: ").append(toIndentedString(remarks)).append("\n");
    sb.append("    identifications: ").append(toIndentedString(identifications)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

