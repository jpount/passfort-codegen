/*
 * PassFort API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 4.0.0
 * Contact: support@passfort.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * This flag provides information on outstanding actions to complete an application.  * &#x60;DECIDED&#x60;: the current status of the application is &#x60;APPROVED&#x60;, &#x60;REJECTED&#x60; or &#x60;CANCELLED&#x60; nothing further needs to be performed on the application. *&#x60;REQUIRES_RISK_SCORE&#x60;: the risk score of the profile cannot currently be determined, usually more information is required to change from this flag. * &#x60;WAITING_ON_COLLECTION_STEPS&#x60;: there are outstanding CollectionSteps on the profile. * &#x60;WAITING_ON_CHECKS&#x60;: there are checks in progress. * &#x60;REQUIRES_MANUAL_TASK_COMPLETION&#x60;: there is an incomplete task on the application. * &#x60;READY_FOR_DECISION&#x60;: awaiting a final decision on application.  Only one flag will be returned, if multiple are applicable the first according to the order here will be returned.
 */
public enum ProductApplicationFlag {
  
  AUTOMATING("AUTOMATING"),
  
  DECIDED("DECIDED"),
  
  WAITING_ON_COLLECTION_STEPS("WAITING_ON_COLLECTION_STEPS"),
  
  WAITING_ON_CHECKS("WAITING_ON_CHECKS"),
  
  REQUIRES_MANUAL_TASK_COMPLETION("REQUIRES_MANUAL_TASK_COMPLETION"),
  
  READY_FOR_DECISION("READY_FOR_DECISION"),
  
  REQUIRES_RISK_SCORE("REQUIRES_RISK_SCORE"),
  
  RECALCULATING_RISK("RECALCULATING_RISK");

  private String value;

  ProductApplicationFlag(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static ProductApplicationFlag fromValue(String text) {
    for (ProductApplicationFlag b : ProductApplicationFlag.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + text + "'");
  }
}

